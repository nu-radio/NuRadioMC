Search.setIndex({"docnames": ["Introduction/pages/contributing", "Introduction/pages/conventions", "Introduction/pages/installation", "Introduction/pages/introduction", "Introduction/pages/welcome_page", "NuRadioMC/apidoc/NuRadioMC.EvtGen", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII", "NuRadioMC/apidoc/NuRadioMC.SignalGen", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations", "NuRadioMC/apidoc/NuRadioMC.SignalProp", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing", "NuRadioMC/apidoc/NuRadioMC.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.output_writer_hdf5", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.time_logger", "NuRadioMC/apidoc/NuRadioMC.utilities", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities", "NuRadioMC/apidoc/NuRadioMC.utilities.medium", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting", "NuRadioMC/apidoc/NuRadioMC.utilities.runner", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5", "NuRadioMC/pages/HDF5_structure", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2", "NuRadioMC/pages/Manuals/event_generation", "NuRadioMC/pages/Manuals/example-multi_station_coincidences", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial", "NuRadioMC/pages/Manuals/icemodels", "NuRadioMC/pages/Manuals/running_on_a_cluster", "NuRadioMC/pages/Manuals/signal_generation_emitter", "NuRadioMC/pages/Manuals/signal_generation_shower", "NuRadioMC/pages/Manuals/signal_propagation", "NuRadioMC/pages/Manuals/simulation_configuration", "NuRadioMC/pages/Manuals/veff_tutorial", "NuRadioMC/pages/code_documentation", "NuRadioMC/pages/manuals", "NuRadioMC/pages/welcome_page", "NuRadioReco/apidoc/NuRadioReco.detector", "NuRadioReco/apidoc/NuRadioReco.detector.ARA", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector", "NuRadioReco/apidoc/NuRadioReco.detector.amp", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern", "NuRadioReco/apidoc/NuRadioReco.detector.detector", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector", "NuRadioReco/apidoc/NuRadioReco.detector.response", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector", "NuRadioReco/apidoc/NuRadioReco.framework", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower", "NuRadioReco/apidoc/NuRadioReco.framework.base_station", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace", "NuRadioReco/apidoc/NuRadioReco.framework.channel", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field", "NuRadioReco/apidoc/NuRadioReco.framework.emitter", "NuRadioReco/apidoc/NuRadioReco.framework.event", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization", "NuRadioReco/apidoc/NuRadioReco.framework.parameters", "NuRadioReco/apidoc/NuRadioReco.framework.particle", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel", "NuRadioReco/apidoc/NuRadioReco.framework.sim_emitter", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station", "NuRadioReco/apidoc/NuRadioReco.framework.station", "NuRadioReco/apidoc/NuRadioReco.framework.trigger", "NuRadioReco/apidoc/NuRadioReco.modules", "NuRadioReco/apidoc/NuRadioReco.modules.ARA", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.triggerBoardResponse", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter", "NuRadioReco/apidoc/NuRadioReco.modules.base", "NuRadioReco/apidoc/NuRadioReco.modules.base.module", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelCWNotchFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.custom", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators", "NuRadioReco/apidoc/NuRadioReco.modules.io", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel", "NuRadioReco/apidoc/NuRadioReco.utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux", "NuRadioReco/apidoc/NuRadioReco.utilities.dataservers", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator", "NuRadioReco/apidoc/NuRadioReco.utilities.fft", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities", "NuRadioReco/apidoc/NuRadioReco.utilities.ice", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.logging", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses", "NuRadioReco/apidoc/NuRadioReco.utilities.noise", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing", "NuRadioReco/apidoc/NuRadioReco.utilities.templates", "NuRadioReco/apidoc/NuRadioReco.utilities.timing", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.units", "NuRadioReco/apidoc/NuRadioReco.utilities.version", "NuRadioReco/pages/code_documentation", "NuRadioReco/pages/detector/antennamodels", "NuRadioReco/pages/detector/detector", "NuRadioReco/pages/detector/detector_database_fields", "NuRadioReco/pages/detector/rnog", "NuRadioReco/pages/detector_tree", "NuRadioReco/pages/event_display", "NuRadioReco/pages/event_structure", "NuRadioReco/pages/how_to/vertex_reconstruction", "NuRadioReco/pages/howto_documentation", "NuRadioReco/pages/nur_modules", "NuRadioReco/pages/times", "NuRadioReco/pages/utilities", "NuRadioReco/pages/welcome_page", "main"], "filenames": ["Introduction/pages/contributing.rst", "Introduction/pages/conventions.rst", "Introduction/pages/installation.rst", "Introduction/pages/introduction.rst", "Introduction/pages/welcome_page.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.output_writer_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.time_logger.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5.rst", "NuRadioMC/pages/HDF5_structure.rst", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2.rst", "NuRadioMC/pages/Manuals/event_generation.rst", "NuRadioMC/pages/Manuals/example-multi_station_coincidences.rst", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial.rst", "NuRadioMC/pages/Manuals/icemodels.rst", "NuRadioMC/pages/Manuals/running_on_a_cluster.rst", "NuRadioMC/pages/Manuals/signal_generation_emitter.rst", "NuRadioMC/pages/Manuals/signal_generation_shower.rst", "NuRadioMC/pages/Manuals/signal_propagation.rst", "NuRadioMC/pages/Manuals/simulation_configuration.rst", "NuRadioMC/pages/Manuals/veff_tutorial.rst", "NuRadioMC/pages/code_documentation.rst", "NuRadioMC/pages/manuals.rst", "NuRadioMC/pages/welcome_page.rst", "NuRadioReco/apidoc/NuRadioReco.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses.rst", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.amp.rst", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties.rst", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse.rst", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.response.rst", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json.rst", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db.rst", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector.rst", "NuRadioReco/apidoc/NuRadioReco.framework.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace.rst", "NuRadioReco/apidoc/NuRadioReco.framework.channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field.rst", "NuRadioReco/apidoc/NuRadioReco.framework.emitter.rst", "NuRadioReco/apidoc/NuRadioReco.framework.event.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameters.rst", "NuRadioReco/apidoc/NuRadioReco.framework.particle.rst", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_emitter.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.triggerBoardResponse.rst", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.module.rst", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelCWNotchFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow.rst", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.dataservers.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.fft.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.ice.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.logging.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.noise.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.templates.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.timing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.units.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.version.rst", "NuRadioReco/pages/code_documentation.rst", "NuRadioReco/pages/detector/antennamodels.rst", "NuRadioReco/pages/detector/detector.rst", "NuRadioReco/pages/detector/detector_database_fields.rst", "NuRadioReco/pages/detector/rnog.rst", "NuRadioReco/pages/detector_tree.rst", "NuRadioReco/pages/event_display.rst", "NuRadioReco/pages/event_structure.rst", "NuRadioReco/pages/how_to/vertex_reconstruction.rst", "NuRadioReco/pages/howto_documentation.rst", "NuRadioReco/pages/nur_modules.rst", "NuRadioReco/pages/times.rst", "NuRadioReco/pages/utilities.rst", "NuRadioReco/pages/welcome_page.rst", "main.rst"], "titles": ["Contributing to NuRadioMC", "Some notes on conventions", "Installing NuRadioMC / NuRadioReco", "Introduction", "Introduction", "NuRadioMC.EvtGen package", "NuRadioMC.EvtGen.NuRadioMCtoAraSim module", "NuRadioMC.EvtGen.NuRadioProposal module", "NuRadioMC.EvtGen.create_tau_tab module", "NuRadioMC.EvtGen.generate_cylinder module", "NuRadioMC.EvtGen.generate_unforced module", "NuRadioMC.EvtGen.generator module", "NuRadioMC.EvtGen.generator_ASCII module", "NuRadioMC.EvtGen.generator_skeleton module", "NuRadioMC.EvtGen.hdf5_to_ASCII module", "NuRadioMC.EvtGen.proposal_table_manager module", "NuRadioMC.EvtGen.readARAEventList module", "NuRadioMC.EvtGen.readEventList_ASCII module", "NuRadioMC.SignalGen package", "NuRadioMC.SignalGen.ARZ package", "NuRadioMC.SignalGen.ARZ.ARZ module", "NuRadioMC.SignalGen.HCRB2017 module", "NuRadioMC.SignalGen.askaryan module", "NuRadioMC.SignalGen.emitter module", "NuRadioMC.SignalGen.parametrizations module", "NuRadioMC.SignalProp package", "NuRadioMC.SignalProp.analyticraytracing module", "NuRadioMC.SignalProp.directRayTracing module", "NuRadioMC.SignalProp.propagation module", "NuRadioMC.SignalProp.propagation_base_class module", "NuRadioMC.SignalProp.radioproparaytracing module", "NuRadioMC.simulation package", "NuRadioMC.simulation.output_writer_hdf5 module", "NuRadioMC.simulation.simulation module", "NuRadioMC.simulation.time_logger module", "NuRadioMC.utilities package", "NuRadioMC.utilities.Veff module", "NuRadioMC.utilities.attenuation module", "NuRadioMC.utilities.cross_sections module", "NuRadioMC.utilities.dump_hdf5 module", "NuRadioMC.utilities.earth_attenuation module", "NuRadioMC.utilities.fluxes module", "NuRadioMC.utilities.inelasticities module", "NuRadioMC.utilities.medium module", "NuRadioMC.utilities.medium_base module", "NuRadioMC.utilities.merge_hdf5 module", "NuRadioMC.utilities.muon_flux module", "NuRadioMC.utilities.plotting module", "NuRadioMC.utilities.runner module", "NuRadioMC.utilities.runner_example module", "NuRadioMC.utilities.split_hdf5 module", "HDF5 output structure", "HDF5 output structure (v2.2)", "Event Generation", "Example: Multi-station coincidences", "Example: Calculating expected sensitivities", "Ice and attenuation models", "Running on a cluster", "Signal Generation (emitter)", "Signal Generation (from in-ice showers)", "Signal Propagation", "Simulation and configuration", "Example: Calculating effective volume", "Code Documentation", "Manuals", "NuRadioMC Documentation", "NuRadioReco.detector package", "NuRadioReco.detector.ARA package", "NuRadioReco.detector.ARA.analog_components module", "NuRadioReco.detector.ARIANNA package", "NuRadioReco.detector.ARIANNA.analog_components module", "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module", "NuRadioReco.detector.LOFAR package", "NuRadioReco.detector.RNO_G package", "NuRadioReco.detector.RNO_G.analog_components module", "NuRadioReco.detector.RNO_G.db_mongo_read module", "NuRadioReco.detector.RNO_G.db_mongo_write module", "NuRadioReco.detector.RNO_G.rnog_detector module", "NuRadioReco.detector.amp module", "NuRadioReco.detector.antennapattern module", "NuRadioReco.detector.detector module", "NuRadioReco.detector.detector_base module", "NuRadioReco.detector.detector_sql module", "NuRadioReco.detector.detector_sys_uncertainties module", "NuRadioReco.detector.filterresponse module", "NuRadioReco.detector.generic_detector module", "NuRadioReco.detector.response module", "NuRadioReco.detector.sql_to_json module", "NuRadioReco.detector.test_detector_db module", "NuRadioReco.detector.visualize_detector module", "NuRadioReco.framework package", "NuRadioReco.framework.base_shower module", "NuRadioReco.framework.base_station module", "NuRadioReco.framework.base_trace module", "NuRadioReco.framework.channel module", "NuRadioReco.framework.electric_field module", "NuRadioReco.framework.emitter module", "NuRadioReco.framework.event module", "NuRadioReco.framework.hybrid_information module", "NuRadioReco.framework.hybrid_shower module", "NuRadioReco.framework.parameter_serialization module", "NuRadioReco.framework.parameters module", "NuRadioReco.framework.particle module", "NuRadioReco.framework.radio_shower module", "NuRadioReco.framework.sim_channel module", "NuRadioReco.framework.sim_emitter module", "NuRadioReco.framework.sim_station module", "NuRadioReco.framework.station module", "NuRadioReco.framework.trigger module", "NuRadioReco.modules package", "NuRadioReco.modules.ARA package", "NuRadioReco.modules.ARA.hardwareResponseIncorporator module", "NuRadioReco.modules.ARA.triggerSimulator module", "NuRadioReco.modules.ARIANNA package", "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module", "NuRadioReco.modules.LOFAR package", "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module", "NuRadioReco.modules.LOFAR.beamforming_utilities module", "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module", "NuRadioReco.modules.LOFAR.stationPulseFinder module", "NuRadioReco.modules.LOFAR.stationRFIFilter module", "NuRadioReco.modules.RNO_G package", "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module", "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module", "NuRadioReco.modules.RNO_G.triggerBoardResponse module", "NuRadioReco.modules.analogToDigitalConverter module", "NuRadioReco.modules.base package", "NuRadioReco.modules.base.module module", "NuRadioReco.modules.beamFormingDirectionFitter module", "NuRadioReco.modules.channelAddCableDelay module", "NuRadioReco.modules.channelAntennaDedispersion module", "NuRadioReco.modules.channelBandPassFilter module", "NuRadioReco.modules.channelCWNotchFilter module", "NuRadioReco.modules.channelGalacticNoiseAdder module", "NuRadioReco.modules.channelGenericNoiseAdder module", "NuRadioReco.modules.channelLengthAdjuster module", "NuRadioReco.modules.channelResampler module", "NuRadioReco.modules.channelSignalReconstructor module", "NuRadioReco.modules.channelStopFilter module", "NuRadioReco.modules.channelTemplateCorrelation module", "NuRadioReco.modules.channelTimeOffsetCalculator module", "NuRadioReco.modules.channelTimeWindow module", "NuRadioReco.modules.correlationDirectionFitter module", "NuRadioReco.modules.cosmicRayEnergyReconstructor module", "NuRadioReco.modules.custom package", "NuRadioReco.modules.custom.deltaT package", "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module", "NuRadioReco.modules.efieldAirToIcePropagator module", "NuRadioReco.modules.efieldRadioInterferometricReconstruction module", "NuRadioReco.modules.efieldTimeDirectionFitter module", "NuRadioReco.modules.efieldToVoltageConverter module", "NuRadioReco.modules.efieldToVoltageConverterPerEfield module", "NuRadioReco.modules.electricFieldBandPassFilter module", "NuRadioReco.modules.electricFieldResampler module", "NuRadioReco.modules.electricFieldSignalReconstructor module", "NuRadioReco.modules.eventTypeIdentifier module", "NuRadioReco.modules.iftElectricFieldReconstructor package", "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module", "NuRadioReco.modules.iftElectricFieldReconstructor.operators module", "NuRadioReco.modules.io package", "NuRadioReco.modules.io.LOFAR package", "NuRadioReco.modules.io.LOFAR.rawTBBio module", "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module", "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module", "NuRadioReco.modules.io.LOFAR.readLOFARData module", "NuRadioReco.modules.io.NuRadioRecoio module", "NuRadioReco.modules.io.RNO_G package", "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module", "NuRadioReco.modules.io.coreas package", "NuRadioReco.modules.io.coreas.coreas module", "NuRadioReco.modules.io.coreas.readCoREAS module", "NuRadioReco.modules.io.coreas.readCoREASShower module", "NuRadioReco.modules.io.coreas.readCoREASStation module", "NuRadioReco.modules.io.coreas.readCoREASStationGrid module", "NuRadioReco.modules.io.coreas.simulationSelector module", "NuRadioReco.modules.io.eventReader module", "NuRadioReco.modules.io.eventWriter module", "NuRadioReco.modules.io.event_parser_factory module", "NuRadioReco.modules.io.snowshovel package", "NuRadioReco.modules.io.snowshovel.readARIANNAData module", "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module", "NuRadioReco.modules.measured_noise package", "NuRadioReco.modules.measured_noise.ARIANNA package", "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module", "NuRadioReco.modules.measured_noise.RNO_G package", "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module", "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module", "NuRadioReco.modules.neutrinoDirectionReconstructor package", "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module", "NuRadioReco.modules.neutrinoVertexReconstructor package", "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module", "NuRadioReco.modules.phasedarray package", "NuRadioReco.modules.phasedarray.triggerSimulator module", "NuRadioReco.modules.sphericalWaveFitter module", "NuRadioReco.modules.templateDirectionFitter module", "NuRadioReco.modules.trigger package", "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module", "NuRadioReco.modules.trigger.envelopeTrigger module", "NuRadioReco.modules.trigger.highLowThreshold module", "NuRadioReco.modules.trigger.multiHighLowThreshold module", "NuRadioReco.modules.trigger.powerIntegration module", "NuRadioReco.modules.trigger.rnog_surface_trigger module", "NuRadioReco.modules.trigger.simpleThreshold module", "NuRadioReco.modules.triggerTimeAdjuster module", "NuRadioReco.modules.voltageToAnalyticEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverterPerChannel module", "NuRadioReco.utilities package", "NuRadioReco.utilities.analytic_pulse module", "NuRadioReco.utilities.bandpass_filter module", "NuRadioReco.utilities.cr_flux module", "NuRadioReco.utilities.dataservers module", "NuRadioReco.utilities.diodeSimulator module", "NuRadioReco.utilities.fft module", "NuRadioReco.utilities.geometryUtilities module", "NuRadioReco.utilities.ice module", "NuRadioReco.utilities.interferometry module", "NuRadioReco.utilities.io_utilities module", "NuRadioReco.utilities.logging module", "NuRadioReco.utilities.metaclasses module", "NuRadioReco.utilities.noise module", "NuRadioReco.utilities.particle_names module", "NuRadioReco.utilities.signal_processing module", "NuRadioReco.utilities.templates module", "NuRadioReco.utilities.timing module", "NuRadioReco.utilities.traceWindows module", "NuRadioReco.utilities.trace_utilities module", "NuRadioReco.utilities.units module", "NuRadioReco.utilities.version module", "Code Documentation", "Antenna Models", "Detector Description", "Properties of Detector Description", "The RNO-G detector class and database interface", "Detector Description", "Event Display", "Data Structure", "Use the Vertex Reconstruction Modules", "Manuals", "Modules", "overview of times", "Utilities", "NuRadioReco Documentation", "Welcome to NuRadio\u2019s documentation!"], "terms": {"thank": [0, 59, 238, 239], "you": [0, 2, 3, 11, 26, 51, 52, 56, 60, 62, 74, 75, 76, 77, 81, 83, 85, 92, 93, 94, 95, 97, 104, 106, 107, 148, 162, 174, 229, 232, 235, 237, 239, 241, 243], "consid": [0, 2, 11, 26, 27, 29, 30, 36, 40, 53, 54, 59, 61, 77, 101, 116, 119, 120, 124, 205], "i": [0, 1, 2, 3, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 97, 99, 101, 103, 104, 106, 107, 108, 112, 114, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 148, 150, 151, 155, 157, 158, 161, 162, 164, 165, 167, 169, 170, 171, 173, 175, 176, 177, 180, 183, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244], "intend": 0, "commun": [0, 59, 101], "base": [0, 1, 7, 11, 20, 22, 24, 26, 27, 29, 30, 32, 33, 34, 40, 43, 44, 46, 48, 57, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 220, 221, 222, 225], "simul": [0, 3, 10, 11, 22, 23, 24, 26, 27, 29, 30, 36, 43, 44, 48, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 77, 79, 81, 83, 85, 86, 95, 97, 101, 104, 106, 111, 112, 114, 122, 123, 124, 125, 133, 140, 150, 151, 169, 170, 171, 172, 173, 174, 186, 194, 199, 200, 201, 202, 204, 205, 206, 207, 232, 233, 235, 238, 241, 242], "reconstruct": [0, 3, 41, 58, 59, 61, 62, 74, 81, 83, 85, 101, 114, 116, 122, 123, 128, 140, 142, 143, 148, 149, 154, 157, 176, 180, 191, 192, 206, 207, 229, 233, 235, 238, 240, 241, 242, 244], "softwar": [0, 57, 62, 161, 185, 232], "radio": [0, 2, 3, 11, 21, 22, 24, 30, 51, 53, 55, 56, 58, 59, 60, 62, 77, 91, 97, 99, 101, 103, 133, 143, 148, 157, 167, 172, 206, 228, 233], "neutrino": [0, 1, 3, 10, 11, 21, 22, 24, 30, 33, 38, 40, 41, 51, 53, 54, 57, 58, 59, 61, 62, 92, 95, 101, 106, 107, 139, 155, 225, 238, 239], "detector": [0, 2, 3, 21, 22, 24, 26, 27, 29, 30, 32, 33, 40, 41, 51, 52, 53, 56, 57, 59, 94, 95, 97, 104, 112, 114, 116, 119, 123, 124, 125, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 157, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 186, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 222, 227, 228, 231, 232, 239, 241, 242, 243, 244, 245], "everyon": 0, "invit": 0, "us": [0, 1, 3, 7, 10, 11, 20, 21, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 51, 52, 54, 55, 57, 58, 60, 61, 62, 75, 76, 77, 80, 81, 83, 85, 86, 91, 92, 93, 94, 95, 97, 99, 101, 103, 104, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 139, 140, 142, 148, 149, 150, 155, 157, 161, 162, 164, 167, 171, 174, 175, 176, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 219, 220, 222, 227, 228, 229, 232, 233, 234, 235, 237, 240, 241, 242, 243], "experi": [0, 53, 59, 118, 120, 125, 233, 238, 241], "If": [0, 2, 3, 7, 10, 11, 20, 21, 23, 24, 26, 27, 29, 30, 33, 34, 43, 44, 51, 52, 53, 54, 56, 59, 61, 62, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 108, 112, 114, 120, 122, 123, 124, 125, 131, 134, 135, 136, 137, 140, 148, 151, 157, 161, 162, 164, 165, 167, 170, 171, 173, 175, 176, 185, 186, 191, 194, 200, 205, 206, 207, 214, 219, 220, 222, 224, 227, 228, 232, 233, 234, 237, 238, 241, 242, 243], "significantli": [0, 60], "pleas": [0, 1, 2, 3, 21, 51, 53, 60, 62, 214, 217, 232, 241], "contact": 0, "anel": 0, "cg": 0, "laser": [0, 76], "github": [0, 2, 30, 53, 55, 60, 62, 68, 77, 133, 167], "so": [0, 2, 20, 26, 27, 29, 33, 42, 48, 51, 53, 56, 57, 59, 60, 61, 62, 77, 81, 82, 83, 85, 124, 125, 133, 155, 161, 164, 186, 206, 215, 220, 228, 229, 232, 233, 234, 237, 238, 239, 241, 242, 243], "we": [0, 2, 11, 22, 23, 24, 26, 36, 51, 53, 54, 56, 57, 59, 60, 61, 62, 77, 79, 95, 119, 140, 161, 185, 186, 215, 220, 228, 232, 233, 234, 235, 238, 239, 241, 242, 243], "ar": [0, 1, 2, 3, 7, 10, 11, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 38, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 93, 94, 95, 97, 101, 104, 107, 108, 112, 114, 117, 118, 120, 122, 123, 124, 125, 131, 133, 134, 135, 137, 138, 139, 140, 148, 155, 157, 161, 164, 165, 167, 169, 170, 171, 173, 175, 176, 180, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 207, 208, 209, 212, 215, 217, 220, 222, 228, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243], "inform": [0, 7, 11, 22, 23, 24, 26, 27, 29, 30, 33, 34, 40, 51, 52, 53, 56, 59, 60, 61, 62, 75, 76, 77, 79, 97, 120, 124, 125, 132, 134, 157, 165, 167, 175, 194, 220, 227, 232, 233, 235, 241], "about": [0, 22, 23, 24, 26, 27, 29, 30, 36, 51, 52, 56, 61, 62, 75, 76, 77, 97, 122, 124, 233, 238, 243], "ongo": 0, "activ": [0, 10, 21, 26, 33, 76, 138, 237, 243], "both": [0, 1, 2, 20, 24, 26, 53, 54, 56, 59, 60, 79, 86, 118, 157, 161, 171, 176, 194, 207, 220, 232, 233, 234, 238, 239, 242], "also": [0, 2, 11, 20, 26, 27, 29, 30, 34, 36, 43, 44, 51, 53, 56, 59, 60, 61, 62, 65, 77, 81, 83, 85, 93, 94, 101, 104, 107, 118, 119, 125, 127, 133, 148, 157, 161, 162, 164, 186, 192, 194, 206, 215, 220, 227, 229, 233, 235, 238, 239, 241, 242, 244], "abl": [0, 2, 43, 44, 57, 59, 164, 233, 241], "provid": [0, 1, 2, 11, 20, 23, 24, 26, 33, 34, 42, 43, 46, 51, 52, 53, 56, 59, 60, 61, 62, 65, 77, 79, 81, 86, 97, 101, 120, 133, 136, 148, 151, 164, 167, 206, 208, 219, 232, 233, 238, 239, 241, 243, 244], "commit": [0, 59, 101, 230], "access": [0, 2, 43, 44, 51, 52, 53, 56, 59, 75, 76, 79, 81, 101, 165, 167, 232, 233, 235, 238], "repositori": [0, 2, 62, 101, 230, 238], "find": [0, 3, 26, 27, 29, 30, 51, 53, 56, 60, 75, 76, 119, 120, 132, 148, 157, 164, 171, 194, 208, 218, 220, 239], "an": [0, 1, 2, 7, 10, 11, 20, 23, 24, 26, 27, 28, 30, 32, 33, 36, 40, 43, 44, 50, 51, 52, 53, 55, 56, 58, 59, 61, 76, 77, 79, 81, 83, 85, 86, 93, 94, 95, 97, 101, 104, 108, 112, 117, 119, 120, 122, 125, 127, 128, 134, 140, 143, 148, 157, 161, 164, 167, 169, 171, 176, 186, 191, 192, 194, 200, 201, 205, 206, 207, 212, 215, 216, 218, 220, 222, 227, 228, 232, 233, 234, 235, 238, 239, 241, 242, 243], "issu": [0, 53, 59, 194, 199, 203, 204], "bug": 0, "creat": [0, 2, 7, 11, 26, 33, 51, 52, 53, 54, 55, 57, 59, 60, 61, 76, 77, 81, 101, 161, 162, 164, 169, 170, 173, 191, 194, 219, 220, 227, 232, 233, 234, 241, 243], "want": [0, 2, 11, 26, 53, 54, 56, 59, 60, 61, 62, 74, 75, 76, 77, 81, 83, 85, 97, 125, 162, 234, 235, 237, 238, 239, 241, 243], "your": [0, 2, 26, 27, 29, 30, 43, 44, 57, 62, 74, 75, 76, 93, 94, 95, 104, 148, 161, 229, 235, 237, 241], "new": [0, 7, 11, 20, 23, 24, 26, 27, 29, 30, 42, 44, 48, 53, 56, 59, 60, 61, 76, 77, 81, 83, 85, 95, 107, 127, 136, 153, 155, 161, 162, 172, 183, 185, 186, 217, 220, 232, 233, 235, 238, 243], "branch": [0, 42, 53, 56, 241], "make": [0, 11, 26, 53, 54, 59, 61, 62, 114, 118, 123, 148, 167, 174, 224, 233, 237, 238, 239, 241, 243], "pull": [0, 53, 79, 164, 167], "request": [0, 20, 24, 43, 44, 53, 59, 61, 75, 76, 77, 79, 85, 124, 125, 170, 173, 194, 211, 213, 232, 233], "loos": 0, "follow": [0, 2, 11, 26, 29, 30, 36, 42, 43, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 76, 79, 80, 97, 120, 125, 143, 176, 185, 206, 232, 233, 234, 241, 242], "git": [0, 2, 101, 230], "flow": [0, 241], "model": [0, 11, 20, 22, 23, 24, 26, 27, 29, 30, 33, 37, 38, 40, 43, 44, 46, 53, 58, 60, 61, 62, 64, 77, 79, 81, 82, 83, 85, 90, 101, 133, 148, 157, 214, 217, 227, 236, 239, 241], "A": [0, 1, 10, 11, 21, 22, 24, 26, 30, 32, 33, 34, 38, 40, 43, 44, 51, 52, 53, 56, 57, 59, 60, 61, 62, 75, 76, 77, 79, 82, 86, 97, 101, 120, 125, 132, 148, 157, 161, 164, 167, 170, 171, 183, 192, 206, 215, 220, 232, 233, 234, 235, 238, 239, 241], "detail": [0, 1, 2, 7, 11, 22, 23, 24, 26, 38, 43, 51, 52, 53, 56, 57, 58, 59, 60, 76, 81, 118, 167, 233, 238], "tutori": [0, 3, 54, 62, 65, 244], "given": [0, 1, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 32, 33, 40, 42, 46, 53, 54, 55, 56, 59, 60, 61, 75, 76, 81, 83, 85, 97, 101, 106, 108, 112, 117, 119, 120, 124, 125, 132, 134, 148, 150, 161, 162, 164, 165, 169, 171, 172, 175, 177, 191, 192, 194, 201, 205, 212, 214, 216, 218, 228, 233, 234, 238, 241, 242], "here": [0, 1, 2, 3, 26, 27, 29, 30, 43, 44, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 77, 79, 118, 120, 131, 134, 148, 161, 206, 229, 233, 234, 241, 243], "short": [0, 23, 59, 61, 242], "summari": 0, "below": [0, 1, 2, 7, 11, 21, 26, 33, 40, 51, 53, 55, 56, 59, 60, 61, 77, 83, 125, 131, 157, 161, 167, 194, 199, 203, 204, 211, 217, 232, 235, 241], "The": [0, 1, 2, 7, 10, 11, 20, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 40, 42, 43, 44, 46, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 91, 92, 93, 94, 95, 97, 99, 101, 103, 104, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 142, 148, 149, 150, 151, 161, 162, 164, 167, 169, 171, 180, 183, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 217, 218, 220, 222, 224, 228, 232, 234, 236, 237, 238, 239, 241, 242, 243], "master": [0, 53, 55, 61, 68], "reserv": [0, 48], "stabl": [0, 120], "releas": [0, 2], "user": [0, 2, 7, 11, 22, 23, 24, 26, 33, 43, 44, 53, 57, 59, 60, 61, 81, 83, 85, 120, 125, 161, 173, 217, 232, 234, 241, 243], "can": [0, 2, 3, 7, 11, 22, 23, 24, 26, 27, 29, 30, 33, 36, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 75, 76, 77, 79, 81, 83, 85, 91, 93, 94, 95, 99, 101, 103, 104, 108, 114, 120, 122, 123, 125, 131, 132, 134, 135, 140, 148, 155, 157, 161, 162, 164, 165, 167, 171, 174, 176, 180, 186, 194, 199, 200, 201, 202, 203, 204, 205, 206, 220, 221, 222, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244], "alwai": [0, 24, 43, 44, 56, 59, 161, 217, 233, 238, 243], "check": [0, 3, 7, 26, 27, 29, 30, 33, 51, 52, 53, 54, 56, 57, 77, 81, 83, 84, 85, 92, 97, 106, 107, 112, 132, 164, 186, 191, 194, 220, 233, 238, 243], "out": [0, 3, 30, 53, 54, 57, 61, 70, 74, 75, 76, 108, 122, 140, 161, 162, 167, 214, 228, 233, 238], "get": [0, 2, 11, 20, 24, 26, 30, 33, 37, 42, 43, 44, 54, 56, 59, 60, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 95, 97, 108, 114, 123, 124, 125, 132, 140, 150, 161, 162, 164, 175, 186, 205, 212, 214, 216, 217, 220, 225, 228, 233, 238, 242], "latest": [0, 2, 51, 161, 233], "all": [0, 1, 2, 7, 10, 11, 15, 24, 26, 27, 28, 29, 30, 33, 34, 36, 38, 44, 46, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 75, 76, 77, 79, 81, 83, 85, 86, 92, 97, 101, 106, 107, 108, 116, 118, 119, 120, 122, 124, 125, 127, 128, 132, 135, 139, 140, 142, 148, 161, 162, 164, 165, 167, 171, 172, 175, 176, 180, 186, 194, 199, 200, 201, 202, 203, 204, 205, 220, 222, 225, 229, 232, 233, 235, 237, 238, 239, 241, 242, 243], "develop": [0, 20, 232], "happen": [0, 40, 51, 52, 53, 59, 61, 75, 76, 125, 222], "featur": [0, 2, 53, 56, 57, 60, 65, 94, 104, 161, 233, 241, 244], "merg": [0, 33, 51, 52, 53, 54, 61, 107], "after": [0, 30, 48, 53, 58, 61, 81, 83, 85, 93, 94, 95, 101, 104, 108, 120, 124, 125, 150, 164, 176, 194, 214, 222, 233, 238, 241, 242], "review": [0, 22, 24], "sure": [0, 26, 27, 29, 30, 59, 61, 93, 94, 95, 104, 118, 148, 162, 237, 239, 241], "specifi": [0, 1, 7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 79, 81, 83, 85, 86, 92, 93, 94, 95, 104, 106, 107, 114, 122, 123, 124, 125, 131, 133, 134, 135, 138, 141, 142, 150, 152, 155, 157, 161, 162, 167, 173, 176, 177, 180, 186, 191, 194, 199, 200, 201, 202, 203, 204, 205, 211, 218, 220, 222, 232, 233, 234, 235, 241, 242], "when": [0, 11, 26, 30, 33, 44, 51, 53, 56, 59, 60, 61, 75, 76, 77, 80, 85, 92, 97, 101, 106, 107, 114, 123, 124, 140, 148, 161, 162, 167, 176, 186, 206, 215, 216, 220, 222, 233, 234, 235, 238, 239, 241, 242, 243], "allow": [0, 2, 20, 30, 33, 36, 43, 44, 53, 54, 55, 56, 59, 60, 61, 62, 75, 76, 77, 81, 83, 85, 86, 94, 104, 119, 120, 125, 127, 131, 167, 186, 211, 220, 222, 225, 233, 235, 238, 241], "hotfix": 0, "These": [0, 2, 51, 52, 53, 56, 59, 61, 120, 161, 235, 241, 242], "well": [0, 2, 22, 23, 24, 51, 52, 53, 56, 59, 60, 61, 101, 118, 119, 120, 162, 164, 176, 185, 220, 233, 235, 238, 239], "where": [0, 1, 7, 11, 20, 21, 23, 26, 34, 36, 40, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 71, 79, 81, 83, 85, 101, 114, 119, 122, 123, 131, 132, 134, 138, 141, 161, 164, 185, 186, 191, 199, 200, 201, 202, 203, 204, 214, 215, 227, 233, 235, 238, 239, 242], "tag": [0, 164], "made": [0, 59, 74, 148], "changelog": 0, "correct": [0, 1, 2, 30, 33, 36, 57, 58, 59, 60, 61, 74, 80, 81, 82, 83, 85, 86, 101, 124, 140, 155, 161, 162, 167, 191, 192, 215, 233, 242, 243], "To": [0, 1, 2, 30, 36, 52, 54, 56, 57, 58, 59, 60, 61, 62, 65, 77, 81, 95, 215, 220, 228, 233, 235, 238, 239, 241, 242, 243, 244], "start": [0, 7, 20, 23, 26, 27, 29, 30, 34, 40, 48, 51, 52, 53, 54, 59, 60, 61, 75, 76, 93, 101, 108, 119, 120, 125, 137, 157, 161, 164, 167, 194, 200, 205, 233, 237, 238], "first": [0, 2, 7, 10, 11, 26, 27, 29, 30, 51, 52, 53, 54, 56, 58, 59, 61, 77, 79, 81, 83, 85, 86, 92, 95, 97, 101, 106, 107, 120, 122, 138, 139, 148, 150, 161, 167, 177, 186, 192, 194, 219, 220, 225, 228, 232, 233, 234, 235, 237, 239, 241, 242], "checkout": 0, "b": [0, 1, 26, 30, 43, 44, 51, 60, 131, 198, 206, 207], "my_new_featur": 0, "which": [0, 1, 2, 7, 10, 11, 20, 23, 26, 27, 28, 29, 30, 33, 34, 36, 40, 43, 44, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 79, 81, 83, 85, 86, 92, 93, 94, 95, 101, 104, 106, 107, 108, 112, 114, 118, 119, 120, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 148, 155, 157, 158, 161, 162, 164, 167, 169, 170, 173, 176, 180, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 212, 215, 216, 218, 220, 222, 228, 232, 233, 234, 235, 238, 241, 242, 243], "should": [0, 2, 7, 11, 24, 26, 27, 29, 30, 33, 34, 36, 43, 44, 46, 53, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 79, 81, 83, 85, 93, 94, 95, 97, 104, 107, 108, 114, 116, 119, 120, 122, 123, 124, 125, 127, 131, 132, 134, 135, 140, 141, 150, 155, 157, 161, 162, 165, 167, 186, 191, 192, 194, 199, 215, 217, 218, 222, 224, 228, 229, 233, 237, 238, 239, 241], "replac": [0, 20, 44, 85, 114, 123, 127, 131, 162, 233, 241], "line": [0, 3, 20, 21, 22, 24, 26, 27, 28, 36, 53, 56, 57, 59, 62, 131, 148, 152, 192, 194, 211, 218, 220], "now": [0, 2, 34, 59, 60, 61, 77, 161, 179, 241], "written": [0, 11, 33, 53, 59, 60, 61, 75, 76, 161, 176, 229, 233, 238], "fix": [0, 26, 48, 53, 54, 59, 124, 125, 162, 173, 185, 214, 234, 242], "push": 0, "normal": [0, 22, 23, 24, 26, 33, 36, 53, 86, 114, 123, 134, 210, 215, 216, 218, 233], "except": [0, 1, 33, 53, 176, 209, 220, 238], "need": [0, 2, 11, 15, 20, 22, 23, 24, 26, 29, 33, 41, 43, 44, 53, 54, 55, 56, 57, 59, 60, 61, 62, 70, 74, 79, 81, 83, 85, 101, 108, 112, 120, 125, 131, 135, 148, 161, 171, 174, 183, 186, 192, 194, 199, 200, 201, 202, 203, 204, 206, 207, 214, 222, 228, 229, 232, 233, 234, 235, 238, 239, 243], "includ": [0, 1, 2, 3, 26, 27, 29, 30, 33, 41, 43, 44, 51, 52, 59, 60, 62, 77, 81, 83, 85, 95, 97, 122, 124, 131, 134, 148, 157, 161, 162, 186, 191, 241, 242], "set": [0, 2, 7, 10, 11, 20, 21, 23, 24, 26, 27, 29, 30, 33, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 81, 83, 85, 92, 93, 94, 95, 97, 104, 106, 107, 108, 116, 118, 119, 120, 124, 125, 127, 133, 134, 137, 139, 141, 146, 148, 150, 154, 155, 157, 161, 162, 164, 165, 167, 170, 171, 173, 175, 176, 186, 191, 192, 194, 196, 200, 201, 205, 206, 208, 220, 222, 224, 225, 233, 234, 235, 238, 239, 241, 242], "upstream": 0, "initi": [0, 11, 26, 33, 34, 42, 43, 53, 77, 81, 83, 85, 93, 95, 101, 104, 108, 148, 165, 167, 170, 171, 172, 173, 191, 206, 220, 235, 238], "onli": [0, 2, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 33, 36, 38, 40, 43, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 92, 93, 94, 95, 97, 101, 104, 106, 107, 108, 114, 119, 122, 123, 125, 131, 134, 140, 148, 155, 157, 161, 162, 164, 167, 170, 173, 180, 185, 186, 205, 206, 207, 214, 215, 217, 221, 228, 233, 235, 238, 239, 241, 243], "exist": [0, 7, 10, 11, 26, 27, 29, 30, 33, 34, 44, 50, 51, 53, 56, 57, 59, 60, 61, 75, 76, 77, 81, 85, 92, 97, 106, 107, 124, 205, 220, 221, 235, 243], "local": [0, 1, 2, 33, 59, 62, 79, 81, 101, 161, 169, 220], "machin": [0, 60], "origin": [0, 1, 11, 20, 22, 23, 24, 26, 30, 85, 91, 99, 101, 103, 114, 123, 125, 148, 162, 194, 228], "onc": [0, 2, 53, 59, 60, 77, 79, 167, 233, 235, 239, 241], "readi": 0, "befor": [0, 26, 30, 34, 53, 59, 74, 93, 94, 95, 104, 108, 114, 120, 123, 124, 135, 150, 161, 167, 185, 191, 192, 194, 199, 206, 222, 241], "introduc": [0, 43, 44, 61, 242, 243], "more": [0, 1, 7, 11, 20, 22, 26, 27, 29, 30, 36, 43, 44, 51, 52, 53, 56, 57, 58, 59, 60, 61, 77, 81, 95, 101, 120, 122, 134, 157, 164, 167, 176, 232, 233, 234, 235, 238, 241], "them": [0, 26, 27, 29, 48, 53, 59, 61, 77, 79, 86, 122, 125, 164, 167, 185, 186, 235, 241], "clearli": 0, "function": [0, 1, 7, 11, 20, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 37, 40, 42, 43, 44, 46, 51, 52, 53, 54, 55, 56, 59, 60, 61, 70, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 108, 114, 118, 119, 120, 122, 123, 124, 125, 131, 132, 134, 137, 141, 157, 161, 162, 164, 165, 167, 170, 171, 173, 175, 177, 186, 205, 206, 207, 211, 212, 216, 217, 220, 227, 228, 233, 235, 238, 239, 241, 242, 243], "have": [0, 1, 2, 3, 7, 10, 11, 20, 30, 33, 38, 43, 44, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 65, 70, 74, 75, 76, 77, 81, 83, 85, 92, 93, 94, 95, 104, 106, 107, 108, 116, 118, 119, 120, 125, 131, 133, 140, 161, 164, 167, 174, 176, 180, 185, 186, 192, 194, 199, 215, 220, 222, 228, 229, 233, 234, 235, 238, 239, 241, 242, 243, 244], "correctli": [0, 22, 23, 24, 51, 52, 53, 120, 234, 237], "comment": [0, 61, 238], "appropri": [0, 26, 53, 77, 162, 205, 228, 233], "reflect": [0, 26, 27, 29, 30, 36, 43, 44, 51, 56, 59, 60, 61, 101, 191, 192, 216, 228, 233, 242], "It": [0, 2, 7, 11, 26, 27, 29, 34, 36, 44, 53, 56, 57, 59, 61, 62, 77, 79, 80, 85, 114, 119, 123, 127, 133, 135, 140, 148, 150, 161, 164, 171, 186, 194, 220, 228, 233, 235, 238, 239, 241], "succesfulli": [0, 2], "complet": [0, 26, 56, 59, 60, 61, 62, 65, 77, 81, 85, 161, 222, 233, 234, 244], "test": [0, 54, 75, 76, 112, 131, 161, 239], "run": [0, 2, 11, 26, 27, 29, 30, 31, 33, 34, 35, 44, 48, 51, 52, 53, 61, 64, 77, 81, 83, 85, 97, 101, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 228, 233, 235, 237, 238, 239, 241], "automat": [0, 2, 11, 23, 26, 30, 33, 44, 56, 57, 59, 60, 61, 81, 83, 85, 93, 94, 95, 104, 151, 155, 161, 194, 232, 233, 238, 241, 242], "each": [0, 3, 7, 20, 22, 23, 24, 26, 27, 29, 30, 33, 36, 40, 51, 52, 53, 54, 57, 58, 59, 61, 75, 76, 77, 95, 101, 108, 118, 120, 122, 124, 127, 134, 140, 146, 148, 151, 161, 162, 167, 170, 172, 173, 191, 194, 203, 206, 207, 208, 214, 218, 222, 233, 234, 235, 238, 239, 241], "time": [0, 1, 7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 41, 46, 48, 51, 52, 53, 54, 60, 61, 75, 76, 77, 79, 81, 82, 83, 85, 86, 90, 92, 93, 94, 95, 101, 104, 106, 107, 108, 112, 119, 120, 125, 127, 128, 131, 132, 133, 134, 136, 137, 138, 140, 141, 148, 150, 157, 161, 162, 164, 167, 180, 183, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 218, 221, 222, 227, 228, 232, 233, 234, 238, 239, 243, 244, 245], "implement": [0, 22, 23, 24, 26, 27, 29, 33, 43, 44, 55, 59, 60, 61, 62, 70, 74, 77, 79, 112, 131, 134, 148, 157, 161, 162, 211, 217, 220, 222, 233, 235, 238, 241], "doe": [0, 2, 22, 24, 26, 27, 29, 30, 34, 44, 51, 53, 59, 61, 75, 76, 85, 92, 93, 94, 95, 104, 106, 107, 125, 131, 132, 161, 164, 186, 191, 192, 233, 238, 239, 242, 243], "break": 0, "anyth": 0, "still": [0, 79, 125, 161, 180, 233, 241], "built": [0, 33, 238, 241], "One": [0, 26, 36, 51, 52, 53, 57, 59, 60, 61, 62, 215, 233], "core": [0, 10, 11, 36, 40, 48, 53, 57, 61, 90, 101, 148, 161, 169, 170, 173], "ha": [0, 1, 7, 11, 20, 26, 51, 53, 54, 56, 57, 59, 60, 61, 62, 77, 81, 83, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 108, 124, 133, 134, 151, 157, 161, 164, 167, 174, 186, 206, 211, 214, 215, 220, 228, 232, 233, 235, 238, 239, 241], "approv": [0, 53, 61], "wait": 0, "least": [0, 61, 85, 97, 125, 150, 186, 206, 207, 222], "24": [0, 86, 101], "hour": [0, 34, 57, 243], "even": [0, 54, 59, 61, 75, 76, 118, 134, 161, 162, 164, 239, 241, 243], "been": [0, 11, 20, 26, 53, 59, 60, 61, 70, 74, 77, 85, 97, 118, 120, 124, 125, 161, 167, 176, 214, 232, 233, 239, 241], "other": [0, 26, 27, 29, 30, 53, 56, 59, 60, 62, 77, 85, 86, 118, 120, 122, 131, 140, 148, 155, 161, 167, 171, 180, 185, 186, 191, 207, 222, 233, 235, 238, 241], "mai": [0, 2, 26, 27, 29, 30, 51, 52, 56, 95, 148, 167, 206, 233, 238, 239, 241], "look": [0, 3, 26, 59, 65, 119, 148, 161, 167, 186, 205, 220, 233, 235, 242, 244], "thei": [0, 7, 43, 44, 51, 52, 53, 54, 59, 61, 77, 85, 95, 125, 161, 164, 167, 232, 233, 238, 239, 242, 243], "might": [0, 11, 20, 26, 51, 54, 56, 77, 93, 94, 95, 101, 104, 124, 134, 148, 167, 183, 185, 233, 235, 241], "someth": [0, 62], "miss": [0, 2, 61, 77, 85, 161, 215, 233], "In": [0, 2, 11, 22, 23, 24, 26, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 95, 114, 120, 123, 131, 136, 161, 162, 167, 186, 206, 207, 211, 215, 233, 234, 238, 241, 242], "gener": [0, 1, 2, 5, 10, 13, 15, 23, 24, 26, 27, 29, 30, 33, 42, 44, 50, 51, 52, 61, 64, 85, 97, 101, 112, 131, 134, 146, 150, 161, 167, 170, 173, 185, 186, 191, 192, 222, 238, 241], "try": [0, 165, 167, 219], "industri": 0, "explicitli": [0, 26, 131, 206, 233, 241], "mention": 0, "resort": [0, 59], "best": [0, 53, 59, 157, 235, 241], "practic": [0, 22, 53, 59, 61, 125, 215, 239], "tri": [0, 2, 171, 194], "pep": 0, "8": [0, 36, 40, 59, 61, 101, 148, 162, 174, 214, 222, 228], "extens": [0, 1, 59], "especi": [0, 93, 94, 95, 104, 215], "physic": [0, 1, 22, 24, 40, 53, 59, 118, 128, 161, 167, 242], "behind": 0, "come": [0, 1, 53, 56, 57, 58, 59, 128, 133, 167, 214, 228, 235, 238, 239], "variabl": [0, 2, 21, 43, 44, 53, 59, 60, 75, 76, 120, 164, 167, 171, 235, 242], "defin": [0, 1, 10, 11, 22, 23, 24, 26, 30, 33, 38, 43, 44, 48, 51, 53, 54, 56, 57, 59, 60, 61, 62, 77, 80, 85, 93, 94, 95, 101, 104, 107, 108, 114, 119, 123, 124, 125, 127, 132, 135, 141, 148, 150, 157, 162, 172, 173, 194, 205, 208, 210, 215, 218, 220, 227, 228, 229, 233, 234, 235, 238, 239, 241, 242, 243], "repres": [0, 23, 34, 40, 53, 56, 161, 169], "unit": [0, 7, 11, 20, 22, 23, 24, 26, 27, 29, 30, 36, 37, 38, 40, 43, 44, 46, 53, 54, 55, 56, 57, 59, 60, 61, 76, 79, 84, 86, 90, 108, 116, 118, 124, 125, 131, 136, 137, 141, 142, 148, 152, 161, 164, 169, 194, 202, 206, 209, 212, 215, 238, 239], "must": [0, 7, 11, 20, 26, 33, 41, 53, 58, 59, 60, 61, 76, 125, 131, 194, 220, 228, 234], "util": [0, 7, 26, 30, 53, 55, 56, 57, 59, 60, 61, 63, 79, 95, 108, 118, 127, 140, 157, 161, 231, 238, 239, 241, 244, 245], "avoid": [0, 7, 26, 27, 29, 77, 164, 171, 220, 233, 238, 241, 242], "ad": [0, 24, 30, 33, 34, 43, 44, 53, 56, 59, 76, 77, 93, 94, 95, 97, 104, 120, 122, 124, 125, 127, 131, 133, 134, 140, 150, 155, 171, 186, 227, 233, 235, 238], "without": [0, 26, 33, 43, 44, 51, 52, 53, 59, 60, 61, 80, 85, 101, 122, 125, 161, 175, 212, 233, 234], "clear": [0, 59, 127], "thi": [0, 2, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 43, 44, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 79, 80, 81, 83, 85, 86, 92, 93, 94, 95, 97, 101, 104, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 131, 132, 133, 134, 138, 140, 141, 148, 151, 155, 157, 161, 162, 164, 165, 167, 171, 173, 175, 176, 183, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 214, 215, 216, 217, 218, 219, 220, 222, 224, 227, 228, 229, 232, 233, 234, 235, 238, 239, 241, 242, 243], "part": [0, 26, 27, 29, 30, 33, 53, 54, 57, 59, 79, 85, 124, 125, 137, 222, 233, 234, 238], "sourc": [0, 7, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 59, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 185, 186, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233], "python": [0, 2, 3, 20, 28, 44, 54, 57, 60, 61, 62, 75, 76, 161, 218, 219, 222, 233, 237, 241], "human": [0, 34, 36, 62], "readabl": [0, 34, 36, 62, 79], "sphinx": [0, 2], "numpi": [0, 2, 20, 26, 30, 33, 43, 44, 59, 60, 61, 79, 120, 122, 134, 161, 162, 215, 243], "syntax": [0, 81, 83], "briefli": 0, "mean": [0, 10, 11, 26, 36, 40, 53, 54, 59, 77, 81, 83, 85, 86, 93, 94, 95, 101, 104, 106, 108, 112, 125, 148, 167, 180, 186, 214, 232, 235, 237, 239, 241], "like": [0, 2, 33, 36, 44, 56, 59, 60, 61, 62, 85, 101, 120, 164, 191, 206, 233, 235, 238, 239, 242], "def": [0, 53, 54, 56, 61, 148, 206, 220, 241], "example_funct": 0, "x": [0, 1, 11, 21, 26, 30, 33, 34, 41, 42, 43, 44, 47, 48, 53, 54, 56, 59, 60, 61, 79, 82, 83, 95, 101, 118, 148, 150, 158, 161, 162, 173, 191, 192, 195, 198, 206, 207, 216, 218, 232, 234, 235], "y": [0, 1, 11, 20, 26, 30, 43, 44, 47, 53, 54, 57, 59, 60, 61, 76, 79, 83, 86, 95, 101, 148, 150, 161, 162, 173, 192, 195, 218, 232, 234, 239], "mode": [0, 30, 33, 40, 51, 52, 61, 81, 85, 97, 107, 114, 122, 123, 125, 129, 150, 155, 158, 176, 205, 238, 242], "quickli": [0, 54], "one": [0, 2, 10, 11, 15, 20, 26, 33, 36, 38, 43, 44, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 92, 95, 97, 106, 107, 108, 112, 120, 122, 124, 125, 139, 140, 148, 150, 161, 162, 165, 169, 171, 172, 175, 186, 194, 215, 217, 220, 221, 222, 225, 228, 233, 238, 241, 243], "descript": [0, 22, 26, 30, 33, 40, 43, 44, 51, 52, 54, 56, 57, 59, 60, 77, 80, 81, 83, 85, 112, 114, 123, 124, 125, 128, 133, 135, 136, 138, 139, 140, 142, 148, 149, 157, 164, 165, 170, 171, 172, 173, 175, 176, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 222, 232, 235, 238, 242, 244, 245], "method": [0, 7, 20, 22, 24, 26, 27, 29, 30, 32, 33, 34, 36, 40, 43, 44, 46, 48, 56, 59, 60, 61, 75, 76, 77, 79, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 221, 222, 225, 228, 233, 238, 239, 241, 243], "space": [0, 41, 56, 59, 60, 61, 101, 122, 148, 158, 206, 208, 215, 238, 239], "option": [0, 7, 11, 20, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 40, 43, 44, 50, 51, 52, 53, 58, 61, 75, 76, 77, 80, 85, 86, 93, 94, 95, 101, 104, 107, 114, 123, 124, 125, 129, 131, 132, 134, 141, 148, 150, 152, 155, 157, 162, 167, 176, 180, 185, 186, 191, 192, 194, 200, 203, 207, 217, 220, 238, 241], "longer": [0, 101, 125, 239], "while": [0, 53, 59, 77, 86, 227, 233, 238, 241], "current": [0, 2, 10, 11, 22, 26, 27, 29, 30, 34, 38, 40, 42, 52, 53, 56, 62, 70, 74, 75, 76, 77, 78, 81, 83, 85, 101, 120, 150, 155, 162, 167, 170, 173, 194, 220, 230, 233, 238, 242], "enforc": [0, 243], "contain": [0, 3, 7, 11, 22, 24, 26, 30, 33, 36, 51, 52, 53, 56, 57, 58, 59, 61, 62, 68, 75, 76, 77, 79, 81, 83, 85, 93, 94, 95, 101, 104, 120, 122, 125, 133, 135, 139, 157, 161, 162, 164, 165, 167, 171, 172, 176, 185, 186, 216, 222, 227, 228, 232, 233, 234, 235, 237, 238, 239], "multipl": [0, 10, 11, 26, 33, 48, 50, 51, 52, 53, 54, 61, 92, 97, 106, 107, 120, 131, 139, 161, 164, 201, 205, 233, 238, 239, 241, 242], "paragraph": 0, "separ": [0, 26, 27, 29, 30, 51, 52, 54, 57, 62, 95, 118, 119, 233, 235, 238, 242], "newlin": 0, "paramet": [0, 7, 10, 11, 13, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 56, 59, 60, 61, 62, 68, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 97, 99, 103, 104, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 180, 185, 186, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 224, 227, 228, 233, 235, 242, 243], "float": [0, 7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 37, 38, 40, 41, 42, 43, 44, 46, 53, 60, 74, 77, 79, 81, 82, 83, 85, 86, 92, 93, 94, 95, 101, 104, 106, 107, 108, 112, 114, 116, 119, 122, 123, 124, 125, 128, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 148, 150, 153, 157, 161, 164, 167, 173, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 214, 215, 216, 217, 222, 224, 227, 228, 232, 242], "e": [0, 1, 10, 11, 20, 21, 22, 23, 24, 26, 30, 33, 36, 40, 41, 42, 43, 44, 48, 51, 52, 53, 54, 59, 61, 62, 75, 76, 77, 79, 81, 82, 83, 85, 92, 93, 94, 95, 101, 104, 106, 107, 108, 114, 120, 123, 131, 138, 140, 148, 161, 162, 164, 167, 174, 180, 208, 212, 215, 220, 222, 228, 232, 233, 234, 235, 238, 241, 243], "g": [0, 1, 2, 26, 33, 38, 40, 42, 51, 53, 56, 62, 75, 76, 77, 79, 81, 82, 83, 85, 86, 92, 101, 106, 107, 122, 123, 131, 140, 148, 161, 162, 167, 174, 213, 215, 220, 232, 233, 236, 238, 239, 241, 242, 243], "distanc": [0, 7, 20, 21, 22, 23, 24, 26, 27, 29, 30, 51, 52, 53, 54, 58, 59, 61, 101, 120, 148, 170, 173, 191, 192, 239], "metr": [0, 53, 59, 61], "int": [0, 7, 10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 41, 42, 46, 50, 53, 59, 60, 71, 75, 76, 77, 79, 81, 83, 85, 86, 93, 94, 95, 97, 104, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 148, 149, 152, 158, 161, 162, 164, 165, 167, 170, 173, 174, 176, 180, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 207, 211, 214, 215, 220, 222, 224, 228], "str": [0, 26, 27, 29, 30, 33, 34, 38, 41, 46, 54, 61, 75, 76, 77, 79, 81, 83, 85, 86, 92, 93, 94, 95, 104, 106, 107, 118, 120, 127, 129, 148, 162, 164, 167, 185, 186, 207, 217, 218, 220], "default": [0, 7, 10, 11, 15, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 38, 40, 42, 43, 44, 50, 53, 57, 59, 60, 61, 62, 68, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 108, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 136, 138, 139, 140, 142, 148, 149, 150, 152, 158, 161, 162, 164, 165, 167, 170, 171, 173, 176, 180, 185, 186, 191, 194, 196, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 216, 220, 221, 222, 224, 228, 233, 235, 239, 241, 242], "some": [0, 2, 3, 4, 26, 51, 52, 53, 56, 59, 60, 62, 77, 120, 131, 134, 140, 148, 161, 164, 167, 217, 228, 233, 235, 239, 241, 242, 243, 245], "limit": [0, 7, 26, 30, 36, 41, 55, 59, 128, 134, 142, 235, 239, 242], "from": [0, 1, 2, 3, 7, 11, 15, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 36, 37, 38, 40, 41, 42, 43, 44, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 68, 70, 75, 76, 77, 79, 81, 82, 83, 85, 86, 92, 101, 104, 106, 107, 108, 111, 112, 114, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 136, 137, 140, 141, 143, 146, 147, 148, 151, 152, 155, 157, 161, 162, 164, 167, 169, 170, 171, 173, 175, 183, 185, 186, 191, 192, 194, 203, 206, 207, 208, 211, 213, 214, 216, 218, 220, 222, 224, 227, 228, 229, 232, 233, 234, 235, 238, 239, 241, 242, 243], "rest": [0, 53, 59, 61], "do": [0, 2, 20, 26, 30, 36, 43, 44, 53, 57, 59, 62, 79, 101, 124, 125, 161, 167, 185, 186, 218, 233, 235, 238, 239, 241, 243], "slowli": 0, "multilin": 0, "entri": [0, 26, 27, 29, 30, 36, 75, 76, 85, 86, 101, 122, 148, 203, 233], "over": [0, 10, 11, 40, 51, 52, 53, 56, 57, 60, 61, 95, 97, 107, 120, 139, 148, 161, 167, 194, 202, 212, 222, 225, 228, 233, 234, 238, 239, 241], "don": [0, 2, 54, 56, 58, 59, 61, 62, 94, 104, 161, 229], "t": [0, 2, 22, 24, 26, 30, 51, 54, 56, 57, 58, 59, 61, 62, 76, 94, 104, 148, 161, 216, 229], "forget": [0, 161, 229], "indent": [0, 54, 77], "return": [0, 7, 11, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 53, 56, 59, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 112, 114, 116, 119, 120, 122, 123, 124, 125, 128, 131, 132, 134, 137, 148, 151, 161, 162, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 177, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 230, 233, 235, 238, 243], "re": [0, 51, 52, 61, 79, 161, 238], "result": [0, 20, 26, 27, 29, 30, 33, 36, 40, 46, 53, 57, 59, 61, 101, 120, 133, 140, 148, 151, 157, 161, 183, 206, 207, 215, 218, 219, 228, 238, 239], "exampl": [0, 3, 11, 26, 27, 29, 30, 34, 36, 51, 52, 57, 59, 61, 64, 65, 70, 74, 75, 76, 77, 81, 83, 85, 86, 120, 131, 162, 167, 185, 186, 206, 220, 228, 229, 233, 234, 238, 239, 241, 242, 243, 244], "block": [0, 61, 101, 120, 122, 164, 167, 241], "1": [0, 2, 7, 10, 11, 12, 20, 23, 26, 27, 29, 30, 33, 36, 40, 41, 43, 44, 46, 51, 53, 56, 58, 59, 60, 61, 76, 79, 80, 86, 95, 101, 108, 114, 118, 119, 120, 122, 123, 124, 125, 128, 131, 133, 136, 138, 139, 141, 142, 148, 149, 150, 158, 161, 162, 164, 167, 170, 173, 174, 185, 186, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 214, 215, 216, 217, 220, 222, 228, 229, 232, 233, 234, 237, 238, 239, 242], "3": [0, 2, 7, 10, 11, 23, 26, 27, 29, 30, 36, 38, 40, 41, 43, 44, 46, 51, 52, 53, 55, 59, 61, 62, 77, 80, 81, 83, 85, 91, 95, 99, 101, 103, 112, 116, 119, 120, 122, 127, 132, 139, 142, 148, 149, 157, 161, 195, 196, 206, 207, 216, 217, 218, 220, 232, 241, 242], "4": [0, 2, 36, 53, 55, 61, 62, 70, 77, 80, 95, 101, 120, 127, 132, 133, 162, 207, 228, 233], "section": [0, 11, 33, 38, 41, 51, 53, 58, 60, 61, 120, 148, 162, 238], "numpydoc": [0, 2], "most": [0, 1, 2, 11, 26, 53, 55, 56, 57, 59, 61, 122, 191, 233, 238, 239, 242, 243], "ones": [0, 53, 60, 61, 125, 164, 200, 213, 224, 238], "extend": [0, 10, 11, 53, 56, 59, 171, 232, 238], "yield": [0, 59, 107, 164, 167, 235], "see": [0, 2, 11, 22, 23, 26, 37, 38, 40, 42, 43, 51, 52, 53, 58, 59, 60, 61, 77, 79, 80, 81, 83, 101, 124, 125, 131, 137, 140, 148, 162, 167, 194, 207, 220, 232, 237, 238, 241], "note": [0, 2, 4, 7, 15, 20, 21, 22, 26, 27, 29, 30, 33, 34, 36, 40, 43, 44, 51, 60, 61, 62, 77, 93, 94, 95, 101, 104, 107, 114, 118, 120, 123, 125, 131, 132, 134, 157, 161, 162, 164, 167, 169, 206, 207, 215, 220, 224, 228, 232, 241, 242, 245], "titl": [0, 148], "underlin": 0, "same": [0, 1, 7, 11, 20, 24, 26, 30, 43, 44, 46, 51, 52, 53, 54, 56, 61, 62, 77, 79, 81, 83, 85, 92, 93, 94, 95, 104, 106, 107, 108, 118, 122, 125, 131, 132, 134, 140, 161, 162, 167, 176, 185, 186, 194, 211, 215, 220, 225, 232, 233, 234, 235, 238, 239, 241, 242], "hyphen": 0, "length": [0, 7, 11, 20, 26, 27, 29, 30, 37, 38, 41, 43, 44, 53, 56, 59, 60, 61, 77, 79, 81, 83, 85, 93, 94, 95, 101, 104, 108, 117, 122, 125, 131, 134, 137, 148, 150, 161, 164, 194, 205, 222, 224, 228, 232, 238, 242], "abov": [0, 1, 2, 7, 11, 26, 51, 53, 54, 56, 59, 61, 80, 120, 122, 131, 133, 134, 176, 194, 199, 203, 204, 215, 217, 232, 241, 242], "restructuredtext": 0, "consult": [0, 53, 220], "basic": [0, 11, 44, 56, 77, 120, 137, 149, 154, 179, 196, 235], "summar": [0, 55], "publish": [0, 36, 56, 148], "poetri": 0, "open": [0, 2, 53, 54, 57, 79, 120, 148, 164, 165, 169, 219, 233, 237], "pyproject": 0, "toml": [0, 2], "file": [0, 2, 7, 10, 11, 13, 23, 26, 27, 29, 30, 32, 33, 36, 48, 50, 53, 54, 56, 58, 59, 60, 68, 70, 77, 79, 80, 81, 83, 84, 85, 101, 120, 124, 125, 161, 162, 164, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 180, 183, 185, 186, 194, 200, 206, 213, 219, 220, 222, 229, 232, 237, 241, 242], "root": [0, 2, 26, 59, 101, 167, 209, 220], "directori": [0, 2, 7, 15, 57, 60, 62, 71, 79, 81, 83, 84, 85, 118, 120, 161, 162, 164, 167, 185, 186, 206, 237], "under": [0, 26, 30, 43, 44, 56, 60, 62, 65, 244], "tool": [0, 57, 61, 62], "name": [0, 7, 11, 26, 27, 28, 29, 30, 36, 43, 44, 48, 51, 52, 53, 56, 60, 61, 75, 76, 77, 79, 81, 83, 85, 86, 92, 97, 98, 99, 101, 106, 107, 108, 112, 125, 127, 131, 148, 157, 161, 162, 164, 167, 171, 175, 176, 177, 186, 194, 199, 200, 201, 202, 203, 204, 219, 220, 223, 232, 235, 238, 241], "2": [0, 2, 7, 11, 22, 23, 24, 26, 30, 33, 36, 40, 41, 51, 53, 56, 59, 60, 61, 79, 80, 101, 108, 118, 120, 122, 124, 125, 127, 128, 131, 132, 133, 134, 139, 142, 148, 149, 152, 162, 164, 191, 192, 194, 196, 199, 200, 201, 202, 203, 206, 207, 212, 215, 220, 222, 228, 232, 233, 234, 238, 239, 241, 242], "0": [0, 1, 2, 7, 10, 11, 20, 23, 26, 27, 29, 30, 33, 36, 38, 40, 41, 43, 44, 46, 48, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 76, 77, 79, 80, 86, 91, 93, 96, 101, 103, 105, 108, 116, 118, 119, 120, 122, 124, 125, 127, 128, 131, 132, 133, 134, 137, 138, 139, 141, 142, 148, 149, 150, 151, 154, 157, 158, 161, 162, 164, 165, 167, 170, 171, 173, 174, 175, 176, 185, 186, 192, 194, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 218, 222, 225, 227, 228, 232, 233, 234, 237, 238, 239, 241, 242, 243], "semant": 0, "major": [0, 61, 165, 200, 220, 222], "minor": [0, 165], "patch": 0, "addition": [0, 58, 95, 215, 234, 238], "suffix": [0, 43, 220, 235], "dev": [0, 2], "drop": [0, 54, 77, 220], "full": [0, 11, 20, 26, 33, 36, 48, 53, 54, 59, 62, 95, 161, 167, 222, 233, 235, 238, 239], "maintain": [0, 233], "ensur": [0, 1, 2, 59, 77, 79, 148, 215, 241], "agre": [0, 59], "Then": [0, 26, 51, 53, 54, 61, 112, 120, 127, 215, 227, 233, 237], "add": [0, 2, 30, 32, 43, 44, 53, 57, 59, 61, 62, 85, 86, 93, 94, 95, 97, 104, 106, 107, 122, 129, 132, 133, 134, 148, 155, 158, 164, 167, 185, 186, 220, 232, 235, 237, 238, 241, 242], "21": [0, 101, 133], "accept": [0, 11, 53, 81, 83, 85, 119, 206, 228, 238], "specif": [0, 23, 26, 27, 29, 30, 34, 36, 37, 40, 43, 44, 51, 52, 57, 58, 59, 60, 77, 79, 81, 82, 83, 85, 97, 108, 135, 161, 167, 212, 219, 228, 238, 241], "greater": [0, 20, 26, 53, 59, 124, 125], "ani": [0, 11, 22, 24, 26, 27, 29, 43, 44, 51, 52, 53, 54, 59, 60, 61, 85, 92, 97, 101, 106, 107, 114, 118, 122, 123, 127, 131, 158, 174, 176, 180, 183, 185, 211, 220, 233, 234, 235, 238, 241], "requir": [0, 26, 27, 28, 29, 30, 54, 55, 57, 60, 77, 93, 94, 95, 104, 120, 131, 143, 164, 167, 186, 199, 200, 201, 203, 235, 238, 241], "extra": [0, 56, 59, 127, 220, 232], "order": [0, 2, 3, 7, 26, 51, 53, 54, 58, 59, 61, 79, 93, 94, 95, 97, 101, 104, 107, 108, 114, 118, 119, 123, 127, 131, 132, 143, 152, 158, 164, 167, 180, 185, 192, 194, 199, 206, 211, 213, 214, 215, 221, 228, 233, 241], "rtd": 0, "theme": [0, 2], "instal": [0, 3, 4, 28, 30, 43, 44, 53, 57, 60, 62, 167, 237, 245], "apidoc": 0, "ext": 0, "autodoc": [0, 2], "modul": [0, 1, 2, 3, 5, 18, 19, 25, 31, 35, 51, 52, 56, 57, 58, 59, 61, 62, 66, 67, 69, 73, 90, 209, 231, 232, 233, 238, 240, 244, 245], "therefor": [0, 1, 2, 43, 51, 52, 53, 56, 57, 59, 85, 120, 140, 169, 183, 233, 234, 239, 242], "input": [0, 7, 11, 26, 30, 33, 36, 50, 54, 58, 59, 61, 75, 76, 79, 84, 122, 125, 132, 139, 150, 162, 165, 170, 171, 172, 173, 175, 180, 203, 208, 212, 214, 228, 233, 238, 243], "howev": [0, 11, 26, 51, 53, 54, 56, 59, 60, 61, 148, 161, 215, 234, 235], "mani": [0, 26, 27, 29, 30, 36, 51, 52, 53, 54, 57, 59, 62, 120, 124, 135, 167, 206, 222, 238], "case": [0, 2, 10, 11, 23, 26, 27, 29, 30, 43, 44, 51, 53, 54, 57, 58, 59, 60, 61, 81, 82, 83, 85, 94, 95, 97, 104, 124, 125, 131, 161, 186, 207, 211, 233, 234, 238, 241, 242], "extrem": [0, 22, 24, 53], "help": [0, 56, 61], "avail": [0, 2, 7, 11, 22, 23, 24, 26, 33, 43, 53, 54, 58, 59, 60, 61, 65, 75, 76, 84, 101, 125, 162, 167, 180, 234, 236, 244], "take": [0, 7, 20, 27, 51, 53, 57, 59, 60, 61, 62, 77, 79, 86, 101, 120, 124, 125, 128, 132, 134, 136, 148, 161, 186, 191, 222, 233, 239, 241, 242], "differ": [0, 20, 24, 26, 27, 29, 30, 33, 34, 36, 37, 40, 43, 44, 51, 52, 53, 54, 56, 58, 59, 61, 62, 65, 74, 75, 76, 79, 101, 108, 125, 131, 134, 139, 140, 150, 155, 157, 161, 164, 165, 167, 175, 180, 183, 191, 192, 199, 200, 201, 202, 203, 204, 205, 218, 219, 222, 224, 225, 232, 233, 234, 235, 238, 239, 241, 242, 244], "form": [0, 20, 23, 26, 27, 28, 29, 30, 40, 59, 60, 62, 101, 116, 128, 148, 194, 218, 239], "annot": [0, 65, 244], "script": [0, 2, 3, 7, 54, 55, 62, 78, 234, 239, 241], "modifi": [0, 2, 24, 26, 27, 29, 30, 33, 36, 61, 93, 94, 95, 104, 125, 161, 162, 205, 229, 233], "grip": 0, "place": [0, 15, 20, 54, 59, 60, 61, 62, 120, 232, 233], "nuradioreco": [0, 1, 3, 4, 7, 23, 33, 46, 53, 55, 56, 57, 59, 60, 61, 62, 231, 232, 233, 234, 237, 238, 239, 241, 243, 245], "folder": [0, 2, 36, 53, 57, 59, 60, 61, 79, 81, 83, 127, 185, 186, 191, 192, 233, 237, 238], "insid": [0, 2, 119, 238], "confus": [0, 26, 27, 29, 59, 238], "manual": [0, 1, 21, 61, 65, 120, 233, 241, 244, 245], "onlin": [0, 2], "websit": [0, 2], "overview": [0, 1, 60, 62, 118, 175, 236, 244, 245], "page": [0, 51, 52, 55, 57, 61, 77, 234, 235, 238, 245], "found": [0, 2, 3, 26, 27, 29, 30, 34, 43, 44, 56, 59, 60, 61, 62, 65, 77, 120, 132, 148, 157, 161, 186, 220, 233, 238, 242, 243, 244], "templat": [0, 2, 101, 135, 139, 140, 157, 191, 192, 196, 209], "done": [0, 23, 26, 53, 54, 56, 57, 60, 79, 81, 83, 85, 191, 192, 205, 232, 235, 238, 239, 241, 242], "make_doc": 0, "py": [0, 2, 11, 26, 40, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 74, 77, 101, 108, 124, 127, 161, 220, 232, 233, 234, 237, 239, 241], "build": [0, 33, 44, 56], "html": [0, 77, 131], "main": [0, 53, 62, 75, 76, 77, 81, 85, 108, 131, 161, 234], "view": [0, 20, 30, 41, 59, 61, 101, 225], "browser": [0, 233, 237], "symbol": [0, 53], "_": [0, 1, 53], "long": [0, 59, 61, 93, 94, 95, 104, 125, 186, 224, 232, 233, 238, 239, 241, 243], "nest": [0, 27, 29, 33, 101, 222], "determin": [0, 11, 20, 26, 33, 36, 51, 54, 56, 60, 61, 79, 81, 82, 83, 85, 93, 94, 95, 104, 131, 135, 140, 148, 155, 157, 167, 191, 192, 211, 220, 234, 239, 241, 242], "level": [0, 7, 11, 20, 26, 27, 29, 30, 33, 51, 52, 59, 61, 77, 81, 83, 85, 86, 97, 101, 116, 118, 119, 120, 124, 127, 164, 165, 167, 171, 176, 180, 185, 186, 220, 222, 238, 241], "subhead": 0, "subsect": 0, "split": [0, 10, 11, 27, 50, 53, 54, 57, 124, 161, 176, 238], "commonli": [0, 60], "format": [0, 2, 26, 32, 34, 36, 51, 52, 54, 57, 59, 62, 79, 92, 106, 107, 116, 148, 167, 180, 232, 238, 241, 243], "italic": 0, "bold": 0, "singl": [0, 33, 36, 40, 48, 51, 53, 54, 57, 75, 76, 81, 83, 85, 94, 104, 122, 127, 132, 161, 172, 183, 200, 201, 207, 229, 238, 241], "bullet": 0, "point": [0, 2, 11, 26, 27, 29, 30, 36, 40, 43, 44, 51, 53, 56, 59, 60, 61, 62, 79, 82, 91, 99, 101, 103, 116, 120, 125, 132, 133, 148, 161, 191, 192, 194, 212, 218, 227, 233, 234, 235, 238, 239], "enumer": [0, 54, 57, 101, 238], "second": [0, 7, 10, 11, 22, 26, 30, 34, 53, 54, 59, 62, 79, 86, 101, 120, 132, 161, 162, 164, 202, 228, 234, 238, 243], "anoth": [0, 59, 60, 61, 62, 93, 94, 95, 104, 125, 176, 215, 233, 238, 241], "sub": [0, 36, 51, 52, 53, 59, 242], "notic": [0, 241], "its": [0, 2, 23, 36, 51, 53, 54, 59, 60, 61, 74, 81, 83, 85, 92, 97, 101, 106, 107, 127, 143, 158, 161, 164, 167, 220, 233, 235, 238, 242, 243], "parent": [0, 7, 51, 97, 101, 127, 220, 238, 241], "similarli": [0, 233], "continu": [0, 26, 53, 54, 120, 132, 148], "last": [0, 20, 24, 34, 36, 51, 59, 61, 101, 138, 165, 175, 220, 232, 233, 241, 242], "http": [0, 2, 11, 22, 24, 26, 30, 37, 40, 42, 43, 44, 51, 53, 55, 60, 68, 77, 116, 128, 131, 133, 157, 167, 194, 207, 213, 218, 232, 233, 237], "url": [0, 233], "com": [0, 2, 11, 26, 30, 43, 44, 53, 55, 60, 68, 133, 167, 207], "trail": 0, "underscor": [0, 7], "For": [0, 2, 7, 11, 24, 26, 43, 44, 51, 53, 54, 56, 58, 59, 60, 61, 62, 75, 76, 77, 80, 81, 85, 95, 148, 161, 162, 164, 170, 173, 183, 217, 228, 229, 232, 233, 234, 235, 239, 241, 242, 243], "intern": [0, 20, 26, 27, 29, 30, 53, 61, 131, 134, 161, 164, 167, 217, 232, 233, 238, 243], "prefer": [0, 81, 83, 85, 161], "instead": [0, 2, 10, 11, 26, 33, 53, 59, 77, 85, 95, 107, 125, 148, 167, 171, 206, 207, 212, 215, 217, 222, 228, 229, 233, 234, 239, 243], "what": [0, 53, 56, 58, 59, 61, 75, 76, 119, 127, 167, 176, 218, 222, 235, 241], "being": [0, 26, 27, 29, 30, 33, 53, 77, 85, 108, 125, 228, 233, 235, 242], "doc": [0, 55, 131], "introduct": [0, 245], "render": [0, 11], "lead": [0, 59, 62, 93, 94, 95, 104, 114, 123, 157, 215], "path": [0, 2, 7, 11, 15, 20, 26, 27, 29, 30, 33, 40, 51, 52, 53, 57, 59, 61, 68, 70, 71, 74, 79, 81, 83, 85, 101, 120, 140, 162, 164, 167, 191, 192, 225, 230, 233, 237, 238], "ref": 0, "append": [0, 2, 11, 50, 54, 81, 83, 85, 132, 138, 242], "final": [0, 3, 26, 27, 29, 30, 51, 52, 53, 56, 61, 62, 65, 161, 214, 215, 233, 234, 244], "class": [0, 7, 11, 20, 26, 27, 28, 29, 30, 32, 33, 34, 40, 43, 44, 46, 48, 53, 60, 61, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 221, 222, 225, 232, 236, 239, 241, 243], "etc": [0, 23, 41, 51, 52, 56, 62, 131, 174, 233], "mod": 0, "func": [0, 36, 220], "respect": [0, 1, 2, 20, 24, 26, 28, 53, 59, 77, 81, 85, 108, 161, 172, 194, 216, 232, 233, 242], "logic": [0, 61, 112, 200, 201, 204, 222], "trace": [0, 2, 20, 22, 23, 24, 26, 27, 28, 29, 30, 33, 36, 51, 52, 53, 54, 56, 59, 61, 62, 81, 83, 85, 86, 93, 94, 95, 101, 104, 108, 118, 119, 120, 122, 124, 125, 128, 131, 132, 133, 135, 136, 137, 138, 141, 142, 146, 148, 150, 151, 153, 157, 164, 167, 176, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 205, 208, 210, 214, 215, 218, 220, 222, 228, 235, 238], "framework": [0, 3, 23, 33, 51, 53, 56, 122, 125, 129, 140, 157, 167, 205, 207, 229, 231, 238, 239], "base_trac": [0, 90, 140, 157, 239], "direct": [0, 7, 10, 11, 21, 22, 23, 24, 26, 27, 29, 30, 40, 43, 44, 51, 52, 53, 59, 60, 61, 62, 79, 81, 82, 83, 85, 91, 95, 99, 101, 103, 116, 117, 119, 128, 133, 139, 140, 142, 143, 148, 150, 174, 191, 192, 196, 206, 207, 216, 218, 225, 228, 234, 238, 241, 242], "languag": 0, "As": [0, 2, 48, 53, 54, 56, 59, 61, 118, 131, 162, 215, 238, 239, 241, 242, 243], "r": [0, 1, 10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 38, 40, 51, 52, 53, 59, 60, 61, 62, 148, 161, 191, 192, 216, 239], "5": [0, 23, 26, 27, 29, 30, 34, 36, 38, 51, 53, 54, 55, 56, 57, 59, 60, 61, 75, 76, 101, 112, 120, 122, 134, 138, 139, 157, 162, 174, 192, 200, 201, 203, 206, 207, 208, 214, 220, 222, 225, 229, 232, 238, 239, 242, 243], "nuradiomc": [1, 3, 4, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 68, 70, 74, 77, 79, 101, 108, 122, 140, 167, 217, 220, 230, 233, 238, 239, 241, 245], "cartesian": [1, 26, 30, 33, 51, 52, 116, 194, 216], "surfac": [1, 11, 26, 27, 29, 30, 36, 40, 43, 44, 51, 54, 56, 59, 61, 62, 74, 76, 83, 192, 203, 216, 232, 242], "axi": [1, 11, 20, 21, 22, 24, 26, 30, 33, 36, 54, 59, 61, 77, 79, 81, 83, 85, 91, 99, 101, 103, 148, 212, 218, 228, 234, 239], "toward": [1, 91, 99, 101, 103, 232], "east": [1, 51, 56, 61, 77, 79, 81, 82, 83, 85, 216, 232, 234], "north": [1, 56, 61, 77, 81, 82, 83, 85, 101], "z": [1, 10, 11, 26, 30, 37, 43, 44, 47, 53, 56, 60, 61, 83, 95, 101, 148, 150, 162, 191, 192, 195, 215, 218, 234, 239], "upward": [1, 26, 77, 79, 81, 83, 85, 128, 234], "antenna": [1, 23, 33, 51, 52, 54, 56, 58, 59, 61, 62, 76, 77, 79, 81, 82, 83, 85, 94, 101, 104, 112, 116, 117, 118, 120, 124, 128, 133, 140, 146, 148, 150, 151, 161, 162, 164, 171, 173, 192, 194, 196, 200, 201, 206, 207, 214, 228, 233, 235, 236, 239, 241, 242], "posit": [1, 7, 10, 11, 20, 26, 33, 38, 40, 43, 44, 47, 51, 53, 54, 56, 59, 60, 61, 62, 75, 76, 77, 79, 80, 81, 82, 83, 85, 90, 95, 101, 116, 117, 131, 140, 148, 150, 157, 161, 162, 164, 169, 170, 171, 173, 191, 192, 194, 195, 206, 211, 216, 218, 228, 233, 234, 235, 238, 239, 242], "typic": [1, 33, 36, 43, 51, 54, 57, 61, 62, 95, 161, 235, 238, 242], "center": [1, 11, 40, 41, 54, 77, 81, 85, 162, 191, 192, 232, 239], "station": [1, 7, 11, 33, 36, 53, 61, 62, 64, 70, 75, 76, 77, 80, 81, 82, 83, 85, 86, 90, 92, 95, 97, 101, 106, 108, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 164, 167, 169, 170, 171, 172, 173, 176, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 222, 227, 228, 233, 234, 235], "zenith": [1, 10, 11, 26, 33, 36, 40, 46, 51, 52, 53, 61, 77, 79, 81, 82, 83, 85, 90, 91, 99, 101, 103, 128, 139, 142, 148, 169, 191, 207, 212, 216, 218, 225, 228, 232, 234, 238], "theta": [1, 20, 21, 22, 24, 26, 30, 36, 46, 59, 61, 77, 79, 81, 82, 83, 85, 157, 216, 218, 228, 232, 239], "deg": [1, 26, 36, 59, 86, 142, 222, 238, 239], "90deg": [1, 58, 101, 128], "horizon": [1, 133], "180": [1, 54, 56, 232, 234], "downward": [1, 26, 61, 62, 234], "azimuth": [1, 10, 11, 26, 33, 40, 51, 52, 53, 60, 61, 77, 79, 81, 82, 83, 85, 90, 91, 99, 101, 103, 128, 139, 142, 169, 192, 207, 216, 218, 225, 228, 232, 234, 239], "phi": [1, 26, 30, 59, 60, 77, 79, 81, 82, 83, 85, 157, 192, 216, 218, 228, 232], "count": [1, 26, 27, 29, 30, 34, 36, 57, 77, 79, 81, 82, 83, 85, 124, 125, 180, 194, 200, 232, 234, 238], "northward": [1, 234], "came": [1, 40], "opposit": [1, 40, 51, 161], "propag": [1, 7, 11, 23, 25, 26, 27, 29, 30, 33, 40, 51, 52, 53, 58, 59, 61, 62, 64, 77, 101, 147, 216, 220, 239], "through": [1, 7, 23, 30, 40, 43, 44, 51, 52, 53, 54, 56, 59, 60, 61, 77, 79, 92, 106, 107, 112, 116, 128, 148, 164, 165, 175, 180, 205, 206, 220, 233, 234, 235, 237, 238], "earth": [1, 7, 11, 33, 40, 51, 53, 61, 162], "launch_vector": [1, 23, 26, 27, 29, 30, 33, 51, 52, 60, 90, 101], "askaryan": [1, 18, 20, 21, 24, 59, 62, 101, 239], "signal": [1, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 36, 37, 41, 51, 52, 54, 61, 62, 64, 74, 75, 76, 77, 79, 81, 83, 85, 86, 95, 101, 112, 114, 116, 119, 123, 128, 131, 135, 137, 140, 141, 142, 143, 146, 148, 149, 154, 157, 167, 174, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 214, 216, 218, 227, 228, 238, 239, 242, 243], "emit": [1, 23, 26, 59, 60, 101], "reach": [1, 11, 26, 27, 29, 30, 33, 40, 51, 53, 59, 61, 191, 238], "electr": [1, 20, 23, 26, 27, 29, 30, 33, 43, 44, 51, 52, 58, 59, 61, 79, 92, 95, 101, 106, 107, 140, 148, 150, 151, 152, 153, 154, 157, 173, 176, 192, 206, 207, 208, 216, 228, 241, 242], "store": [1, 7, 11, 23, 36, 51, 52, 53, 54, 57, 60, 77, 79, 85, 86, 92, 93, 94, 95, 97, 101, 104, 106, 107, 108, 122, 124, 125, 140, 148, 151, 161, 162, 167, 186, 191, 192, 194, 200, 203, 232, 233, 235, 238, 239, 242], "sky": [1, 20, 26, 36, 51, 53, 116, 117, 133, 194], "polar": [1, 23, 26, 30, 33, 51, 52, 54, 61, 62, 79, 90, 94, 101, 104, 118, 128, 157, 161, 206, 207, 208, 216, 232], "e_": [1, 59], "compon": [1, 20, 22, 24, 26, 30, 51, 59, 60, 61, 75, 76, 77, 79, 86, 101, 122, 134, 157, 194, 207, 228, 232, 233, 235, 241, 242], "usual": [1, 26, 46, 53, 59, 61, 147, 148, 220, 232, 241, 243], "small": [1, 20, 26, 30, 46, 53, 54, 57, 59, 61, 62, 114, 123, 157, 203, 206, 207, 213, 215, 233], "left": [1, 59, 60, 120, 192], "comparison": [1, 53, 125], "import": [1, 2, 3, 26, 27, 29, 30, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 68, 77, 122, 133, 167, 183, 185, 233, 235, 238, 239, 241, 243], "fiel": 1, "orang": 1, "arrow": 1, "indic": [1, 7, 11, 26, 33, 43, 44, 53, 56, 59, 76, 120, 161, 200, 228], "shower": [1, 7, 11, 20, 21, 22, 24, 27, 30, 33, 36, 51, 52, 53, 61, 64, 91, 94, 95, 97, 99, 101, 103, 104, 106, 140, 143, 147, 148, 169, 233], "purpl": 1, "circl": 1, "plane": [1, 59, 60, 61, 77, 79, 81, 82, 83, 85, 101, 148, 216, 218, 234], "natur": [1, 42, 53], "air": [1, 7, 11, 26, 53, 56, 58, 79, 81, 82, 83, 85, 94, 101, 104, 143, 147, 216, 217, 228, 232, 233], "hat": 1, "vec": 1, "v": [1, 53, 57, 59, 95, 148, 202, 203, 208, 215, 228, 243], "On": [1, 2, 57, 118], "ground": [1, 170, 216, 232], "arriv": [1, 10, 11, 26, 30, 33, 51, 52, 53, 59, 61, 91, 99, 101, 103, 116, 117, 128, 140, 142, 148, 174, 216, 239], "share": 1, "right": [1, 26, 43, 59, 60, 120, 186, 192, 239], "seen": [1, 30, 33, 59, 93, 94, 95, 104, 161], "incom": [1, 51, 53, 62, 79, 81, 83, 85, 101, 139, 150, 216, 228], "correspond": [1, 7, 11, 26, 27, 29, 30, 33, 40, 42, 51, 54, 56, 59, 79, 86, 95, 101, 104, 120, 125, 140, 148, 150, 161, 164, 169, 191, 192, 206, 216, 224, 228, 233, 234, 238], "quantiti": [1, 11, 76, 101, 137, 154, 218, 229], "auger": [1, 229], "print": [1, 26, 86, 222, 229, 233, 241, 243], "plot": [1, 2, 26, 35, 36, 41, 54, 55, 60, 62, 66, 86, 132, 133, 148, 157, 191, 192, 206, 212, 222, 237, 239], "convert": [1, 20, 34, 36, 55, 61, 75, 84, 95, 101, 125, 150, 151, 167, 169, 208, 229, 232, 233, 234], "dimension": [1, 23, 36, 54, 59, 95, 120, 229, 239], "conveni": [1, 36, 51, 52, 53, 57, 59, 92, 106, 107, 108, 122, 167, 211, 220], "encod": [1, 10, 11, 38, 53, 66, 79, 81, 118, 167, 219], "pdg": [1, 7, 38, 51, 52, 53, 101, 223], "relev": [1, 7, 10, 11, 15, 26, 27, 29, 30, 33, 36, 38, 51, 53, 56, 59, 62, 81, 92, 106, 107, 125, 131, 167, 174, 185, 186, 200, 211, 215, 220, 228, 233, 234, 242], "id": [1, 10, 11, 33, 36, 51, 52, 53, 61, 71, 75, 76, 77, 81, 83, 85, 86, 92, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 112, 114, 120, 122, 123, 124, 125, 128, 131, 134, 137, 139, 140, 149, 150, 157, 161, 162, 164, 167, 169, 170, 171, 172, 180, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 207, 222, 223, 228, 233, 238], "u": [1, 10, 11, 53, 59, 60, 61, 95, 228, 235], "12": [1, 10, 11, 12, 20, 38, 53, 61, 101, 133], "14": [1, 10, 11, 12, 38, 53, 61, 101, 243], "16": [1, 10, 11, 12, 38, 53, 101, 108, 148, 164, 194, 203, 222], "electron": [1, 10, 11, 38, 51, 53, 101, 138, 229, 235], "muon": [1, 7, 10, 11, 36, 38, 46, 51], "tau": [1, 7, 10, 11, 22, 38, 42, 51, 53, 238], "overal": [1, 77, 134, 194, 241], "minu": [1, 11, 26, 53, 61, 119], "sign": [1, 10, 11, 26, 38, 53, 157], "anti": [1, 10, 11, 38, 53], "tabl": [1, 7, 11, 15, 51, 53, 56, 161, 162, 167, 191, 192, 218, 233], "event": [1, 2, 7, 10, 11, 13, 21, 30, 32, 33, 34, 36, 41, 42, 50, 51, 52, 54, 57, 59, 61, 64, 85, 90, 92, 101, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 157, 161, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 180, 183, 186, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 227, 241, 243, 244, 245], "6": [2, 10, 11, 22, 24, 36, 40, 41, 53, 101, 112, 119, 122, 131, 132, 139, 162], "unix": [2, 77], "oper": [2, 20, 59, 61, 76, 86, 109, 156, 235, 238], "system": [2, 11, 20, 33, 40, 53, 56, 60, 68, 79, 101, 112, 162, 207, 209, 237, 239], "linux": [2, 162], "maco": 2, "window": [2, 59, 61, 93, 94, 95, 101, 104, 108, 112, 119, 131, 137, 138, 141, 148, 194, 199, 200, 201, 202, 203, 204, 205, 210, 218, 222, 224, 227, 242], "subsystem": 2, "subpackag": [2, 63, 231], "cannot": [2, 59, 162], "nu": [2, 11, 30, 53, 55, 60, 77, 101, 167], "recent": 2, "download": [2, 15, 79, 213, 232], "clone": 2, "alreadi": [2, 7, 26, 27, 29, 30, 55, 56, 60, 76, 77, 81, 85, 92, 106, 107, 118, 120, 122, 124, 125, 140, 167, 176, 220, 228, 243], "up": [2, 10, 11, 22, 24, 26, 43, 44, 50, 51, 52, 53, 54, 56, 57, 59, 93, 94, 95, 101, 104, 122, 127, 131, 133, 134, 140, 161, 162, 186, 191, 206, 216, 220, 233, 239, 241, 242], "navig": [2, 7, 53], "cd": [2, 57, 62], "python3": 2, "install_dev": 2, "launch": [2, 20, 23, 26, 27, 29, 30, 33, 51, 52, 58, 60, 101], "interact": [2, 7, 10, 11, 21, 22, 24, 38, 40, 41, 42, 46, 51, 52, 53, 58, 59, 61, 62, 97, 101, 194, 239, 242], "contribut": [2, 4, 51, 52, 53, 59, 245], "highli": 2, "recommend": [2, 26, 27, 29, 53, 59, 92, 106, 107, 125, 161, 183, 186, 233, 239, 241], "virtual": [2, 26], "environ": [2, 57, 58, 76], "either": [2, 11, 20, 22, 24, 26, 43, 44, 56, 59, 60, 61, 79, 81, 95, 122, 124, 134, 140, 167, 205, 208, 222], "m": [2, 7, 11, 22, 24, 30, 40, 53, 54, 56, 58, 59, 60, 61, 101, 158, 206, 207, 212, 218, 243], "venv": 2, "name_of_venv": 2, "manag": [2, 209, 220], "conda": 2, "reason": [2, 53, 56, 59, 101, 194, 233, 235], "work": [2, 30, 44, 51, 52, 53, 56, 57, 59, 60, 62, 68, 70, 74, 75, 76, 79, 81, 83, 85, 108, 148, 157, 162, 191, 192, 206, 215, 220, 233, 238, 239, 242], "addit": [2, 3, 11, 22, 23, 24, 26, 27, 29, 36, 51, 52, 53, 60, 74, 75, 76, 81, 86, 95, 119, 124, 131, 148, 161, 233, 236, 238, 241], "instruct": [2, 51, 52, 60], "export": [2, 35, 36, 57, 60, 73, 77], "profil": [2, 20, 21, 22, 26, 27, 29, 30, 43, 44, 56, 59, 60, 101, 140, 148], "termin": [2, 233], "zprofil": 2, "bashrc": 2, "zshrc": 2, "non": [2, 36, 38, 56, 59, 167, 183, 220], "command": [2, 3, 62, 233], "scipi": [2, 122, 131, 132, 152, 211, 212, 224], "matplotlib": [2, 26, 55, 60, 61, 132, 238, 239], "astropi": [2, 34, 75, 76, 77, 81, 83, 85, 92, 106, 107, 167, 233], "tinydb": [2, 81], "serial": [2, 62, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 238], "aenum": 2, "h5py": [2, 51, 52, 54], "mysql": [2, 81, 233], "pymongo": [2, 75, 76], "dash": [2, 237], "plotli": 2, "peakutil": 2, "radiotool": [2, 26, 57, 91, 95, 99, 103, 148, 218, 228], "newer": 2, "advanc": [2, 51, 59], "enum": [2, 101, 167, 175, 222, 238], "": [2, 7, 11, 26, 33, 37, 38, 40, 53, 56, 59, 60, 61, 75, 76, 77, 79, 81, 85, 101, 108, 118, 132, 158, 174, 185, 194, 214, 216, 218, 220, 221, 228, 229, 233, 235, 238, 241, 242], "hdf5": [2, 10, 11, 13, 23, 32, 33, 36, 50, 53, 54, 61, 62, 65, 101, 164, 169, 170, 171, 172, 173, 238, 245], "uproot": [2, 167], "rno": [2, 56, 59, 75, 76, 77, 86, 122, 123, 167, 213, 232, 233, 236, 239, 242], "awkward": 2, "databas": [2, 66, 70, 73, 74, 75, 76, 77, 81, 83, 85, 86, 167, 236], "sql": [2, 80, 81, 83, 233], "datbas": 2, "mongodb": [2, 75, 76], "displai": [2, 34, 59, 92, 106, 107, 229, 244, 245], "show": [2, 3, 36, 54, 56, 57, 60, 61, 86, 148, 212, 222, 238, 241], "nuradiorecotempl": 2, "document": [2, 3, 7, 38, 43, 53, 60, 61, 79, 81, 125, 232, 234], "readthedoc": 2, "our": [2, 3, 53, 54, 59, 61, 62, 125, 138, 215, 232, 235, 242], "docstr": [2, 238], "action": 2, "code": [2, 7, 11, 20, 26, 54, 56, 57, 59, 60, 61, 65, 77, 101, 120, 131, 161, 167, 217, 229, 239, 241, 244, 245], "sphinx_rtd_them": 2, "debug": [2, 26, 27, 28, 29, 30, 33, 62, 77, 86, 111, 114, 123, 128, 130, 133, 134, 137, 139, 141, 142, 146, 147, 148, 149, 150, 154, 157, 167, 169, 172, 174, 186, 191, 192, 194, 195, 206, 209, 220, 222, 239, 241], "propos": [2, 7, 11, 15, 53, 148], "evtgen": [2, 53, 57, 63], "nuradiopropos": [2, 5, 11], "7": [2, 7, 11, 36, 37, 40, 53, 57, 101, 162, 212], "particular": [2, 77, 97, 112, 199, 200, 201, 202, 203, 204, 241], "eg": 2, "mac": 2, "kernel": 2, "too": [2, 59, 120, 133, 161, 167, 233, 239], "old": [2, 76, 167, 217, 235, 238], "comput": [2, 10, 11, 26, 27, 29, 30, 53, 54, 59, 81, 83, 85, 95, 133, 137, 206, 208, 228, 239], "cluster": [2, 15, 48, 53, 54, 64], "refer": [2, 26, 33, 40, 51, 52, 53, 59, 60, 61, 74, 80, 81, 83, 85, 107, 118, 120, 125, 131, 132, 161, 194, 216, 222, 225, 233, 234, 241], "step": [2, 30, 40, 46, 54, 57, 62, 125, 148, 192, 194, 206, 232, 238, 239, 241, 242], "guid": 2, "channelgalacticnoiseadd": [2, 109], "pygdsm": [2, 133], "telegraph": [2, 133], "speed": [2, 26, 56, 59, 131, 239, 243], "analyt": [2, 22, 24, 26, 27, 28, 29, 30, 51, 52, 56, 61, 79, 206, 207, 210, 212], "rai": [2, 3, 11, 20, 24, 26, 27, 28, 29, 30, 33, 36, 46, 51, 52, 56, 59, 61, 62, 92, 95, 101, 104, 106, 107, 119, 139, 140, 146, 149, 155, 191, 192, 206, 212, 225, 238, 242], "gsl": 2, "gsl_dir": 2, "sudo": 2, "apt": 2, "libgsl": 2, "brew": 2, "homebrew": 2, "With": [2, 26, 59, 238], "compil": [2, 15, 37, 60], "cpp": [2, 26, 56], "tracer": [2, 11, 26, 27, 28, 29, 30, 33, 44, 51, 52, 56], "signalprop": [2, 56, 59, 60, 63], "sh": 2, "radiopropa": [2, 28, 30, 43, 44], "numer": [2, 20, 26, 27, 28, 29, 30, 46, 56, 59, 206, 210, 218, 229], "read": [2, 11, 26, 30, 33, 59, 61, 62, 70, 74, 75, 76, 79, 86, 92, 101, 106, 107, 108, 120, 125, 161, 162, 164, 165, 167, 170, 171, 172, 173, 175, 180, 185, 186, 219, 235, 242], "arianna": [2, 57, 59, 66, 81, 83, 85, 109, 180, 181, 200, 201, 222, 232, 233, 238], "snowshovel": [2, 109, 159, 238, 242], "ara": [2, 23, 66, 79, 109, 232, 233], "welcom": 3, "two": [3, 11, 20, 26, 36, 43, 44, 51, 52, 53, 54, 56, 59, 61, 62, 75, 76, 79, 101, 125, 131, 142, 161, 176, 191, 192, 207, 217, 218, 222, 228, 233, 234, 235, 238, 239], "packag": [3, 60, 63, 65, 133, 164, 231, 232, 241, 244], "mont": [3, 59, 65], "carlo": [3, 59, 65], "high": [3, 22, 24, 53, 59, 61, 62, 108, 114, 123, 161, 200, 201, 222], "energi": [3, 7, 10, 11, 20, 21, 22, 24, 33, 36, 38, 41, 42, 46, 51, 52, 53, 54, 55, 57, 59, 61, 62, 90, 101, 143, 157, 174, 206, 210, 212, 215, 238, 239], "cosmic": [3, 46, 92, 95, 101, 106, 107, 119, 139, 149, 155, 206, 212, 225, 242], "familiar": 3, "yourself": 3, "how": [3, 26, 27, 29, 30, 48, 51, 53, 54, 55, 56, 57, 59, 61, 114, 123, 124, 135, 157, 162, 222, 242], "self": [3, 26, 53, 56, 61, 75, 76, 77, 120, 167, 171, 191, 192, 241], "subfold": [3, 57, 65, 185, 237, 244], "hand": [3, 60, 65, 118, 244], "webinar": [3, 61, 65, 244], "pip": 3, "version": [3, 15, 22, 26, 51, 52, 59, 60, 127, 131, 165, 177, 209, 219, 220, 229, 233, 241], "__path__": 3, "nuradiomc_path": 3, "locat": [3, 7, 56, 59, 61, 71, 85, 135, 150, 161, 191, 218, 239, 241], "convent": [4, 51, 52, 53, 59, 79, 177, 215, 216, 232, 234, 245], "nuradiomctoarasim": 5, "secondaryproperti": [5, 7, 53], "particle_cod": [5, 7], "is_em_primari": [5, 7], "is_had_primari": [5, 7], "is_shower_primari": [5, 7], "proposalfunct": [5, 7, 53], "get_secondaries_arrai": [5, 7, 11, 53], "get_decai": [5, 7, 53], "create_tau_tab": 5, "generate_cylind": 5, "generate_unforc": [5, 53], "generate_eventlist_cylind": [5, 10, 11, 53, 57], "load_input_hdf5": [5, 11], "get_tau_95_length": [5, 11], "write_events_to_hdf5": [5, 11], "primary_energy_from_deposit": [5, 11], "ice_cube_nu_fit": [5, 11], "ice_cube_nu_fit_2022": [5, 11], "get_energy_from_flux": [5, 11], "get_product_position_tim": [5, 11], "get_energi": [5, 11], "set_volume_attribut": [5, 11], "generate_vertex_posit": [5, 11], "intersection_box_rai": [5, 11], "get_intersection_volume_neutrino": [5, 11], "is_in_fiducial_volum": [5, 11], "mask_arrival_azimuth": [5, 11], "generate_surface_muon": [5, 11, 53], "generator_ascii": 5, "generate_eventlist": [5, 12], "generator_skeleton": 5, "generate_my_ev": [5, 13], "hdf5_to_ascii": 5, "proposal_table_manag": 5, "produce_proposal_t": [5, 15], "get_compil": [5, 15], "produce_proposal_tables_tarbal": [5, 15], "download_proposal_t": [5, 15], "readaraeventlist": 5, "read_ara_eventlist": [5, 16], "convert_to_hdf5": [5, 16], "readeventlist_ascii": 5, "read_eventlist": [5, 17], "shower_typ": [7, 20, 22, 24, 51, 52, 53, 59, 61, 239], "parent_energi": 7, "object": [7, 11, 20, 26, 27, 29, 30, 32, 33, 34, 40, 42, 43, 44, 46, 48, 53, 54, 56, 59, 61, 75, 76, 77, 79, 80, 81, 82, 86, 91, 92, 93, 95, 96, 97, 98, 102, 104, 106, 107, 108, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 220, 222, 225, 233, 235, 238, 239, 242], "properti": [7, 11, 26, 33, 36, 51, 52, 53, 56, 61, 81, 83, 85, 120, 125, 140, 148, 232, 233, 235, 236, 238, 241, 243], "secondari": [7, 11, 30, 51, 53, 61, 108], "particl": [7, 10, 11, 22, 24, 33, 38, 51, 52, 59, 90, 97, 101, 119, 223, 242], "vertex": [7, 10, 11, 20, 21, 22, 24, 33, 40, 47, 51, 52, 53, 59, 61, 90, 101, 140, 191, 192, 240, 242], "whether": [7, 30, 51, 52, 53, 59, 60, 61, 80, 106, 107, 112, 122, 132, 217, 238], "induc": [7, 11, 22, 53, 59, 70, 101, 111, 114, 123], "hadron": [7, 20, 22, 24, 42, 46, 53, 59], "electromagnet": [7, 20, 22, 24, 42, 51, 53, 59, 101, 218], "accord": [7, 11, 20, 26, 30, 38, 53, 60, 61, 79, 117, 148, 169, 194, 205, 218, 242], "particle_nam": [7, 46, 53, 209], "pp_type": 7, "integ": [7, 10, 11, 26, 27, 29, 30, 36, 38, 51, 53, 85, 97, 125, 142, 157, 161, 170, 173, 191, 192, 194, 220, 227, 228, 235], "interaction_typ": [7, 11, 49, 51, 52, 53, 90, 101], "particle_typ": 7, "none": [7, 10, 11, 15, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 40, 42, 43, 44, 46, 47, 50, 53, 54, 56, 59, 61, 70, 75, 76, 77, 79, 81, 83, 85, 86, 92, 93, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 108, 112, 114, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 148, 149, 150, 151, 152, 157, 161, 162, 164, 167, 169, 170, 171, 173, 176, 180, 185, 186, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 214, 215, 220, 222, 224, 226, 227, 228, 233], "argument": [7, 24, 26, 27, 29, 30, 33, 42, 53, 59, 61, 62, 75, 76, 77, 79, 80, 86, 95, 97, 124, 134, 148, 150, 167, 202, 206, 220, 228], "type": [7, 11, 20, 22, 24, 26, 27, 29, 30, 33, 38, 40, 41, 42, 51, 53, 59, 61, 62, 75, 76, 77, 79, 81, 82, 83, 85, 90, 92, 93, 94, 95, 101, 104, 106, 107, 108, 125, 131, 134, 140, 150, 155, 157, 161, 167, 180, 183, 191, 192, 196, 212, 214, 221, 222, 233, 234, 237, 238, 239], "true": [7, 10, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 51, 52, 53, 54, 55, 56, 59, 60, 61, 75, 76, 77, 81, 83, 85, 86, 92, 95, 97, 106, 107, 108, 114, 122, 123, 124, 125, 131, 133, 134, 140, 141, 142, 148, 157, 161, 165, 167, 171, 174, 175, 176, 180, 185, 186, 191, 192, 194, 195, 200, 201, 202, 206, 207, 213, 220, 222, 228, 233, 235, 243], "primari": [7, 10, 11, 46, 53, 75, 76, 77, 92, 101, 106, 107, 108, 194, 205, 235, 242], "fals": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 51, 52, 53, 55, 59, 60, 61, 75, 76, 77, 81, 83, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 108, 111, 114, 120, 122, 123, 124, 125, 128, 130, 132, 133, 134, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 154, 157, 161, 165, 167, 169, 171, 172, 174, 175, 176, 180, 185, 186, 191, 192, 194, 196, 200, 201, 202, 206, 207, 212, 213, 220, 222, 228], "otherwis": [7, 21, 30, 32, 33, 51, 52, 61, 76, 81, 83, 85, 95, 97, 106, 107, 108, 111, 114, 123, 132, 134, 140, 161, 162, 167, 186, 207, 217], "pp": 7, "bool": [7, 11, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 36, 53, 59, 75, 76, 77, 81, 83, 85, 86, 92, 93, 94, 95, 97, 104, 106, 107, 114, 122, 123, 124, 125, 131, 133, 134, 137, 139, 142, 148, 149, 150, 154, 157, 161, 167, 171, 174, 176, 180, 185, 186, 194, 196, 199, 200, 201, 202, 204, 206, 207, 212, 222, 228], "arg": [7, 20, 26, 27, 29, 30, 36, 44, 61, 75, 76, 79, 80, 81, 83, 85, 158, 220], "kwarg": [7, 11, 20, 22, 23, 26, 27, 29, 30, 33, 44, 48, 49, 75, 76, 79, 80, 81, 83, 85, 97, 158, 220], "serv": [7, 53, 58, 238], "doubl": [7, 43, 53, 54, 120, 148, 170, 218], "outsid": [7, 11, 51, 53, 62, 137, 141, 180], "mismatch": 7, "config_fil": [7, 11, 15, 33, 53, 57, 61], "string": [7, 10, 11, 13, 15, 20, 22, 23, 24, 26, 27, 28, 29, 30, 33, 36, 37, 40, 42, 43, 44, 50, 53, 59, 60, 68, 71, 74, 75, 76, 77, 79, 81, 82, 83, 85, 92, 93, 94, 95, 97, 104, 106, 107, 108, 112, 114, 123, 124, 125, 131, 132, 134, 137, 141, 152, 155, 157, 161, 165, 167, 171, 175, 176, 180, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 211, 212, 214, 219, 220, 222, 239], "own": [7, 11, 51, 53, 59, 61, 62, 101, 235, 238, 243], "config": [7, 11, 26, 27, 29, 30, 32, 33, 49, 51, 52, 53, 56, 57, 60, 101, 125, 148, 167, 200], "choos": [7, 11, 26, 27, 29, 30, 36, 43, 44, 53, 59, 61, 80, 125, 173, 212, 234], "among": [7, 11, 53, 75, 76, 77], "southpol": [7, 11, 15, 53, 54, 217], "south": [7, 11, 37, 53, 59, 61, 81, 83, 85, 232], "pole": [7, 11, 37, 53, 59, 61, 81, 83, 85, 208, 217, 232], "spheric": [7, 11, 26, 33, 51, 53, 59, 60, 195, 216, 218], "consist": [7, 11, 26, 53, 54, 59, 62, 77, 95, 104, 233, 239, 241, 243], "km": [7, 11, 36, 53, 57, 59, 62, 229, 239, 243], "deep": [7, 11, 26, 36, 42, 43, 44, 53, 54, 56, 58, 59, 232], "layer": [7, 11, 26, 27, 29, 30, 40, 43, 44, 53, 56, 59, 60, 61, 218], "ic": [7, 11, 22, 24, 26, 27, 29, 30, 33, 36, 37, 38, 43, 44, 53, 58, 60, 61, 62, 64, 74, 101, 140, 147, 209, 228, 232, 238, 239], "bedrock": [7, 11, 43, 44, 53, 56], "mooresbai": [7, 11, 15, 53, 61, 81, 83, 85, 143], "moor": [7, 11, 26, 37, 53, 56, 61], "bai": [7, 11, 26, 37, 53, 56, 61], "576": [7, 11, 53, 56], "2234": [7, 11, 53], "water": [7, 11, 26, 36, 38, 53, 61], "infic": [7, 11, 15, 53], "medium": [7, 11, 26, 27, 29, 30, 33, 35, 36, 38, 44, 53, 56, 58, 59, 60, 140, 216, 217, 232, 239], "infinit": [7, 11, 30, 53, 81, 82, 83, 85, 232], "greenland": [7, 11, 15, 37, 43, 53, 59, 61, 77], "summit": [7, 11, 43, 53, 77, 169, 233], "log_level": [7, 11, 26, 27, 29, 30, 33, 77, 86, 124, 128, 137, 142, 150, 151, 154, 165, 167, 173, 175, 176, 185, 186, 194, 200, 205, 222], "log": [7, 11, 26, 27, 29, 30, 33, 34, 41, 53, 59, 77, 86, 116, 118, 119, 120, 127, 164, 165, 167, 171, 175, 176, 185, 186, 209, 222, 232], "overrid": [7, 24, 26, 33, 43, 44, 62, 77, 86, 116, 118, 119, 120, 125, 164, 165, 176, 185, 200], "global": [7, 26, 27, 29, 30, 51, 52, 108, 186], "tables_path": [7, 11, 15], "save": [7, 10, 11, 32, 36, 51, 52, 53, 54, 57, 61, 62, 76, 79, 81, 101, 148, 176, 191, 192, 206, 233, 234, 238, 239, 241], "regener": [7, 238], "sever": [7, 10, 11, 51, 52, 53, 56, 57, 58, 59, 61, 86, 94, 95, 104, 139, 165, 175, 183, 194, 218, 220, 233, 235, 238, 241, 242], "minut": [7, 34], "everi": [7, 43, 44, 51, 52, 53, 54, 59, 61, 62, 75, 76, 119, 120, 125, 133, 164, 186, 233, 238, 239, 241, 243], "execut": [7, 33, 53, 57, 60, 62, 120, 127, 155, 191, 206, 207, 233, 241], "proposal_t": [7, 15], "seed": [7, 11, 20, 22, 24, 61, 134, 170, 173, 185, 186], "upper_energy_limit": 7, "ev": [7, 36, 46, 53, 57, 61, 62, 212, 215, 229, 239], "There": [7, 56, 58, 59, 61, 65, 108, 161, 233, 244], "error": [7, 26, 27, 29, 30, 77, 97, 122, 167, 186, 194, 205, 209, 212, 220, 233, 241], "inject": 7, "valu": [7, 20, 21, 24, 26, 27, 29, 30, 33, 34, 36, 40, 42, 53, 54, 56, 61, 76, 77, 79, 81, 83, 85, 86, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 116, 118, 120, 122, 123, 124, 125, 127, 132, 133, 148, 150, 161, 162, 164, 167, 171, 180, 186, 194, 200, 201, 206, 207, 214, 215, 217, 220, 222, 224, 229, 233, 234, 235, 241, 243], "create_new": [7, 77, 81, 243], "forc": [7, 53, 81, 83, 85, 137, 155, 167, 180, 183, 185, 186, 207], "creation": [7, 30, 53, 81, 125, 243], "By": [7, 53, 77, 81, 95, 140, 186, 216, 221, 233, 239, 241], "__init__": [7, 53, 56, 81, 83, 165, 233, 241], "singleton": [7, 81, 209, 221], "metaclass": [7, 81, 209], "energy_leptons_nu": 7, "lepton_cod": 7, "lepton_positions_nu": 7, "lepton_direct": 7, "low_nu": [7, 53], "500000000000000": 7, "propagation_length_nu": 7, "1000000": [7, 48], "min_energy_loss_nu": [7, 53], "propagate_decay_muon": [7, 53], "lepton": [7, 11, 22, 42, 51, 53], "list": [7, 10, 11, 24, 26, 27, 29, 30, 33, 34, 36, 43, 44, 51, 52, 53, 54, 57, 61, 75, 76, 77, 79, 81, 83, 85, 86, 92, 93, 94, 95, 97, 101, 104, 106, 107, 108, 119, 120, 122, 124, 125, 128, 131, 132, 133, 134, 135, 139, 141, 142, 148, 149, 157, 161, 162, 164, 165, 167, 170, 171, 172, 173, 174, 180, 185, 186, 192, 194, 196, 199, 200, 203, 211, 213, 222, 232, 233, 234, 235, 242], "arrai": [7, 10, 11, 20, 22, 23, 24, 26, 27, 29, 30, 33, 36, 38, 40, 41, 42, 43, 44, 46, 47, 51, 52, 53, 54, 59, 60, 61, 74, 77, 79, 81, 83, 85, 86, 91, 93, 94, 95, 99, 103, 104, 108, 112, 114, 116, 119, 120, 122, 123, 125, 128, 131, 133, 134, 140, 142, 148, 152, 161, 162, 167, 175, 180, 191, 192, 194, 199, 200, 201, 202, 203, 204, 206, 207, 211, 212, 214, 215, 216, 218, 222, 227, 228, 232, 233, 242], "tupl": [7, 11, 26, 36, 40, 46, 53, 59, 81, 83, 85, 95, 104, 108, 122, 158, 161, 164, 165, 167, 214, 227, 228], "normalis": [7, 214], "low": [7, 53, 54, 61, 108, 161, 167, 180, 200, 201, 222, 227, 232, 239, 241], "control": [7, 22, 26, 27, 29, 53, 59, 61, 75, 76, 101, 161, 165, 185, 194, 241], "minimum": [7, 10, 11, 33, 42, 46, 52, 53, 59, 60, 61, 101, 112, 114, 116, 119, 123, 134, 173, 192, 206, 214], "discard": [7, 161], "maximum": [7, 10, 11, 20, 23, 26, 27, 29, 30, 36, 42, 46, 51, 52, 53, 54, 59, 60, 61, 101, 108, 112, 114, 116, 122, 123, 125, 131, 134, 135, 137, 140, 146, 148, 157, 165, 167, 170, 173, 176, 191, 192, 194, 203, 211, 214, 227, 234, 239], "select": [7, 20, 23, 51, 54, 75, 76, 77, 80, 119, 141, 157, 167, 170, 173, 174, 186, 233, 235, 237], "decai": [7, 42, 53, 59], "secondaries_arrai": [7, 53], "2d": [7, 23, 26, 43, 44, 53, 54, 59, 60, 148, 161, 162, 169, 191, 194, 228], "dimens": [7, 26, 27, 29, 30, 36, 53, 59, 239], "index": [7, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 40, 43, 44, 51, 52, 56, 58, 59, 60, 79, 102, 128, 139, 140, 142, 148, 158, 167, 194, 213, 216, 217, 218, 222, 232, 233, 237, 238, 245], "produc": [7, 11, 15, 24, 47, 51, 53, 62, 86, 106, 133, 138, 183, 191, 224, 238, 239, 242], "100000000000000": 7, "decays_arrai": 7, "element": [7, 11, 53, 59, 79, 118, 120, 238], "filenam": [10, 11, 12, 13, 16, 17, 33, 36, 39, 45, 50, 53, 54, 57, 61, 77, 81, 120, 161, 164, 165, 175, 176, 186, 219, 222, 237], "n_event": [10, 11, 12, 13, 42, 51, 52, 53, 57, 90, 101], "emin": [10, 11, 12, 51, 52, 53, 54, 57, 90, 101], "emax": [10, 11, 12, 51, 52, 53, 57, 90, 101], "full_rmin": [10, 53], "full_rmax": [10, 53], "full_zmin": [10, 53], "full_zmax": [10, 53], "thetamin": [10, 11, 36, 51, 52, 53, 90, 101], "thetamax": [10, 11, 51, 52, 53, 90, 101], "141592653589793": [10, 11, 36], "phimin": [10, 11, 51, 52, 53, 90, 101], "phimax": [10, 11, 51, 52, 53, 90, 101], "283185307179586": [10, 11, 41], "start_event_id": [10, 11, 12, 51, 52, 53, 90, 101], "flavor": [10, 11, 12, 15, 20, 33, 38, 40, 49, 51, 52, 53, 62, 90, 101], "n_events_per_fil": [10, 11, 50, 53, 57], "spectrum": [10, 11, 21, 22, 23, 24, 26, 30, 53, 59, 93, 94, 95, 101, 104, 120, 122, 125, 132, 134, 157, 206, 212, 215, 228, 241, 243], "log_uniform": [10, 11, 53], "start_file_id": [10, 11, 53], "charg": [10, 11, 20, 22, 38, 53, 59, 62, 101, 229], "currend": [10, 11, 53], "neutral": [10, 11, 38, 53, 62, 101], "inelastivii": [10, 11], "distribut": [10, 11, 24, 42, 47, 48, 53, 59, 122, 134, 148, 157, 170, 173, 186], "output": [10, 11, 13, 15, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 48, 50, 53, 55, 59, 61, 62, 65, 79, 120, 124, 125, 137, 150, 161, 162, 176, 186, 194, 200, 214, 220, 227, 238, 241, 243, 245], "number": [10, 11, 13, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 38, 41, 42, 46, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 71, 76, 77, 79, 81, 83, 85, 93, 94, 95, 101, 104, 108, 112, 116, 119, 120, 122, 124, 125, 131, 133, 134, 135, 157, 161, 162, 164, 165, 167, 170, 171, 172, 173, 174, 176, 180, 185, 186, 191, 192, 194, 199, 200, 201, 202, 203, 204, 211, 214, 215, 220, 222, 228, 233, 234, 238, 243], "randomli": [10, 11, 20, 53, 170, 173, 186], "chosen": [10, 11, 26, 53, 54, 59, 93, 94, 95, 104, 125, 161, 183, 207, 227, 238], "assum": [10, 11, 26, 36, 40, 53, 54, 56, 59, 61, 79, 95, 118, 120, 132, 140, 150, 161, 162, 165, 175, 179, 207, 208, 212, 216, 217, 222, 232, 233, 239], "uniform": [10, 11, 43, 53], "logarithm": [10, 11, 36, 53, 79], "lower": [10, 11, 36, 43, 53, 59, 93, 94, 95, 104, 125, 131, 133, 140, 148, 157, 167, 174, 192, 206, 211, 212, 220, 238, 241], "coordin": [10, 11, 20, 26, 30, 33, 40, 43, 44, 51, 52, 53, 56, 59, 60, 61, 77, 79, 81, 82, 83, 85, 95, 101, 116, 148, 162, 169, 173, 191, 192, 194, 216, 218, 228, 239], "volum": [10, 11, 32, 33, 36, 41, 51, 52, 54, 55, 57, 59, 61, 64, 90, 101, 169, 192, 239], "fiduci": [10, 11, 51, 52, 53, 101], "vertic": [10, 11, 26, 47, 51, 52, 53, 60, 61, 62, 191, 194, 232, 234], "upper": [10, 11, 36, 43, 53, 54, 93, 94, 95, 104, 131, 133, 140, 148, 157, 167, 174, 192, 206, 211, 212, 238], "5x": 10, "angl": [10, 11, 20, 21, 22, 24, 26, 27, 29, 30, 36, 40, 41, 46, 51, 53, 56, 58, 59, 60, 61, 79, 81, 82, 83, 85, 91, 99, 101, 103, 108, 128, 139, 142, 148, 169, 194, 206, 212, 216, 218, 222, 225, 232, 234, 238, 239], "start_ev": [10, 11, 53], "pdf": [10, 11, 42, 53, 55, 116, 128, 194], "scheme": [10, 11, 38, 53, 241], "neg": [10, 11, 26, 38, 40, 53, 59, 120, 157, 215, 243], "per": [10, 11, 20, 26, 33, 36, 40, 41, 50, 51, 52, 53, 54, 57, 59, 61, 77, 81, 83, 85, 101, 108, 116, 120, 122, 131, 134, 150, 161, 162, 164, 167, 194, 199, 200, 201, 202, 203, 204, 208, 222, 225, 238], "smaller": [10, 11, 26, 53, 57, 61, 114, 123, 239], "than": [10, 11, 26, 30, 36, 51, 52, 53, 56, 59, 61, 77, 79, 93, 94, 95, 104, 114, 123, 124, 125, 139, 148, 164, 167, 176, 194, 220, 222, 228, 241], "probabl": [10, 11, 40, 51, 53, 54, 61, 227], "uniformli": [10, 11, 36, 53], "data": [10, 11, 15, 26, 27, 29, 30, 33, 36, 43, 44, 54, 56, 57, 59, 62, 68, 75, 76, 77, 79, 85, 86, 97, 101, 111, 114, 118, 119, 120, 123, 124, 133, 134, 135, 136, 148, 150, 161, 162, 164, 165, 167, 176, 179, 180, 183, 185, 186, 205, 208, 212, 213, 215, 229, 232, 233, 234, 235, 237, 239, 241, 242, 244, 245], "deposit": [10, 11, 36, 51, 52, 53, 90, 101], "memori": [11, 33, 59, 79, 81, 167, 239], "fin": [11, 33, 54], "dictionari": [11, 24, 26, 27, 29, 30, 32, 33, 36, 44, 51, 52, 53, 75, 76, 77, 80, 81, 83, 85, 92, 101, 106, 107, 108, 120, 132, 137, 150, 157, 164, 167, 176, 180, 185, 186, 194, 235, 238], "fit": [11, 26, 30, 43, 44, 53, 56, 59, 61, 101, 116, 119, 122, 128, 142, 148, 157, 167, 186, 195, 196, 203, 206], "95": [11, 53, 61], "percentil": [11, 53], "track": [11, 26, 34, 51, 52, 57, 59, 127, 161, 233, 243], "calcul": [11, 20, 21, 22, 24, 26, 27, 29, 30, 32, 33, 36, 38, 40, 41, 42, 51, 53, 54, 56, 57, 59, 61, 64, 77, 79, 101, 108, 112, 117, 119, 120, 124, 133, 137, 139, 140, 146, 149, 154, 157, 161, 164, 169, 173, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 206, 212, 214, 215, 216, 218, 222, 225, 227, 228, 232, 235, 239, 241, 243], "largest": [11, 59, 148, 191, 232, 239], "data_set": 11, "attribut": [11, 32, 33, 40, 57, 60, 81, 83, 85, 120, 167, 220], "write": [11, 26, 27, 29, 30, 32, 54, 56, 57, 61, 92, 106, 107, 176, 203, 229, 241], "dataset": [11, 51, 52, 167], "easi": [11, 59, 62, 233, 235, 238], "multiprocess": 11, "desir": [11, 23, 50, 53, 60, 128, 134, 135, 136, 153, 164, 174, 194, 220, 224], "part000x": [11, 50], "dict": [11, 20, 22, 23, 24, 26, 27, 29, 30, 33, 36, 75, 76, 77, 79, 81, 83, 85, 92, 95, 101, 106, 107, 108, 120, 122, 131, 132, 134, 137, 161, 164, 167, 185, 186, 194, 199, 200, 201, 202, 203, 204, 211], "meta": [11, 62, 95], "additional_interact": 11, "potenti": [11, 20, 51, 59, 241], "edep": 11, "ccnc": [11, 20, 42, 90, 101], "inelast": [11, 35, 51, 52, 53, 90, 101], "nc": [11, 38, 42, 51, 53, 101], "cc": [11, 20, 38, 42, 51, 53, 101], "slope": [11, 61, 101, 157, 206, 210], "19": [11, 61, 101, 108, 203], "offset": [11, 26, 83, 101, 122, 124, 125, 135, 161, 164, 167, 191, 194, 222], "01": [11, 26, 30, 54, 61, 71, 133, 227, 233], "37": [11, 56], "44": [11, 41], "flux": [11, 35, 46, 53, 212], "rnd": [11, 23, 33, 42], "minumum": 11, "solid": [11, 36, 41, 53, 212], "area": [11, 36, 40, 46, 51, 52, 53, 59, 90, 101, 169, 170, 173, 191, 212], "random": [11, 20, 22, 23, 24, 33, 42, 61, 62, 124, 125, 134, 170, 173, 180, 183, 185, 186], "product": [11, 42, 53, 59], "ie": [11, 27, 29, 161, 167, 185], "secondary_properti": 11, "d": [11, 22, 24, 25, 26, 30, 36, 38, 40, 43, 44, 54, 59, 60, 61, 79, 148, 212, 232, 243], "elaps": [11, 213], "sinc": [11, 58, 59, 60, 61, 101, 125, 127, 133, 134, 161, 228, 232, 233, 238, 242, 243], "present": [11, 26, 27, 29, 30, 53, 57, 59, 61, 79, 81, 83, 85, 107, 122, 161, 167, 176, 186, 220], "spectrum_typ": 11, "enrgi": 11, "certain": [11, 23, 41, 51, 52, 54, 56, 60, 61, 92, 106, 107, 170, 174, 235, 238, 241], "total": [11, 23, 34, 38, 41, 51, 52, 53, 54, 57, 86, 101, 120, 161, 167, 208, 222, 224, 228], "minim": [11, 26, 53, 54, 114, 122, 123, 157], "icecub": [11, 53], "2017": [11, 22, 53, 54, 61], "astrophys": [11, 53], "measur": [11, 23, 26, 30, 43, 44, 53, 54, 56, 58, 59, 70, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 101, 114, 118, 119, 123, 124, 134, 186, 203, 207, 212, 234, 235, 238, 239, 242], "sampl": [11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 42, 51, 52, 53, 54, 59, 61, 62, 77, 81, 83, 85, 93, 94, 95, 101, 104, 119, 120, 122, 125, 132, 134, 135, 136, 148, 150, 153, 157, 161, 162, 164, 167, 170, 173, 183, 186, 194, 200, 201, 210, 214, 215, 218, 222, 228, 234, 238, 239, 242, 243], "doi": [11, 22, 23, 24, 36, 37, 40, 42, 51, 53, 148], "org": [11, 22, 24, 37, 40, 42, 51, 53, 116, 128, 131, 133, 157, 194, 218, 232], "10": [11, 20, 21, 22, 23, 24, 26, 30, 36, 37, 40, 42, 43, 44, 48, 51, 53, 57, 61, 62, 86, 93, 94, 95, 101, 104, 131, 148, 154, 165, 170, 173, 195, 201, 202, 206, 207], "22323": [11, 51, 53], "301": [11, 53], "1005": [11, 53], "gzk": [11, 53], "van": [11, 53], "vliet": [11, 53], "et": [11, 38, 53, 56, 58, 61, 133], "al": [11, 38, 53, 56, 58, 61, 133], "2019": [11, 23, 53, 59], "arxiv": [11, 23, 37, 42, 53, 116, 128, 133, 148, 157, 194, 232], "ab": [11, 37, 51, 53, 54, 133, 148, 157], "1901": [11, 53], "01899v1": [11, 53], "proton": [11, 53], "fraction": [11, 20, 26, 27, 29, 30, 40, 42, 43, 44, 53, 54, 61, 62, 114, 123, 183], "get_proton_10": 11, "sensit": [11, 54, 57, 64, 119, 234], "e2_fluxes3": [11, 55], "ta": 11, "po": [11, 77, 82, 148], "sissa": 11, "395": [11, 51], "338": 11, "combin": [11, 23, 33, 36, 51, 52, 53, 54, 59, 75, 76, 77, 86, 161, 167, 180, 185, 241], "cosmogen": [11, 53], "2022": [11, 56], "helper": [11, 26, 29, 30, 79, 81, 114, 123, 131, 212, 216, 243], "interpret": [11, 22, 23, 24, 59, 80, 92, 106, 107, 122, 134, 148], "dictinari": [11, 167], "rmin": [11, 51, 52, 53, 90, 101], "rmax": [11, 47, 51, 52, 53, 90, 101], "zmin": [11, 47, 51, 52, 53, 90, 101], "zmax": [11, 51, 52, 53, 90, 101], "xmin": [11, 42, 51, 90, 101, 173], "xmax": [11, 20, 42, 51, 59, 90, 101, 148, 173], "ymin": [11, 51, 90, 101, 173], "ymax": [11, 42, 51, 90, 101, 173], "explan": [11, 59, 61, 77], "blow": 11, "mandatori": [11, 61], "end": [11, 26, 27, 29, 30, 33, 48, 57, 61, 76, 101, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 224, 228, 241, 242], "pass": [11, 26, 27, 29, 33, 40, 53, 56, 58, 59, 61, 75, 76, 77, 79, 80, 81, 83, 85, 95, 112, 122, 127, 131, 137, 157, 167, 170, 171, 173, 176, 185, 191, 206, 214, 220, 227, 233, 238, 243], "configur": [11, 15, 26, 27, 29, 30, 33, 53, 56, 59, 60, 62, 64, 75, 76, 77, 81, 83, 85, 125, 167, 220, 233, 241], "threshold": [11, 33, 53, 54, 61, 101, 108, 112, 120, 132, 194, 199, 200, 201, 202, 203, 204, 206, 222, 238], "within": [11, 36, 51, 52, 53, 62, 93, 94, 95, 104, 148, 164, 170, 173, 199], "mu": [11, 21, 53, 59], "trigger": [11, 33, 36, 48, 51, 52, 53, 54, 57, 59, 61, 62, 74, 77, 81, 83, 85, 90, 92, 97, 101, 106, 107, 109, 112, 119, 124, 125, 137, 161, 164, 167, 180, 183, 185, 186, 194, 205, 222, 227, 234, 242], "obvious": 11, "sens": [11, 59, 62, 241], "henc": [11, 26, 27, 29, 30, 54, 57, 59, 203, 235], "determind": 11, "depend": [11, 26, 27, 29, 30, 33, 37, 53, 56, 59, 60, 61, 74, 75, 76, 80, 81, 83, 85, 148, 161, 167, 199, 203, 217, 233, 235, 237, 239], "free": [11, 59], "tl": 11, "dr": 11, "larg": [11, 53, 54, 61, 77, 93, 94, 95, 104, 148, 161, 233, 239], "enough": [11, 46, 48, 53, 54, 59, 61, 93, 94, 95, 104, 116, 119, 238, 239], "necessari": [11, 26, 43, 44, 53, 56, 57, 59, 60, 61, 75, 76, 77, 161, 167, 175, 233, 235], "becaus": [11, 26, 51, 52, 53, 54, 56, 59, 61, 62, 77, 232, 234, 242], "cylind": [11, 53], "min": [11, 36, 134, 148], "max": [11, 30, 36, 134, 148, 170], "radiu": [11, 40, 53, 61, 170], "cube": 11, "fiducial_": 11, "full_": 11, "optin": [11, 148], "horizont": [11, 26, 30, 54, 60, 101, 192, 218, 232, 239], "displac": [11, 59, 125, 232], "x0": [11, 20, 26, 79, 101], "y0": [11, 79], "shift": [11, 43, 44, 58, 93, 94, 95, 104, 124, 140, 148, 150, 179, 194, 206, 218, 239], "via": [11, 22, 23, 24, 26, 27, 29, 30, 51, 52, 53, 56, 61, 79, 101, 124, 206, 207, 222, 233, 238, 241, 242], "dicitionari": 11, "bound": [11, 54, 93, 94, 95, 104, 133, 140, 157, 167, 192, 212], "intersect": [11, 101, 148, 218], "between": [11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 43, 44, 51, 53, 54, 56, 58, 59, 60, 61, 79, 101, 108, 116, 118, 120, 124, 125, 128, 133, 134, 140, 148, 157, 161, 164, 167, 170, 173, 191, 192, 194, 200, 201, 208, 212, 216, 218, 222, 228, 233, 238, 239, 241, 243], "align": [11, 234], "box": [11, 57, 71], "adapt": [11, 40, 56, 117, 229], "www": 11, "scratchapixel": 11, "lesson": 11, "3d": [11, 26, 27, 29, 30, 51, 52, 60, 95, 216, 234], "simpl": [11, 23, 26, 40, 43, 44, 46, 51, 53, 54, 58, 59, 60, 61, 62, 78, 84, 92, 106, 107, 135, 199, 204, 206, 219, 233, 242, 243], "shape": [11, 23, 26, 27, 29, 30, 44, 51, 52, 54, 58, 95, 116, 122, 132, 173, 206, 207, 211, 222, 228], "definit": [11, 26, 59, 101, 132, 161, 229, 234], "definiton": 11, "dim": [11, 30, 40, 77, 81, 83, 85, 95, 128, 142], "vector": [11, 20, 23, 26, 27, 29, 30, 33, 40, 51, 52, 59, 60, 61, 77, 79, 81, 82, 83, 85, 86, 91, 95, 99, 101, 103, 116, 148, 206, 216, 218, 232, 234], "fiducial_rmax": [11, 51, 52, 53, 57, 90, 101], "plus_minu": [11, 53], "mix": [11, 53], "proposal_kwarg": 11, "max_n_events_batch": 11, "100000": 11, "atmospher": [11, 59, 101, 148, 218], "studi": [11, 53, 54, 59, 61, 74, 85, 185, 186, 233, 241], "plu": [11, 53, 59, 95, 161], "els": [11, 53, 162, 220], "cross": [11, 26, 33, 38, 41, 53, 59, 61, 139, 148, 200, 201, 206, 208], "1e6": [11, 57], "numb": 11, "batch": [11, 57, 167, 239], "cut": [11, 30, 33, 36, 40, 61, 128, 135, 167, 174, 186, 205, 206, 207, 227, 228, 242], "appli": [11, 26, 27, 29, 30, 33, 36, 54, 58, 59, 60, 61, 83, 86, 93, 94, 95, 97, 104, 108, 114, 118, 119, 122, 123, 124, 125, 131, 132, 140, 151, 152, 156, 157, 158, 161, 167, 191, 192, 194, 199, 203, 206, 214, 216, 220, 222, 227, 228, 235, 239, 241, 242], "state": [11, 26, 233, 238], "proposal_config": [11, 53], "proposal_tables_path": 11, "write_ev": 11, "0deg": [11, 58, 79, 81, 82, 83, 85, 232, 234], "48550": 11, "2111": 11, "10299": 11, "atrribut": 11, "chose": 11, "exclus": [11, 77], "skeleton": 13, "tarbal": 15, "desi": [15, 213], "precalcul": 15, "storag": [15, 239], "araeventlist_filenam": 16, "hdf5_filenam": 16, "arz": [18, 22, 51, 52, 101], "get_vector_potenti": [18, 19, 20], "get_vector_potential_numba": [18, 19, 20], "thetaprime_to_theta": [18, 19, 20], "theta_to_thetaprim": [18, 19, 20], "arz_tabul": [18, 19, 20], "hcrb2017": [18, 22], "get_time_trac": [18, 19, 20, 21, 22, 23, 24, 59], "get_frequency_spectrum": [18, 21, 22, 23, 59, 90, 93, 94, 95, 104, 238, 239], "gauss": [18, 21, 148], "get_n_askdeptha": [18, 21], "emitt": [18, 26, 33, 59, 60, 64, 90, 97, 101, 105, 238], "parametr": [18, 22, 40, 79, 212], "logger": [18, 24, 33, 34, 77, 86, 109, 127, 148, 167, 171, 220, 241], "get_parametr": [18, 24], "em_fract": [19, 20], "set_se": [19, 20], "set_interpolation_factor": [19, 20], "set_interpolation_factor2": [19, 20], "get_shower_profil": [19, 20], "get_last_shower_profile_id": [19, 20], "get_vector_potential_fast": [19, 20], "shower_energi": [20, 51, 52, 59, 61, 90, 101], "n": [20, 21, 22, 23, 24, 25, 26, 30, 43, 44, 51, 54, 56, 57, 58, 59, 60, 61, 79, 118, 125, 148, 158, 162, 164, 206, 207, 210, 212, 215, 216, 217, 218, 222, 225, 232, 239, 242], "dt": [20, 21, 22, 23, 24, 33, 51, 52, 54, 59, 79, 90, 101, 200, 201, 202, 215, 239], "profile_depth": 20, "profile_c": 20, "af": 20, "freq_po": 20, "freq_neg": 20, "exp_po": 20, "exp_neg": 20, "t0_po": 20, "t0_neg": 20, "had": [20, 21, 22, 24, 51, 53, 54, 59, 61, 101, 239, 241], "n_index": [20, 21, 22, 24, 59, 79, 128, 142, 195, 239], "78": [20, 43, 56, 58, 59, 61], "interp_factor": [20, 22, 59], "interp_factor2": [20, 22, 59], "100": [20, 22, 24, 26, 30, 53, 54, 56, 57, 59, 60, 61, 70, 101, 120, 148, 154, 186, 194, 206, 218, 222, 225, 232, 233], "shift_for_xmax": [20, 59], "em_factor": 20, "fast": [20, 36, 59, 206, 243], "interpol": [20, 22, 26, 27, 29, 30, 43, 44, 46, 56, 60, 61, 70, 79, 124, 125, 133, 148, 169, 212, 218, 232], "domain": [20, 21, 22, 23, 24, 79, 93, 94, 95, 104, 120, 122, 125, 131, 134, 158, 194, 210, 215, 222, 238, 242, 243], "puls": [20, 21, 22, 23, 24, 26, 56, 58, 59, 62, 91, 99, 101, 103, 114, 119, 123, 135, 139, 150, 157, 191, 206, 208, 210, 225, 238, 239, 242], "excess": [20, 22, 59, 101, 114, 123], "deriv": [20, 26, 101, 206], "efield": [20, 23, 26, 27, 29, 30, 33, 54, 61, 95, 101, 147, 150, 174, 207, 216, 228], "integr": [20, 26, 27, 29, 33, 40, 41, 46, 51, 59, 60, 101, 108, 148, 194, 202, 210, 212, 222], "wa": [20, 34, 51, 52, 54, 56, 58, 61, 68, 76, 81, 83, 85, 92, 93, 94, 95, 97, 101, 104, 106, 107, 120, 127, 132, 140, 148, 161, 165, 175, 191, 205, 220, 232, 233, 234, 235, 238, 241, 242], "sum": [20, 26, 36, 46, 51, 52, 53, 54, 57, 77, 79, 140, 148, 194, 215, 218, 222, 238, 239], "trapezoid": [20, 59], "rule": [20, 53, 59], "size": [20, 30, 36, 40, 59, 79, 95, 108, 119, 120, 122, 131, 138, 148, 164, 165, 176, 186, 191, 192, 218, 232, 233, 239], "bin": [20, 21, 22, 23, 24, 36, 41, 51, 52, 53, 57, 59, 61, 79, 93, 94, 95, 104, 134, 194, 199, 200, 201, 202, 204, 215, 218, 222, 243], "depth": [20, 26, 30, 37, 40, 43, 44, 54, 56, 59, 60, 62, 77, 81, 83, 85, 101, 148, 191, 192, 217, 234, 239], "em": [20, 21, 22, 24, 51, 53, 59, 61, 101, 242], "refract": [20, 21, 22, 24, 26, 27, 28, 29, 30, 43, 44, 56, 58, 59, 60, 79, 92, 101, 106, 107, 128, 140, 142, 148, 191, 192, 194, 217, 218, 222, 228, 232], "1km": 20, "observ": [20, 21, 22, 24, 26, 27, 29, 30, 33, 44, 56, 59, 60, 61, 91, 99, 101, 103, 148, 162, 169, 170, 171, 172, 173, 218, 242], "amplitud": [20, 21, 22, 23, 24, 33, 36, 51, 52, 54, 58, 59, 60, 61, 86, 90, 101, 114, 122, 123, 131, 134, 146, 148, 157, 194, 199, 203, 204, 208, 210, 214, 216, 218], "scale": [20, 36, 43, 44, 54, 58, 59, 60, 61, 114, 123, 212], "factor": [20, 33, 59, 60, 61, 108, 112, 120, 125, 132, 194, 212, 222, 228, 229], "precis": [20, 53, 101, 161, 167, 218, 242], "benefici": 20, "slow": [20, 53, 59, 133, 148, 167, 206, 222, 233, 239], "down": [20, 43, 44, 53, 62, 79, 81, 82, 83, 85, 232, 234, 238, 239], "proport": 20, "just": [20, 24, 26, 46, 53, 54, 59, 60, 61, 62, 79, 122, 131, 135, 139, 148, 161, 204, 220, 237, 238, 239, 242], "around": [20, 26, 28, 30, 53, 54, 61, 93, 94, 95, 104, 114, 123, 137, 138, 141, 148, 191, 215, 227, 234, 238, 239, 242, 243], "peak": [20, 59, 101, 119, 132, 148], "rel": [20, 23, 51, 53, 59, 61, 77, 81, 83, 85, 95, 101, 118, 123, 137, 140, 148, 150, 157, 162, 192, 205, 234, 238, 242], "thetaprim": 20, "r_prime": 20, "amount": [20, 61, 79, 194, 229], "matter": [20, 148], "travers": 20, "carri": [20, 42, 75, 76, 214, 233], "iN": [20, 23, 59], "slant": [20, 101, 148], "same_show": [20, 22, 24, 59], "output_mod": [20, 59, 170, 173], "maximum_angl": 20, "3490658503988659": 20, "field": [20, 22, 23, 26, 27, 29, 30, 33, 41, 43, 44, 51, 52, 53, 56, 58, 59, 60, 61, 62, 79, 81, 83, 85, 91, 92, 95, 99, 101, 103, 106, 107, 124, 125, 140, 148, 150, 151, 152, 153, 154, 157, 158, 173, 176, 192, 206, 207, 208, 216, 228, 241], "realiz": [20, 24, 51, 52, 59, 79, 124, 232], "choosen": [20, 24, 170, 173], "solut": [20, 22, 23, 24, 26, 27, 29, 30, 33, 36, 51, 52, 59, 60, 61, 62, 95, 101, 104, 140, 146, 234], "charge_excess": [20, 59], "angular": [20, 26], "cherenkov": [20, 22, 24, 30, 59, 61, 225], "empti": [20, 24, 26, 32, 61, 93, 94, 95, 104, 108, 150, 194], "librari": [20, 22, 26, 51, 52, 59, 60, 61, 132], "efield_trac": 20, "er": [20, 23, 26, 30, 33, 95, 228], "etheta": [20, 22, 23, 24, 26, 30, 33, 61, 79, 95, 101, 128, 207, 208, 216, 228, 232], "ephi": [20, 23, 26, 30, 33, 61, 79, 95, 101, 128, 207, 208, 216, 228, 232], "kei": [20, 24, 26, 27, 29, 30, 33, 36, 51, 52, 53, 58, 75, 76, 77, 79, 85, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 120, 122, 131, 134, 150, 161, 164, 167, 176, 180, 194, 199, 200, 201, 202, 203, 204, 218, 233, 235], "deprec": [20, 33, 85, 101, 127, 233], "trapeoiz": 20, "transcript": 20, "fortran": 20, "NOT": [20, 36, 43, 44, 53, 59, 62, 114, 123, 161], "1234": 20, "theta_refer": 20, "relativ": [20, 114, 169], "is_em_show": 21, "lpm": [21, 59], "viewangl": [21, 22, 24], "sight": [21, 22, 24, 59], "width": [21, 22, 23, 24, 26, 93, 94, 95, 101, 104, 141, 148, 191, 200, 201], "invers": [21, 22, 23, 24, 26, 51, 52, 59, 93, 94, 95, 101, 104, 200, 201], "rate": [21, 22, 23, 24, 26, 27, 29, 30, 51, 52, 54, 59, 61, 93, 94, 95, 101, 104, 122, 125, 134, 136, 153, 167, 194, 200, 201, 210, 212, 214, 215, 222, 228, 238, 239, 243], "enabl": [21, 22, 23, 24, 150, 206, 220], "disabl": [21, 150], "lpd": 21, "effect": [21, 26, 27, 29, 30, 32, 33, 36, 41, 43, 44, 51, 53, 54, 55, 57, 59, 60, 61, 64, 77, 79, 86, 114, 123, 134, 205, 212, 215, 220, 232, 242], "nont": 21, "complex": [21, 22, 23, 24, 43, 44, 51, 58, 59, 60, 77, 79, 86, 101, 114, 123, 131, 215, 222, 228, 232, 242], "frequenc": [21, 22, 23, 24, 26, 27, 29, 30, 37, 56, 58, 60, 61, 62, 68, 70, 77, 78, 79, 81, 83, 84, 85, 86, 90, 93, 94, 95, 101, 104, 108, 114, 117, 120, 122, 123, 124, 125, 131, 132, 133, 134, 139, 140, 148, 161, 164, 174, 194, 206, 210, 211, 214, 215, 222, 225, 228, 232, 234, 238, 242, 243], "sigma": [21, 23, 61, 112, 131, 174, 206, 211], "fudge_lpm": 21, "gaussian": [21, 23, 58, 59, 122, 131, 148, 186, 211], "greisen": 21, "gaisser": 21, "hilla": 21, "flag": [21, 101, 120, 149, 155, 222], "1103": [21, 22, 24, 36], "physrevd": [21, 22, 24, 36], "82": [21, 53, 56], "074017": 21, "parameter": [21, 22, 24, 38, 40], "compat": [21, 61, 77, 80, 81, 83, 85, 161, 219, 233], "regim": 21, "neglig": [21, 53, 59, 215], "switch": [21, 111, 114, 123, 139, 167, 241], "rescal": [21, 23, 36, 79, 232], "match": [21, 26, 27, 29, 30, 33, 51, 75, 76, 148, 167, 183, 186, 222, 238], "e_lpm": 21, "full_output": [22, 23, 24, 202], "obtain": [22, 23, 24, 26, 27, 29, 30, 53, 54, 59, 61, 74, 114, 123, 203, 211, 215, 228], "fft": [22, 23, 24, 93, 94, 95, 101, 104, 209], "standard": [22, 23, 24, 38, 42, 53, 55, 56, 59, 70, 81, 83, 85, 108, 124, 139, 209, 214, 227, 233, 241], "approach": [22, 23, 24, 26, 51, 52, 243], "assur": [22, 23, 24], "fourier": [22, 23, 24, 59, 93, 94, 95, 104, 118, 132, 206, 208, 215, 228, 238, 242], "transform": [22, 23, 24, 26, 53, 59, 91, 99, 103, 125, 132, 215, 228, 238, 242], "known": [22, 23, 24, 161, 235], "arz2019": [22, 59, 61, 239], "zhs1992": [22, 24, 59], "zh": [22, 24, 59], "za": [22, 24], "f": [22, 24, 36, 41, 42, 51, 52, 57, 59, 79, 118, 132, 134, 148, 186, 211], "halzen": [22, 24], "stanev": [22, 24], "phy": [22, 24, 36, 38, 61, 152], "rev": [22, 24, 36, 38, 61], "45": [22, 24, 61, 139, 225, 238], "362": [22, 24], "1992": [22, 24], "phase": [22, 24, 33, 43, 44, 59, 70, 74, 77, 79, 81, 83, 85, 86, 108, 111, 114, 120, 123, 124, 125, 134, 157, 162, 194, 206, 210, 222, 227, 228, 232, 233], "alvarez2000": [22, 24, 59, 61], "mainli": [22, 24, 59, 238], "j": [22, 24, 42, 57, 59, 162, 212], "alvarez": [22, 24], "muniz": [22, 24], "vazquez": [22, 24], "d62": [22, 24], "2000": [22, 24, 148, 170], "84": [22, 24, 53], "103003": [22, 24], "alvarez2009": [22, 24, 59, 61, 101], "w": [22, 24, 26, 41, 54, 57, 59, 148], "carvalho": [22, 24, 148], "tuero": [22, 24], "coher": [22, 24, 59, 148, 215], "eev": [22, 24, 53, 59], "astroparticl": [22, 24], "35": [22, 62], "2012": [22, 24], "287": [22, 24], "299": [22, 24], "c": [22, 24, 26, 30, 37, 41, 43, 44, 56, 60, 148, 161, 228, 237], "jame": [22, 24], "prothero": [22, 24], "thin": [22, 24, 53], "energet": 22, "dens": [22, 24], "media": [22, 24, 53, 60, 232], "applic": [22, 24, 59, 220, 233, 237, 241], "32": [22, 24, 101, 194, 200], "2009": [22, 24], "111": [22, 24, 53, 101], "hanson": 22, "connolli": [22, 38, 61], "91": [22, 53, 133], "75": [22, 37, 56, 194], "89": [22, 53], "semi": 22, "mc": [22, 42, 55, 59, 97, 101, 125, 148, 185, 186, 194, 238, 242], "mu\u00f1iz": 22, "romero": 22, "wolf": 22, "2011": [22, 38, 61], "accur": [22, 53, 59, 122, 235], "radiat": [22, 53, 59, 60, 79, 101, 216], "gravit": 22, "cosmologi": 22, "arz2020": [22, 59, 61], "updat": [22, 34, 53, 59, 61, 66, 73, 75, 76, 77, 81, 82, 83, 85, 148, 232, 233], "taken": [22, 26, 37, 53, 59, 60, 61, 75, 76, 85, 101, 171, 194, 212, 220, 228, 242], "p": [22, 26, 38, 51, 53, 61, 118, 216], "hansen": 22, "101": [22, 36, 54, 61, 101], "2020": [22, 23, 53, 56, 58, 61, 232], "083005": 22, "behviour": 22, "pick": [22, 161, 186, 192], "voltag": [23, 33, 51, 59, 61, 79, 101, 108, 122, 124, 125, 134, 140, 150, 151, 157, 167, 192, 194, 200, 201, 202, 203, 207, 208, 210, 214, 215, 228, 234, 238, 239, 241], "strength": 23, "three": [23, 40, 56, 59, 61, 62, 75, 76, 161, 234, 239], "pulser": 23, "antena": 23, "1m": [23, 57, 232], "fold": [23, 133, 140, 206, 239, 242], "respons": [23, 33, 51, 53, 54, 61, 62, 66, 68, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 101, 114, 123, 124, 125, 131, 133, 140, 146, 150, 151, 194, 203, 207, 211, 213, 214, 228, 239, 241, 242], "pattern": [23, 33, 54, 59, 79, 101, 170, 171, 173, 185, 206, 233], "delta_puls": [23, 58], "delta": [23, 51, 53, 208], "cw": [23, 58, 101, 132], "sinusoid": 23, "wave": [23, 26, 59, 132, 216, 218, 239, 242], "squar": [23, 51, 58, 59, 101, 148, 202, 206, 207, 210], "rectangular": [23, 58, 93, 94, 95, 101, 104, 131, 141, 148, 152, 206, 211], "amplitued": 23, "tone_burst": [23, 101], "sine": 23, "idl1": 23, "hvsp1": 23, "waveform": [23, 33, 59, 61, 62, 77, 108, 124, 132, 139, 140, 157, 167, 186, 191, 192, 194, 218, 222, 234, 238, 239], "ku": [23, 232], "lab": 23, "half": [23, 41, 53, 59, 125, 131, 224], "ara02": 23, "calpuls": 23, "depict": [23, 59], "02": 23, "efield_idl1_spic": [23, 58], "spice": 23, "calibr": [23, 118, 161, 162, 164, 167, 179, 180, 233, 235, 242], "campaign": [23, 235], "2018": [23, 33, 40, 131, 134, 232, 233], "journal": 23, "instrument": 23, "15": [23, 53, 74, 101, 123], "p09039": 23, "1088": [23, 148], "1748": [23, 148], "0221": [23, 148], "09": [23, 61, 161, 162], "2006": [23, 148], "03027": 23, "efield_delta_puls": 23, "unpolar": [23, 208], "preserv": [23, 208], "power": [23, 51, 53, 112, 120, 133, 134, 148, 194, 202, 208, 214, 215, 218], "a_theta": 23, "sqrt": [23, 208, 215], "a_phi": 23, "emitter_frequ": 23, "half_width": [23, 90, 101], "1d": [23, 43, 44, 120, 161, 162, 222, 228], "electric_field": [23, 90, 92, 106, 107, 228, 242], "component": 23, "nuradiologg": [24, 148, 209, 220, 241], "statu": [24, 61, 76, 127, 148, 203, 209, 220, 241], "exchang": 24, "k_l": [24, 90, 101], "average_show": 24, "energyshow": 24, "fromhadron": 24, "physics35": 24, "energeticshow": 24, "drawn": [24, 26, 53, 59, 134, 157, 186], "averag": [24, 36, 43, 44, 53, 56, 59, 81, 83, 85, 86, 95, 120, 139, 161, 214, 225, 228], "analyticraytrac": [25, 60], "speed_of_light": [25, 26], "get_n_step": [25, 26], "get_seg": [25, 26], "get_z_deep": [25, 26], "get_c0_from_log": [25, 26], "get_i": [25, 26], "get_gamma": [25, 26], "get_turning_point": [25, 26], "get_y_with_z_mirror": [25, 26], "get_y_turn": [25, 26], "get_delta_i": [25, 26], "obj_delta_y_squar": [25, 26], "get_reflection_point": [25, 26], "get_z_unmirror": [25, 26], "get_y_diff": [25, 26], "ray_tracing_2d": [25, 26, 27, 29, 60], "get_c_1": [25, 26], "get_c": [25, 26], "get_z_mirror": [25, 26], "get_path_length": [25, 26, 27, 29, 30, 60], "get_path_length_analyt": [25, 26], "get_travel_tim": [25, 26, 27, 29, 30, 60], "get_travel_time_analyt": [25, 26], "get_attenuation_along_path": [25, 26], "get_path_seg": [25, 26], "get_angl": [25, 26, 159, 168, 169], "get_launch_angl": [25, 26], "get_receive_angl": [25, 26], "get_reflection_angl": [25, 26, 27, 29, 30], "get_path": [25, 26, 27, 29, 30, 60], "get_path_reflect": [25, 26], "obj_delta_i": [25, 26], "determine_solution_typ": [25, 26], "find_solut": [25, 26, 27, 29, 30, 60], "plot_result": [25, 26], "get_angle_from_c_0": [25, 26], "get_angle_from_logc_0": [25, 26], "get_c_0_from_angl": [25, 26], "get_z_from_n": [25, 26], "get_surf_skim_angl": [25, 26], "is_in_refraction_zon": [25, 26], "get_tof_for_straight_lin": [25, 26], "get_surface_puls": [25, 26], "angular_diff": [25, 26], "apply_propagation_effect": [25, 26, 27, 29, 30], "get_attenu": [25, 26, 27, 29, 30, 60], "get_config": [25, 26, 27, 29, 30, 31, 33], "get_launch_vector": [25, 26, 27, 29, 30, 60], "get_number_of_raytracing_solut": [25, 26, 27, 29, 30], "get_number_of_solut": [25, 26, 27, 29, 30, 60], "get_output_paramet": [25, 26, 27, 29, 30], "get_raytracing_output": [25, 26, 27, 29, 30, 101], "get_receive_vector": [25, 26, 27, 29, 30, 60], "get_result": [25, 26, 27, 29, 30, 60], "get_solution_typ": [25, 26, 27, 29, 30, 60], "has_solut": [25, 26, 27, 29, 30], "reset_solut": [25, 26, 27, 29, 30], "set_config": [25, 26, 27, 29, 30], "set_start_and_end_point": [25, 26, 27, 29, 30, 60], "use_optional_funct": [25, 26, 27, 29, 30], "ray_trac": [25, 26, 60], "set_solut": [25, 26, 30], "get_effective_index_birefring": [25, 26], "get_polarization_birefringence_simpl": [25, 26], "get_polarization_birefring": [25, 26], "on_sky_birefring": [25, 26], "get_pulse_propagation_birefring": [25, 26], "get_path_properties_birefring": [25, 26], "get_focus": [25, 26, 30], "get_ray_path": [25, 26], "directraytrac": 25, "direct_ray_trac": [25, 27], "get_propagation_modul": [25, 28, 60], "propagation_base_class": 25, "ray_tracing_bas": [25, 26, 27, 29, 30], "radioproparaytrac": 25, "radiopropa_ray_trac": [25, 30], "set_shower_axi": [25, 26, 27, 29, 30], "set_iterative_sphere_s": [25, 26, 27, 29, 30], "set_iterative_step_s": [25, 30], "activate_auto_step_s": [25, 30], "deactivate_auto_step_s": [25, 30], "set_cut_viewing_angl": [25, 30], "set_maximum_trajectory_length": [25, 30], "raytracer_it": [25, 30], "set_minimizer_toler": [25, 30], "raytracer_birefring": [25, 30], "raytracer_minim": [25, 30], "get_path_candid": [25, 30], "get_launch_vector_analyt": [25, 30], "get_correction_path_length": [25, 30], "get_correction_travel_tim": [25, 30], "get_frequencies_for_attenu": [25, 30], "delta_theta_direct": [25, 30], "delta_theta_bottom": [25, 30], "delta_theta_reflect": [25, 30], "299792458": 26, "optim": [26, 95, 122, 157], "algorithm": [26, 30, 42, 59, 120, 135, 167, 206, 222], "attenu": [26, 27, 29, 30, 33, 35, 51, 60, 61, 62, 64, 86, 203], "along": [26, 27, 29, 30, 33, 40, 43, 44, 51, 52, 53, 59, 61, 77, 79, 81, 83, 85, 101, 148, 218, 233, 234, 238], "overwritten": [26, 107, 167, 221, 224], "init": [26, 79, 148], "x1": [26, 27, 29, 30, 79], "x2": [26, 27, 29, 30], "dx": [26, 42], "segment": [26, 27], "approx": [26, 118], "equi": 26, "dist": 26, "np": [26, 27, 29, 30, 36, 43, 44, 51, 53, 54, 55, 59, 60, 61, 77, 86, 91, 93, 94, 95, 99, 103, 104, 116, 119, 132, 148, 161, 162, 167, 206, 215, 218, 222, 239], "linspac": [26, 60], "ice_param": 26, "z_deep": 26, "homogen": [26, 53, 59], "know": [26, 53, 59, 61, 235, 241, 243], "035": 26, "awai": [26, 53, 59, 82, 119, 228], "monoton": [26, 171], "increas": [26, 33, 53, 54, 86, 120, 122, 133, 148, 157, 167, 171], "logc0": 26, "n_ice": [26, 43, 44, 56, 217], "c_0": [26, 60], "likelihood": 26, "better": [26, 59, 70, 74, 123, 133, 157, 222, 235, 239], "gamma": [26, 53, 60, 101], "c_1": [26, 60], "z_0": [26, 43, 44, 56, 60], "exponenti": [26, 28, 43, 44, 56, 60, 206], "delta_n": [26, 43, 44, 56, 60], "turn": [26, 53, 59, 93, 94, 95, 104, 241], "off": [26, 59, 60, 61, 93, 94, 95, 104, 148, 192, 220, 238], "saddl": 26, "transit": [26, 43], "go": [26, 53, 60, 61, 74, 111, 114, 123, 233, 234], "technic": [26, 161], "relat": [26, 51, 60, 79, 92, 106, 107, 119, 207, 238], "typl": [26, 83], "mirror": [26, 60, 213], "medium_reflect": 26, "c0rang": 26, "reflection_cas": 26, "logc_0": 26, "c0": [26, 60], "bottom": [26, 27, 29, 30, 36, 43, 44, 56, 60, 61, 238], "shelf": [26, 42, 56], "unmirror": 26, "z_raw": 26, "in_air": 26, "dy": 26, "dz": [26, 30], "attenuation_model": [26, 27, 29, 30, 56, 60, 61], "sp1": [26, 27, 29, 30, 37, 54, 56, 60, 61], "n_frequencies_integr": [26, 27, 29, 30, 60], "25": [26, 30, 33, 40, 56, 59, 60, 61, 101, 127, 220, 241], "use_optimized_start_valu": 26, "overwrite_speedup": 26, "use_cpp": 26, "compile_numba": 26, "loglevel": 26, "verbos": [26, 75, 76, 77, 86, 161, 167, 171, 185], "notset": [26, 27, 29, 30, 77, 86, 116, 118, 119, 120, 164, 165, 167, 171, 176, 185, 186, 241], "paramt": [26, 79, 134], "skim": 26, "ineffici": 26, "approxim": [26, 33, 40, 53, 54, 58, 59, 61, 122, 125, 167, 174, 215], "discret": [26, 125], "loss": [26, 51, 53, 70, 118, 120], "accuraci": [26, 59, 133, 183, 239], "pr": [26, 167], "507": 26, "speedup_attenuation_model": 26, "gl3": [26, 37], "deactiv": 26, "routin": [26, 215], "constant": [26, 38, 40, 53, 56, 59, 60, 61, 81, 83, 85, 86, 120], "zero": [26, 27, 29, 30, 34, 53, 54, 61, 81, 83, 85, 93, 94, 95, 104, 114, 120, 123, 138, 141, 161, 180, 206, 215, 220, 228, 242], "ben": [26, 112], "hokanson": [26, 112], "fase": 26, "pyrex": [26, 68, 112], "travel": [26, 27, 29, 30, 36, 51, 52, 59, 60, 140, 161, 191, 192, 216], "flight": [26, 53, 59], "max_detector_freq": [26, 27, 29, 30], "stop": [26, 27, 29, 30, 34, 53, 101, 138, 148, 179, 220, 242], "larger": [26, 51, 52, 53, 59, 61, 93, 94, 95, 104, 133, 134, 139, 140, 239], "x_start": 26, "occur": [26, 48, 51, 200, 201], "n_point": [26, 27, 29, 30], "1000": [26, 27, 29, 53, 54, 62, 86, 120, 131, 132, 148, 152, 167, 232, 233, 242], "purpos": [26, 48, 53, 59, 86, 125, 238], "valid": [26, 85, 95], "problem": [26, 59, 93, 94, 95, 104, 161, 220, 239], "yy": [26, 47, 51, 52, 53, 54], "zz": [26, 47, 51, 52, 53, 60], "presenc": 26, "construct": [26, 43, 44, 51, 52, 60, 120, 148, 233], "call": [26, 53, 56, 59, 60, 61, 77, 161, 164, 191, 192, 220, 232, 233, 235, 238, 241], "put": [26, 59, 120, 164, 232], "togeth": [26, 56, 59, 164, 194, 234], "finder": 26, "2dim": [26, 30], "solution_typ": [26, 27, 29, 30, 60], "prerequesit": 26, "violat": 26, "univers": 26, "achiev": [26, 54, 124, 125, 241], "ax": [26, 36, 47, 54, 55, 132, 158, 212], "visual": [26, 233, 234], "z_po": 26, "angoff": 26, "sought": 26, "smallest": [26, 232], "possibl": [26, 30, 60, 75, 76, 104, 124, 125, 161, 194, 233, 238, 239, 241], "veri": [26, 56, 78, 114, 123, 148, 179, 204, 215, 233, 239], "chang": [26, 27, 29, 30, 40, 51, 53, 56, 59, 61, 74, 76, 85, 93, 94, 95, 104, 158, 161, 220, 232, 234, 235, 238, 241, 242], "prevent": 26, "invalid": [26, 167], "rang": [26, 30, 36, 40, 51, 53, 54, 60, 61, 101, 114, 123, 124, 133, 148, 167, 174, 212, 232], "exactli": 26, "nome": 26, "impli": [26, 53, 215, 238, 242], "anglaunch": 26, "procedur": [26, 59, 61, 116, 233, 242], "optimis": 26, "equat": [26, 51, 55, 59, 60, 207], "get_n": 26, "solv": [26, 60, 206, 207], "beam": [26, 101, 108, 116, 128, 148, 194, 218, 222], "90": [26, 53, 54, 59, 61, 142, 232, 233, 234], "zone": [26, 59, 82, 125], "c0crit": 26, "critic": [26, 209, 220], "thcrit": 26, "receiv": [26, 27, 29, 30, 33, 43, 44, 51, 52, 60, 101, 161, 167, 220, 239], "oposit": [26, 30], "shadow": [26, 59], "process": [26, 33, 48, 53, 61, 62, 119, 120, 164, 214, 233, 238, 239, 241], "statement": [26, 241], "necessarili": [26, 51, 52, 60, 77, 161, 242], "nonetheless": 26, "todo": [26, 148, 242], "why": [26, 59, 214], "seem": [26, 59], "lie": [26, 53, 194], "ycheck": 26, "ycrit": 26, "give": [26, 33, 59, 60, 61, 62, 75, 76, 86, 120, 161, 233, 239], "idea": [26, 59, 161, 241, 243], "close": [26, 51, 52, 54, 59, 60, 140, 161], "could": [26, 51, 54, 59, 77, 120, 161, 207, 241], "grai": 26, "far": [26, 27, 29, 42, 51, 54, 59, 77, 81, 82, 83, 85, 148, 206, 239], "hypothat": 26, "straight": [26, 27, 28, 59, 79, 81, 82, 83, 85, 131, 148, 152, 194, 211, 218, 232, 234], "Such": [26, 239], "fermat": 26, "principl": [26, 54, 59, 60, 131, 233, 234, 241], "explic": 26, "geometr": [26, 116, 117, 148, 242], "optic": [26, 59, 60], "infirn": 26, "chdraw": 26, "label": [26, 36, 54, 55, 60, 75, 76, 132], "brewster": 26, "firn": [26, 81, 82, 83, 85, 232], "enter": 26, "boolean": [26, 30, 51, 52, 60, 76, 93, 94, 95, 104, 112, 140, 157, 165, 175, 186, 191, 203, 206, 228], "leav": [26, 59], "neither": 26, "warn": [26, 27, 29, 30, 62, 77, 86, 92, 93, 94, 95, 101, 104, 106, 107, 209, 220, 222, 241], "draw": [26, 28, 42, 53, 59, 186, 239], "pyplot": [26, 55, 60, 61, 238], "dot": [26, 206], "red": 26, "figur": [26, 148, 167], "x_refl": 26, "z_refl": [26, 30], "pulser_po": 26, "receiver_po": 26, "ipulssol": 26, "irxsol": 26, "subject": [26, 59], "specular": 26, "transmiss": [26, 44, 56, 60], "interfac": [26, 75, 76, 77, 86, 92, 101, 106, 107, 161, 167, 217, 236], "emiss": [26, 51, 59, 61, 101, 133, 148, 161, 238], "hit": [26, 60], "directli": [26, 33, 56, 59, 122, 191, 239, 242], "equival": [26, 36, 53, 228, 234, 238], "fashion": [26, 134], "raytr": 26, "x_refl_start": 26, "treat": [26, 85], "predefin": [26, 44], "emisss": 26, "would": [26, 53, 54, 59, 61, 125, 133, 228, 233, 238, 239, 241, 242], "ofoptim": 26, "exact": [26, 51, 161], "defint": 26, "i_solut": [26, 27, 29, 30, 60, 101], "weaken": [26, 27, 29, 30], "account": [26, 27, 29, 30, 51, 53, 56, 58, 59, 60, 61, 62, 77, 101, 120, 161, 205, 212, 215, 228, 242], "electricfield": [26, 27, 29, 30, 90, 95, 176, 228, 238], "raytrac": [26, 27, 29, 30, 33, 43, 44, 51, 60, 106, 140, 239], "due": [26, 27, 29, 30, 40, 53, 59, 60, 61, 77, 114, 123, 161, 167, 222, 232, 235, 239, 242], "higher": [26, 27, 29, 30, 54, 59, 125, 194, 228, 238, 241], "interv": [26, 27, 29, 30, 34, 51, 52, 59, 138, 141, 180, 194, 212, 222], "visibl": [26, 27, 29, 30, 114, 123], "finer": [26, 27, 29, 30, 36, 192, 239], "falloff": [26, 27, 29, 30], "3dim": [26, 27, 29, 30, 43, 44, 207], "pair": [26, 27, 29, 30, 33, 51, 53, 120, 142, 161, 176, 191, 192, 233, 239], "structur": [26, 27, 29, 30, 33, 61, 62, 65, 70, 74, 101, 164, 208, 244, 245], "ndim": [26, 27, 29, 30], "receive_vector": [26, 27, 29, 30, 51, 52, 60], "shall": [26, 27, 29, 81, 83, 85, 133, 135, 139, 158, 170, 172, 173, 176, 186, 191, 192, 243], "reset": [26, 27, 29, 30, 34, 83, 164], "previou": [26, 27, 29, 30, 53, 59, 61, 93, 94, 95, 104], "function_nam": [26, 27, 29, 30], "noth": [26, 27, 29, 30, 33, 85, 167, 205], "neseccari": [26, 27, 29, 30], "comma": [26, 27, 29, 30], "keyword": [26, 27, 29, 30, 59, 80, 81, 220], "sphere_s": [26, 27, 29, 30], "arai": [26, 27, 29, 30], "n_reflect": [26, 27, 29, 30, 36, 60, 61], "ray_tracing_2d_kward": [26, 27, 29], "wrapper": [26, 28, 44, 59, 215, 238, 243], "arbitrari": [26, 28, 53, 60, 205], "initil": [26, 27, 29, 30], "describ": [26, 27, 29, 30, 40, 43, 44, 54, 55, 61, 76, 77, 118, 120, 124, 157, 206, 210, 215, 218, 232, 233, 234, 235, 239, 242], "log_nam": 26, "thing": [26, 53, 57, 59, 61, 131, 161, 243], "info": [26, 27, 29, 30, 62, 75, 76, 209, 220, 241], "linear": [26, 27, 29, 30, 60, 61, 79, 86, 114, 123, 148, 150, 157, 203, 218], "intial": 26, "_config": 26, "attenuate_ic": [26, 30, 60, 61], "focusing_limit": [26, 30, 60, 61], "focus": [26, 30, 59, 60, 61], "birefring": [26, 30, 43, 44, 60], "back": [26, 30, 54, 57, 59], "accident": [26, 220], "raytracing_result": [26, 30], "nx": [26, 43, 44, 56, 118], "ny": [26, 43, 44, 56], "nz": [26, 43, 44, 56], "link": [26, 30, 43, 44, 207], "springer": [26, 30, 43, 44, 207], "articl": [26, 30, 43, 44, 51, 207], "1140": [26, 30, 43, 44, 207], "epjc": [26, 30, 43, 44, 207], "s10052": [26, 30, 43, 44, 207], "023": [26, 30, 43, 44], "11238": [26, 30, 43, 44], "n1": [26, 216], "n2": [26, 216], "special": [26, 56, 57, 60, 220, 235], "diagon": 26, "dielectr": [26, 58], "tensor": 26, "ndarrai": [26, 30, 116, 119, 132, 134, 162], "faster": [26, 53, 59, 60, 122, 167], "coordinatesystem": [26, 91, 99, 103, 148, 228], "cstrafo": [26, 91, 99, 103, 148, 228], "transform_from_ground_to_onski": 26, "px": 26, "pz": 26, "samp_rat": 26, "bire_model": [26, 30, 43, 44], "southpole_a": [26, 43, 56], "explain": [26, 30, 51, 52, 53, 57, 58, 61, 238], "paper": [26, 30, 53, 59, 60, 118, 120, 207, 210, 232], "birefringence_model": [26, 30, 43, 44, 56], "model_descript": [26, 30, 43, 44], "radial": [26, 30, 59, 234], "alter": [26, 244, 245], "extract": [26, 60, 75, 76, 79, 112, 124, 164], "eigenvector": 26, "increment": 26, "delai": [26, 51, 77, 79, 81, 83, 85, 86, 108, 116, 117, 125, 129, 161, 164, 194, 205, 216, 218, 222, 228, 235, 239, 242], "path_properti": 26, "granular": 26, "nirefring": 26, "nominal_refractive_index": 26, "nomin": [26, 124, 161], "densiti": [26, 35, 36, 38, 40, 43, 44, 59, 61, 215], "were": [26, 36, 51, 52, 53, 58, 92, 97, 106, 107, 161, 233, 235], "refractive_index_x": 26, "refractive_index_i": 26, "refractive_index_z": 26, "first_refractive_index": 26, "second_refractive_index": 26, "first_polarization_vector": 26, "second_polarization_vector": 26, "first_time_delai": 26, "second_time_delai": 26, "reflection_angl": [26, 27, 29, 30], "infinitesim": [26, 30], "1cm": [26, 30, 232], "gain": [26, 30, 54, 61, 70, 74, 79, 86, 111, 114, 118, 123, 124, 131, 150, 180, 211], "load": [27, 29, 54, 59, 61, 70, 74, 75, 76, 79, 118, 120, 161, 164, 167, 219, 233], "yaml": [27, 29, 30, 33, 36, 51, 52, 56, 57, 60, 61, 62], "th": 27, "vari": 27, "support": [28, 40, 56, 61, 107, 131, 150, 155, 233], "direct_rai": 28, "dummi": [28, 33], "ignor": [28, 53, 54, 59, 60, 62, 85, 131, 134, 141, 161, 211], "prodid": 29, "icemodel": [30, 35, 43, 44], "speedup": [30, 33, 61], "delta_c_cut": [30, 59, 61], "40": [30, 40, 54, 61, 154], "degre": [30, 53, 56, 59, 61, 77, 81, 83, 85, 101, 139, 162, 225, 229], "iter": [30, 60, 97, 107, 116, 122, 148, 157, 167, 186, 206, 238], "max_traj_length": 30, "10000": [30, 119, 164, 214], "iter_steps_channel": 30, "auto_step_s": 30, "iter_steps_zenith": 30, "05": [30, 57, 79, 122, 134, 148, 214], "005": [30, 148], "loop": [30, 53, 54, 57, 61, 97, 139, 167, 175, 206, 220, 222, 225, 241], "prepar": [30, 164], "shower_axi": [30, 33, 148], "sphere": 30, "big": [30, 59, 238], "channel": [30, 33, 36, 51, 52, 53, 54, 59, 60, 61, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 90, 93, 95, 101, 104, 106, 107, 108, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 149, 150, 151, 157, 164, 167, 176, 185, 186, 191, 192, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 214, 222, 225, 227, 228, 233, 234, 235, 239, 241], "step_zenith": 30, "steps_siz": 30, "lenght": 30, "_sphere_s": 30, "auto_step": 30, "step_siz": [30, 108, 222], "won": [30, 62], "trajectori": [30, 53, 56, 59, 60, 218], "maxmim": 30, "abort": 30, "bigger": [30, 134], "search": [30, 75, 76, 119, 148, 185, 186, 191, 192, 220, 239, 245], "xtol": 30, "7453292519943296e": 30, "ztol": 30, "001": [30, 42, 122, 134], "launch_v": 30, "spec": [30, 215], "s_rate": 30, "ice_model": [30, 33, 43, 56, 60, 61], "southpole_2015": [30, 35, 43, 56, 60, 61], "e_field": 30, "componentnt": 30, "moment": [30, 42, 81, 83, 85, 161], "further": [30, 54, 79, 118, 119, 238], "improv": [30, 120, 157, 239], "candid": [30, 33, 106], "ref_index_model": [30, 56, 60], "1dim": 30, "freq": [30, 79, 86, 125, 132, 134, 194, 209, 215, 232], "n_bottom_reflect": 30, "output_writer_hdf5": 31, "outputwriterhdf5": [31, 32], "add_event_group": [31, 32], "write_empty_output_fil": [31, 32], "write_output_fil": [31, 32], "calculate_veff": [31, 32], "merge_config": [31, 33], "calculate_sim_efield": [31, 33], "calculate_sim_efield_for_emitt": [31, 33], "apply_det_response_sim": [31, 33], "apply_det_respons": [31, 33], "build_dummy_ev": [31, 33], "build_nuradioevents_from_hdf5": [31, 33], "calculate_polarization_vector": [31, 33], "increase_sign": [31, 33], "calculate_particle_weight": [31, 33], "group_into_ev": [31, 33], "read_input_hdf5": [31, 33], "remove_all_trac": [31, 33], "get_vrm": [31, 33], "get_sampling_r": [31, 33, 90, 93, 94, 95, 104], "get_bandwidth": [31, 33], "integrated_channel_respons": [31, 33], "time_logg": [31, 33], "pretty_time_delta": [31, 34], "timelogg": [31, 34], "reset_tim": [31, 34], "start_tim": [31, 34, 93, 94, 95, 104, 164], "stop_tim": [31, 34], "show_tim": [31, 34], "output_filenam": [32, 45, 49, 50, 57, 233, 238], "station_id": [32, 33, 51, 52, 54, 61, 75, 76, 77, 81, 82, 83, 85, 86, 92, 96, 97, 103, 105, 106, 107, 114, 123, 131, 137, 169, 170, 172, 179, 185, 186, 191, 192, 222, 225, 233, 238], "number_of_ray_tracing_solut": 32, "particle_mod": [32, 33], "event_buff": 32, "group": [32, 33, 34, 36, 51, 52, 53, 77, 79, 81, 83, 85, 86, 94, 101, 104, 107, 161, 164, 235, 239], "fin_attr": [32, 33], "callabl": [32, 167, 220], "veff": [32, 35, 41, 55, 62], "recurs": [33, 186], "channel_id": [33, 36, 54, 61, 75, 76, 77, 81, 82, 83, 85, 86, 92, 94, 95, 104, 106, 107, 108, 114, 122, 123, 125, 131, 134, 135, 140, 150, 157, 169, 191, 192, 195, 205, 233], "det": [33, 54, 61, 80, 86, 111, 112, 114, 123, 124, 125, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 171, 174, 176, 183, 185, 186, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 208, 233], "min_efield_amplitud": [33, 61], "distance_cut": [33, 61], "identifi": [33, 44, 75, 76, 77, 81, 82, 83, 85, 94, 95, 97, 104, 106, 119, 157, 164, 232], "simefield": 33, "antenna_pattern_provid": [33, 207, 228], "belwo": 33, "sim_stat": [33, 90, 107, 148, 169, 174], "detector_simulation_filter_amp": 33, "evt": [33, 54, 61, 111, 112, 114, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 164, 167, 174, 176, 183, 185, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 208], "event_tim": [33, 97], "detector_simulation_part1": 33, "readout": [33, 93, 94, 95, 104, 108, 205, 242], "analog": [33, 61, 101, 124, 125, 234, 235, 238], "chain": [33, 61, 74, 75, 76, 77, 86, 101], "simchannel": [33, 90, 104, 106, 151, 157, 176], "simstat": [33, 90, 92, 106, 107, 151, 176], "filter": [33, 51, 54, 58, 61, 74, 84, 93, 94, 95, 104, 108, 114, 120, 123, 124, 125, 131, 132, 138, 140, 141, 143, 152, 157, 161, 162, 167, 191, 192, 199, 203, 206, 209, 211, 214, 220, 222, 227, 228, 238, 241, 242], "amplifi": [33, 54, 61, 70, 74, 77, 78, 81, 83, 85, 114, 118, 123, 140, 150, 233, 242], "regist": [33, 97, 127, 233], "flexibl": [33, 53, 238], "add_nois": 33, "vrms_per_channel": 33, "noiseless_channel": 33, "detector_simulation_part2": 33, "nois": [33, 51, 52, 58, 61, 77, 81, 83, 85, 101, 108, 112, 114, 118, 119, 123, 124, 133, 134, 137, 140, 174, 183, 185, 186, 194, 209, 214, 215, 227], "rm": [33, 51, 61, 81, 83, 85, 101, 112, 124, 132, 194, 214, 222], "s21": [33, 75, 76, 235], "bandwidth": [33, 51, 52, 90, 101, 131, 132, 134, 214], "amplif": [33, 60, 61, 101, 124], "idx": [33, 148], "event_group": 33, "perform": [33, 41, 53, 54, 58, 59, 60, 61, 62, 76, 79, 93, 94, 95, 104, 122, 124, 125, 134, 167, 192, 194, 200, 201, 208, 215, 218, 222, 228, 232, 239, 241, 242, 243], "cfg": 33, "concept": [33, 235, 238], "surviv": 33, "propabl": 33, "weight": [33, 36, 40, 47, 51, 52, 53, 61, 77, 86, 90, 101, 148, 162, 169], "calul": 33, "eventgroup": 33, "assign": [33, 61, 221, 243], "split_event_time_diff": 33, "zerosign": [33, 61], "fin_stat": 33, "remov": [33, 36, 44, 58, 59, 66, 77, 86, 92, 106, 107, 120, 122, 125, 127, 134, 167, 186, 220, 235, 242], "inputfilenam": [33, 61, 170, 173], "outputfilenam": [33, 61, 79], "detectorfil": [33, 61], "det_kwarg": 33, "outputfilenamenuradioreco": [33, 61], "evt_tim": 33, "datetim": [33, 75, 76, 77, 81, 83, 85, 92, 106, 107, 161, 180], "default_detector_st": [33, 61], "default_detector_channel": 33, "file_overwrit": 33, "write_detector": 33, "event_list": 33, "log_level_propag": 33, "30": [33, 34, 59, 60, 101, 124], "trigger_channel": [33, 124], "altern": [33, 122, 206, 207, 222, 237], "json": [33, 36, 51, 52, 54, 57, 61, 62, 77, 80, 81, 83, 85, 124, 164, 234], "sim": [33, 61, 62, 97, 101, 140, 151, 169, 238, 242], "overwrit": [33, 43, 44, 77, 167, 241, 243], "nur": [33, 51, 52, 61, 62, 176, 186, 233, 237], "custom": [33, 61, 62, 68, 101, 109, 127, 220, 238, 241], "durat": [34, 95, 222], "xdxhxmx": 34, "dai": 34, "__pretty_time_delta": 34, "3665": 34, "0d1h1m5": 34, "7200": 34, "0d2h0m0": 34, "120": [34, 101, 137, 225], "0d0h2m0": 34, "0d0h0m30": 34, "update_interv": 34, "categori": 34, "timer": 34, "n_event_group": 34, "i_event_group": 34, "progress": 34, "category1": 34, "category2": 34, "record": [34, 58, 77, 93, 94, 95, 104, 161, 164, 183, 185, 220, 238, 241], "rais": [34, 77, 97, 120, 122, 131, 151, 167, 176, 205, 220], "keyerror": 34, "runtimeerror": 34, "remove_duplicate_trigg": [35, 36], "fc_limit": [35, 36], "get_veff_water_equival": [35, 36], "get_veff_output": [35, 36], "get_veff_aeff_singl": [35, 36], "get_veff_aeff_single_wrapp": [35, 36], "get_veff_aeff": [35, 36], "get_veff_aeff_arrai": [35, 36], "get_index": [35, 36], "fit_gl1": [35, 37], "get_temperatur": [35, 37], "get_attenuation_length": [35, 37, 56], "cross_sect": [35, 40], "param": [35, 38, 81], "csm": [35, 38, 40, 61], "get_nu_cross_sect": [35, 38], "get_interaction_length": [35, 38], "dump_hdf5": 35, "dump": [35, 39, 54, 77, 79, 233], "earth_attenu": 35, "get_weight": [35, 40], "get_simple_weight": [35, 40], "get_core_mantle_crust_weight": [35, 40], "prem": [35, 40, 61], "earth_radiu": [35, 40], "radii": [35, 40], "slant_depth": [35, 40], "coremantlecrustmodel": [35, 40], "get_limit_from_aeff": [35, 41], "get_limit_flux": [35, 41], "get_limit_e1_flux": [35, 41], "get_limit_e2_flux": [35, 41], "get_number_of_events_for_flux": [35, 41], "get_exposur": [35, 41], "get_integrated_exposur": [35, 41], "get_fluence_limit": [35, 41], "get_neutrino_inelast": [35, 42], "get_ccnc": [35, 42], "random_tau_branch": [35, 42], "inelasticity_tau_decai": [35, 42], "rejection_sampl": [35, 42], "southpole_simpl": [35, 43, 56, 61], "add_reflective_bottom": [35, 43, 44, 56], "get_average_index_of_refract": [35, 43, 44, 56], "get_gradient_of_index_of_refract": [35, 43, 44, 56], "get_ice_model_radiopropa": [35, 43, 44, 56], "get_index_of_refract": [35, 43, 44, 56, 239], "set_ice_model_radiopropa": [35, 43, 44], "arasim_southpol": [35, 43, 56, 61], "ara_2022": [35, 43], "birefringence_medium": [35, 43], "get_birefringence_index_of_refract": [35, 43, 44], "mooresbay_simpl": [35, 43, 56, 61], "mooresbay_simple_2": [35, 43, 56], "greenland_simpl": [35, 43, 56, 60, 61, 239], "greenland_firn": [35, 43, 56], "greenland_perturb": [35, 43], "uniform_ic": [35, 43], "get_ice_model": [35, 43, 56, 60, 239], "medium_bas": [35, 56], "icemodelsimpl": [35, 43, 44], "icemodelbirefring": [35, 43, 44], "radiopropaicewrapp": [35, 43, 44], "get_modul": [35, 44, 56], "add_modul": [35, 44, 56], "remove_modul": [35, 44, 56], "replace_modul": [35, 44, 56], "get_scalar_field": [35, 44, 56], "scalarfieldbuild": [35, 44], "getvalu": [35, 44], "getgradi": [35, 44], "merge_hdf5": [35, 57], "merge2": [35, 45], "muon_flux": 35, "muonflux": [35, 46], "get_mu_flux": [35, 46], "get_interp_angle_mu_flux": [35, 46], "get_int_angle_mu_flux_buff": [35, 46], "get_e_grid": [35, 46], "plot_vertex_distribut": [35, 47], "runner": [35, 68, 70, 74, 79, 108], "nuradiomcrunn": [35, 48], "get_outputfilenam": [35, 48], "runner_exampl": 35, "task": [35, 48, 49, 241], "split_hdf5": 35, "split_hdf5_input_fil": [35, 50], "gid": 36, "duplic": 36, "overestim": 36, "68": 36, "confid": 36, "belt": 36, "feldman": 36, "cousin": 36, "57": [36, 59, 232], "3873": 36, "low_limit": 36, "upper_limit": 36, "density_medium": 36, "723464435717068e": [36, 38], "39": [36, 38, 40], "density_wat": 36, "241509744511524e": 36, "dentity_medium": 36, "equivalen": 36, "all_ev": 36, "trigger_nam": [36, 47, 51, 52, 54, 61, 92, 97, 106, 107, 112, 194, 199, 200, 201, 202, 203, 204, 205], "trigger_names_dict": 36, "trigger_combin": 36, "veff_aeff": 36, "bounds_theta": 36, "multipli": [36, 59, 86, 120, 215, 228, 243], "4pi": 36, "map": [36, 101, 133, 161, 162, 167, 185, 186, 223], "again": [36, 59, 62, 222], "individu": [36, 51, 52, 59, 70, 71, 86, 133, 148, 151, 169, 214, 233, 235, 241], "OR": [36, 167], "effici": [36, 41, 53, 222], "analysi": [36, 53, 54, 56, 76, 139, 167, 174, 183, 241], "paramater": 36, "snr": [36, 90, 101, 116, 119, 137, 239], "vmax": 36, "vrm": [36, 51, 52, 54, 61, 90, 101, 124, 125, 194, 200, 222], "curv": [36, 118], "shortest": 36, "caus": [36, 59, 108, 167, 194, 222, 242], "specifii": [36, 75, 76], "aeff_surface_muon": 36, "restrict": 36, "wrt": [36, 77, 81, 83, 85], "co": [36, 60, 118, 208], "item": [36, 52, 53, 161], "care": [36, 53, 56, 86, 214], "n_core": [36, 170, 173], "oversampling_theta": 36, "conain": 36, "oversampl": 36, "equal": [36, 53, 59, 60, 61, 108, 131, 134, 161, 194, 215, 228, 242], "multi": [36, 64, 222], "slice": [36, 148, 222], "triggernam": 36, "uncertainti": [36, 53, 56, 150, 157, 238, 239], "get_veff": [36, 55], "n_energi": 36, "n_zenith_bin": 36, "n_triggernam": 36, "uniqu": [36, 51, 52, 53, 54, 75, 76, 77, 81, 83, 85, 95, 97, 104, 108, 112, 161, 199, 200, 201, 202, 203, 204, 232, 234], "edg": [36, 148, 227], "all_trigg": 36, "uenergi": 36, "uzenith_bin": 36, "utrigger_nam": 36, "zenith_weight": 36, "get_veff_arrai": 36, "fig": [36, 37, 47, 54, 55], "plt": [36, 54, 55, 60, 61, 212, 238], "subplot": [36, 54], "tname": 36, "vefferror": 36, "errorbar": 36, "pi": [36, 53, 55], "yerr": 36, "fmt": 36, "o": [36, 57, 61], "legend": [36, 54, 60], "semilogi": [36, 54], "semilogx": 36, "tight_layout": [36, 54], "declin": 36, "band": [36, 46, 58, 120, 122, 131, 148, 161, 167, 174, 222], "lpda_2of4_100hz": 36, "iz": 36, "9": [36, 79, 101, 124, 161, 195, 214, 232], "0f": 36, "export_format": 36, "getveff": 36, "mhz": [37, 54, 56, 58, 60, 61, 86, 122, 131, 132, 143, 152, 161, 164, 206, 222, 227, 232], "3189": 37, "2015jog15j057": 37, "temperatur": [37, 51, 52, 61, 74, 76, 81, 83, 85, 101, 108, 123, 133, 203, 215], "celsiu": 37, "variou": [37, 61, 86, 101, 137], "gl1": [37, 56, 60, 61], "1409": 37, "5413": 37, "gl2": 37, "2021": [37, 232], "bogorodski": 37, "2201": 37, "07846": 37, "macgregor": 37, "mb1": [37, 56, 61], "2015jog14j214": 37, "phd": [37, 210], "thesi": [37, 210], "persichilli": 37, "inttyp": [38, 41], "ctw": [38, 40, 41, 61], "amanda": 38, "cooper": [38, 61], "sarkar": [38, 61], "philipp": 38, "mertsch": [38, 61], "subir": 38, "jhep": [38, 61], "08": [38, 56, 61], "042": [38, 61], "cross_section_typ": [38, 40, 61], "momenta": 38, "ghandi": [38, 40, 61], "thorn": [38, 61], "83": [38, 53, 61], "113009": [38, 61], "d58": [38, 61], "093009": [38, 61], "1998": [38, 61], "enu": 38, "917": [38, 56], "cm": [38, 40, 53, 101, 148], "l_int": 38, "theta_nu": 40, "pnu": 40, "vertex_posit": 40, "phi_nu": 40, "absorpt": 40, "momentum": 40, "core_mantle_crust_simpl": 40, "core_mantle_crust": [40, 61], "fuction": 40, "shelfmc": [40, 42], "arasim": [40, 56, 79, 214], "preliminari": 40, "dziewonski": 40, "anderson": 40, "planetari": 40, "interior": 40, "297": 40, "356": 40, "1981": 40, "1016": [40, 42], "0031": 40, "9201": 40, "81": [40, 53, 133], "90046": 40, "boundari": [40, 43, 44, 56, 81, 83, 85, 101, 131, 211, 228], "divid": [40, 54, 58, 59, 86, 114, 123, 161, 167, 215, 243], "scalar": [40, 44, 56, 206], "denot": [40, 53, 56], "6371000": 40, "1221500": 40, "3480000": 40, "5701000": 40, "5771000": 40, "5971000": 40, "6151000": 40, "6346600": 40, "6356000": 40, "6368000": 40, "lambda": [40, 167], "810037825908342e": 40, "6227925335729963e": 40, "366339939401755e": 40, "array_lik": [40, 120], "endpoint": 40, "500": [40, 54, 119, 206], "column": 40, "chord": [40, 53], "materi": 40, "thick": 40, "mass": [40, 59], "third": [40, 57, 234], "mantl": [40, 61], "crust": [40, 61], "6378140": 40, "3464101": 40, "6151377545": 40, "6338140": 40, "738113642316134e": 40, "122113313133918e": 40, "aeff": 41, "livetim": [41, 55], "signaleff": 41, "energybinsperdecad": 41, "upperlimonev": 41, "decad": 41, "neyman": 41, "ul": 41, "background": [41, 53, 133], "veff_sr": 41, "nucrsscn": 41, "expect": [41, 53, 62, 64, 101, 124, 140, 157, 191, 228, 239], "assumpt": [41, 53], "log10": [41, 61, 133, 212], "equidist": 41, "loge": 41, "field_of_view": 41, "exposur": 41, "exp_func": 41, "e_low": 41, "e_high": 41, "de": [41, 75, 76, 131, 213], "int_exp": 41, "fluenc": [41, 101, 157, 206], "scatter": 42, "port": 42, "inelastici": 42, "cpc": 42, "2013": 42, "04": 42, "tau_energi": 42, "1607": 42, "00193": 42, "tau_mu": [42, 53], "tau_": 42, "tau_had": [42, 53, 101], "reject": [42, 59, 167], "initiaion": [43, 44], "condit": [43, 44, 51, 52, 54, 56, 59, 81, 83, 85, 108, 112, 148, 176, 194, 199, 200, 201, 202, 204, 238], "latter": [43, 44, 75, 76, 134, 215, 235], "add_reflective_lay": [43, 44], "z_shift": [43, 44, 56], "almost": [43, 44, 59], "never": [43, 44, 233], "reli": [43, 44, 164], "exp": [43, 44, 56, 60], "z_air_boundari": [43, 44], "nuradio": [43, 44, 60, 65, 79, 132, 212, 213, 220, 244], "glacier": [43, 44], "z_bottom": [43, 44, 56], "dimensionless": [43, 44, 214], "bulk": [43, 44], "snow": [43, 44, 77, 81, 83, 85, 92, 106, 107, 234], "od": [43, 44], "refl_z": [43, 44, 56], "refl_coef": [43, 44, 56], "refl_phase_shift": [43, 44, 56], "angukar": [43, 44], "shoft": [43, 44], "position1": [43, 44, 56], "position2": [43, 44, 56], "mother": [43, 44], "n_averag": [43, 44], "gradient": [43, 44, 59], "n_nabla": [43, 44], "hold": [43, 44, 56, 215, 238, 242], "scalarfield": [43, 44], "moduld": [43, 44], "_compute_default_ice_model_radiopropa": [43, 44], "seper": [43, 44], "posibl": [43, 44], "adjust": [43, 44, 56, 57, 114, 123, 124, 205, 238, 241, 242], "lose": [43, 44], "ice_model_radiopropa": [43, 44], "ice_model_radioprop": [43, 44], "bir_model": [43, 44], "evalu": [43, 44, 46, 118, 120, 133, 203, 206, 212, 218], "z_firn": 43, "_firn": 43, "inheret": 44, "reimplement": 44, "everytim": 44, "inherit": [44, 56, 61, 238, 241], "indiec": 44, "differnt": 44, "ice_model_nuradio": [44, 56], "scalar_field": [44, 56], "smooth": [44, 59], "handel": 44, "discontinu": [44, 56, 60], "daugther": 44, "new_modul": [44, 56], "stead": 44, "much": [44, 59, 95, 239], "slower": [44, 59], "vector3d": 44, "altitud": [46, 61, 82, 101, 148], "3200": 46, "interaction_model": 46, "sibyll23c": 46, "primary_model": 46, "crflux": 46, "globalsplinefitbeta": 46, "total_mu": 46, "cr": [46, 101, 116, 119, 139], "theta_min": 46, "rad": [46, 53, 86, 216], "theta_max": 46, "n_step": 46, "e_grid": 46, "grid": [46, 54, 57, 148, 173, 191, 239], "steradian": [46, 229], "get_int_angle_mu_flux": 46, "riemannian": 46, "cach": [46, 131, 132], "meter": [46, 56, 101, 148, 229], "8726646259971648": [46, 212], "theta_deg": 46, "xx": [47, 51, 52, 53, 54, 60], "beauti": 47, "n_worker": 48, "output_path": [48, 191], "max_runtim": 48, "691200": 48, "n_triggers_max": 48, "max_crash": 48, "node": [48, 57], "submiss": 48, "soon": [48, 235], "job": [48, 53, 161], "finish": [48, 157], "kept": [48, 119, 135, 141, 222], "busi": 48, "acquir": 48, "crash": [48, 57, 167], "q": [49, 57, 95, 228], "isim": 49, "nu_energi": [49, 90, 101], "nu_energy_max": 49, "detectordescript": [49, 61], "input_filenam": 50, "number_of_events_per_fil": 50, "subfil": 50, "outlin": [51, 52, 53, 61], "v3": 51, "v2": [51, 127], "hdf5_file": [51, 52], "attr": [51, 52, 54], "ran": [51, 52, 232], "parallel": [51, 52, 53, 57, 59, 81, 83, 85, 142, 216, 234], "simultan": [51, 52, 54, 165], "interfer": [51, 52], "event_group_id": [51, 52], "shower_id": [51, 52, 90, 91, 95, 97, 101, 103, 104, 106], "event_id": [51, 52, 53, 85, 97, 164, 165, 167, 180], "thought": [51, 52, 59], "top": [51, 52, 56, 238], "station_": [51, 52], "slightli": [51, 52, 53, 59, 122, 229], "nuradiomc_evtgen_vers": [51, 52, 53, 90, 101], "nuradiomc_evtgen_version_hash": [51, 52, 53, 90, 101], "nuradiomc_vers": [51, 52, 90, 101], "nuradiomc_version_hash": [51, 52, 90, 101], "hash": [51, 79, 101, 230], "those": [51, 52, 59, 62, 75, 76, 85, 92, 97, 106, 107, 125, 148, 185, 220, 233, 235, 238], "did": [51, 52, 101, 220, 235], "fiducial_xmax": [51, 90, 101], "fiducial_xmin": [51, 90, 101], "fiducial_ymax": [51, 90, 101], "fiducial_ymin": [51, 90, 101], "fiducial_zmax": [51, 52, 53, 57, 90, 101], "fiducial_zmin": [51, 52, 53, 57, 90, 101], "fiducial_rmin": [51, 52, 53, 57, 90, 101], "qubic": 51, "cylindr": [51, 62, 101, 191, 192, 239], "tnois": [51, 52, 90, 101], "explicit": [51, 52], "n_sampl": [51, 52, 59, 90, 93, 94, 95, 101, 104, 134, 148, 157, 214, 222, 239], "style": [51, 52], "resolut": [51, 52, 133, 150, 221, 242], "thermal": [51, 180, 222], "floor": [51, 125], "v_": 51, "k_": 51, "wiki": [51, 218], "filt": [51, 81, 83, 85, 222], "trapz": 51, "ff": [51, 70, 79], "antenna_posit": [51, 56], "n_shower": [51, 52], "n_trigger": [51, 52], "row": 51, "belong": [51, 61, 75, 76, 94, 104, 242], "len": [51, 59, 95, 148, 228], "vertex_tim": [51, 52, 53, 90, 101], "cascad": [51, 53, 59], "multiple_trigg": [51, 52], "fire": [51, 60, 92, 106, 107], "trigger_tim": [51, 108, 167, 194, 222, 242], "earliest": [51, 92, 106, 107, 194, 205, 242], "n_interact": [51, 52, 53, 90, 101], "hierarch": [51, 101, 102, 238], "counter": [51, 101, 216], "shower_realization_arz": [51, 52], "1231": 51, "m_event": 51, "m_shower": 51, "captur": 51, "ambigu": [51, 171, 238], "analys": [51, 120], "retriev": [51, 52, 53, 56, 120, 164, 241], "event_group_id_per_show": [51, 52], "event_id_per_show": [51, 52], "focusing_factor": [51, 52], "n_channel": [51, 52, 222], "n_ray_tracing_solut": [51, 52], "max_amp_shower_and_rai": [51, 52], "maximum_amplitud": [51, 52, 90, 101], "maximum_amplitudes_envelop": [51, 52, 54], "hilbert": [51, 52, 101, 142, 199], "envelop": [51, 52, 101, 142, 199, 227], "fulfil": [51, 52, 54, 59, 108, 186, 194, 200, 222], "translat": [51, 52, 56, 59, 60, 206], "multiple_triggers_per_ev": [51, 52], "rotat": [51, 56, 59, 60, 77, 79, 81, 82, 83, 85, 162, 232, 234, 239, 242], "ray_tracing_c0": [51, 52], "ray_tracing_c1": [51, 52], "ray_tracing_reflect": [51, 52], "ray_tracing_reflection_cas": [51, 52], "ray_tracing_solution_typ": [51, 52], "time_shower_and_rai": [51, 52], "daq": 51, "cabl": [51, 70, 76, 77, 81, 83, 85, 114, 118, 123, 129, 161, 233, 235, 242], "travel_dist": [51, 52], "travel_tim": [51, 52, 60], "satisfi": [51, 52, 199, 200, 201, 202, 204, 238], "triggered_per_ev": [51, 52], "trigger_times_per_ev": 51, "outdat": [52, 79], "click": 52, "juli": [53, 61], "realist": 53, "geometri": [53, 56, 59, 60, 81, 83, 85, 91, 99, 101, 103, 148, 183, 232, 242], "constitut": [53, 61], "input_fil": [53, 170, 171, 172, 173, 179, 180], "1e5": 53, "1e18": [53, 57, 62], "2e18": 53, "few": [53, 59, 62, 133, 161, 233, 234, 242], "mixtur": 53, "flavour": [53, 101, 238], "region": [53, 59, 101, 122, 148, 239, 242], "isotrop": [53, 212], "compar": [53, 59, 112, 114, 120, 123, 125], "add_tau_second_bang": 53, "tabulated_tau": 53, "four": [53, 54, 61, 131, 241], "remain": [53, 60, 61, 165], "lot": [53, 54, 59, 61, 62, 85], "ten": [53, 58], "kilometr": 53, "proportion": 53, "ratio": [53, 54, 101, 119, 125, 132, 157, 216, 227], "cosin": 53, "keep": [53, 57, 59, 60, 77, 127, 148, 161, 215, 222, 233, 234, 235, 243], "mind": [53, 59, 60, 148, 215, 235], "project": [53, 59, 212], "confirm": 53, "unforc": 53, "antineutrino": 53, "possess": [53, 59, 125], "stochast": [53, 59], "techniqu": 53, "easili": [53, 238, 241], "advis": [53, 239], "poissonian": 53, "let": [53, 59, 60, 61, 174], "sai": [53, 59], "goe": [53, 61, 119, 141, 242], "n_": [53, 56, 60], "unknown": [53, 161, 235], "priori": 53, "good": [53, 57, 59, 116, 119, 161, 242, 243], "thumb": 53, "reduc": [53, 54, 59, 203, 227, 239], "get_gzk_1": 53, "wish": [53, 59, 241], "law": [53, 216], "realli": [53, 59, 61, 161], "convolv": [53, 54, 114, 123, 131, 146, 150, 211, 214], "whatev": 53, "fanci": [53, 59], "bang": 53, "nativ": 53, "csda": 53, "photonuclear": 53, "tabul": [53, 148, 218], "although": [53, 59, 227, 235], "actual": [53, 59, 81, 83, 85, 131, 135, 161, 167, 191, 192, 232, 241], "jakob": 53, "santen": 53, "gen2": 53, "undergo": 53, "previous": [53, 83, 127], "tudo": 53, "astroparticlephys": 53, "blob": 53, "md": 53, "feed": [53, 234], "wai": [53, 59, 85, 161, 233, 238, 239, 241, 242], "collect": [53, 75, 76, 183, 235], "content": [53, 58, 77, 101, 139, 194, 225], "radian": [53, 222, 229], "identif": [53, 75, 76, 167], "facilit": [53, 56, 164], "80": [53, 54, 58, 59, 143], "electronvolt": [53, 59], "tau_em": [53, 101], "muonic": 53, "recalcul": 53, "encourag": 53, "expand": 53, "complementari": [53, 238], "photon": 53, "11": [53, 54, 61, 101, 133, 222, 232], "positron": [53, 101, 229], "nu_e": 53, "bar": [53, 212], "_e": 53, "13": [53, 101, 108, 203, 232], "antimuon": 53, "nu_": 53, "antitau": 53, "bremsstrahlung": 53, "gamma_": 53, "brem": 53, "ionis": 53, "blundl": 53, "nuclear": 53, "85": 53, "bundl": 53, "86": 53, "87": 53, "88": [53, 56], "weak": 53, "compton": 53, "pion": [53, 59], "211": 53, "kaon": 53, "k": [53, 59, 123], "311": 53, "321": 53, "2212": 53, "antiproton": 53, "awar": 53, "fewer": [53, 61], "disk": [53, 238], "height": [53, 59, 218], "undergon": 53, "curvatur": 53, "detect": [53, 120, 151, 238], "explor": [53, 65, 244], "statist": [53, 150, 186], "pitfal": 53, "overlap": [53, 128, 194, 242], "unlik": [53, 59], "sometim": [53, 161, 233], "instanc": [53, 59, 60, 61, 81, 97, 114, 123, 131, 221, 243], "proposal_funct": 53, "n_tau": 53, "energy_lepton": 53, "tau_cod": 53, "pev": [53, 61], "member": [53, 167], "li": [53, 59], "upon": 53, "dure": [53, 116, 164, 242], "interest": [53, 59, 161, 220, 235, 241], "similar": [53, 54, 59, 61, 62, 112, 233, 238, 239, 242], "discoveri": 54, "simplifi": [54, 57], "orient": [54, 61, 62, 77, 79, 81, 82, 83, 85, 101, 148, 232, 234], "lpda": [54, 61, 62, 77, 79, 81, 83, 85, 232, 234, 242], "dipol": [54, 61, 77, 79, 81, 83, 85, 118, 161, 164, 232, 234], "orthogon": [54, 207, 234], "2m": [54, 62, 232, 239], "5m": [54, 62, 232], "cover": [54, 61, 133, 167, 169, 194], "50m": 54, "adc_n_sampl": [54, 61, 233], "512": [54, 162, 222], "adc_sampling_frequ": [54, 61, 125, 233, 234], "ant_orientation_phi": [54, 61, 233], "ant_orientation_theta": [54, 61, 233], "ant_position_x": [54, 61, 233], "ant_position_i": [54, 61, 233], "ant_position_z": [54, 61, 233], "ant_rotation_phi": [54, 61, 233], "ant_rotation_theta": [54, 61, 233], "ant_typ": [54, 61, 76, 77, 233], "createlpda_100mhz": [54, 61], "commission_tim": [54, 61, 76], "tinyd": [54, 61], "01t00": [54, 61], "00": [54, 61, 233], "decommission_tim": [54, 61, 76], "2038": [54, 61], "270": 54, "bicone_v8": [54, 61], "04t00": [54, 61], "pos_altitud": [54, 61, 233], "2800": 54, "pos_sit": [54, 61, 233], "nearest": 54, "neighbor": [54, 194], "next": [54, 59, 86, 107, 127, 161, 241], "strongli": [54, 161], "linearli": [54, 79], "domin": [54, 101, 140], "justifi": [54, 59], "eight": 54, "central": [54, 79, 232], "illustr": [54, 56, 59], "copi": [54, 61, 62, 161, 233], "single_posit": 54, "detector_singl": 54, "detector_ful": 54, "insert": [54, 76, 109, 156, 158, 161, 224, 228], "250": [54, 108, 203], "750": 54, "1250": 54, "1500": 54, "horizontal_spacing_detector": 54, "fout": [54, 57], "surround": 54, "bandpass": [54, 95, 131, 134, 140, 143, 152, 192, 203, 206, 210, 211], "mimic": [54, 59, 222], "1xvrm": 54, "rough": [54, 192], "preselect": 54, "criterion": 54, "detector_simul": 54, "efieldtovoltageconverterperchannel": 54, "downsampl": [54, 61, 125], "channelresampl": [54, 61, 109, 125, 183], "sampling_r": [54, 59, 61, 76, 77, 93, 94, 95, 104, 122, 134, 136, 153, 210, 214, 215, 222, 239], "highpass": [54, 81, 83, 85], "channelbandpassfilt": [54, 61, 109], "passband": [54, 61, 93, 94, 95, 101, 104, 108, 131, 133, 134, 140, 143, 152, 157, 191, 192, 199, 211, 228], "filter_typ": [54, 61, 93, 94, 95, 104, 131, 152, 157, 211], "butter10": 54, "triggersimul": [54, 61, 109, 110, 193, 197, 199, 200, 201, 202, 203, 204], "triggered_channel": [54, 61, 108, 112, 194, 199, 200, 201, 202, 203, 204, 222, 227], "number_concid": [54, 61, 112, 200, 201, 202, 204], "pre_trigger_1sigma": 54, "signific": [54, 79, 119], "trick": 54, "pre": [54, 108, 137, 167, 222, 242], "spend": 54, "quick": [54, 175], "3xvrm": 54, "alon": 54, "iF": [54, 57], "sort": [54, 57, 81, 83, 85, 92, 106, 107, 120], "glob": [54, 57, 164, 186], "json_filenam": [54, 80, 81, 83, 85, 233], "max_amps_env": 54, "coincidence_fract": 54, "triggered_near": 54, "empi": 54, "get_number_of_channel": [54, 66, 73, 77, 81, 82, 83, 85, 90, 107], "get_relative_posit": [54, 66, 73, 77, 81, 82, 83, 85], "mask": 54, "php": 54, "get_marker2": 54, "2g": 54, "set_xlabel": 54, "set_ylabel": 54, "set_titl": 54, "savefig": 54, "png": 54, "raw": [55, 81, 83, 85, 161, 167, 180, 242], "effective_volume_calcul": 55, "peopl": [55, 59], "get_e2_limit_figur": 55, "diffus": 55, "show_grand_10k": 55, "show_grand_200k": 55, "show_heinz": 55, "show_ta": 55, "show_ara": 55, "show_arianna": 55, "add_limit": 55, "n_station": 55, "200": [55, 56, 59, 101, 150, 161, 164, 200, 201, 202, 204, 227, 232, 233], "my": [55, 57, 60, 62], "year": [55, 212], "linestyl": 55, "color": 55, "blue": 55, "linewidth": 55, "daughter": [56, 97], "planar": [56, 60], "z_airboundari": 56, "reflection_coeffici": 56, "reflection_phase_shift": 56, "index_of_refraction_at_posit": 56, "average_index_of_refraction_between_position1_and_position2": 56, "gradient_index_of_refraction_at_posit": 56, "besid": [56, 59], "mathemat": [56, 60], "math": 56, "deaconu": 56, "hawlei": 56, "allei": 56, "rho": 56, "602": 56, "rho_0": 56, "super": 56, "3000": 56, "51": [56, 122, 133], "handl": [56, 60, 79, 161, 209, 220, 238, 241, 242], "proper": [56, 59, 148, 214], "__ice_model_nuradio": 56, "__scalar_field": 56, "predin": 56, "inher": 56, "confin": 56, "__modul": 56, "stand": 56, "pop": 56, "h": [56, 148, 208, 243], "icemodel_simp": 56, "rp": [56, 93, 94, 95, 104, 131, 211], "z_surfac": 56, "rice2014": 56, "sp": 56, "425": 56, "71": [56, 62, 133], "spice2015": 56, "423": 56, "77": 56, "43": 56, "46": 56, "34": 56, "mb2": 56, "481": 56, "coeffici": [56, 101, 118, 216], "mimick": 56, "ross": 56, "antarctica": 56, "snippet": [56, 239], "independ": [56, 215, 238, 243], "ref_index_medium": 56, "z_coordin": 56, "index_at_antenna": 56, "attenuation_length": 56, "anisotrop": 56, "heyer": 56, "glaser": [56, 210], "2023": 56, "demonstr": 56, "birefringence_exampl": 56, "deal": 56, "read_m": 56, "txt": [56, 61, 79], "angle_to_iceflow": 56, "anisotropi": 56, "jordan": 56, "spline": 56, "freedom": [56, 101], "capit": 56, "letter": 56, "icemodel_interpolation_southpol": 56, "icemodel_interpolation_greenland": 56, "shallow": [56, 59], "southpole_b": 56, "converg": [56, 59], "southpole_c": 56, "southpole_d": 56, "southpole_": 56, "greenland_a": 56, "greenland_b": 56, "greenland_c": 56, "diverg": 56, "act": [56, 61, 158], "term": [56, 59, 148], "131": 56, "roughli": [56, 134, 135, 234], "everyth": [56, 62, 86], "birefringence_propag": 56, "hpc": 57, "uc": 57, "irvin": 57, "000": [57, 62], "coupl": [57, 59, 61], "10m": [57, 232], "million": [57, 61], "10k": 57, "pub": 57, "1e18_n1e6": 57, "1e4": [57, 164], "part0001": 57, "part0100": 57, "schedul": 57, "bash": 57, "steer": 57, "base_dir": 57, "station_design": 57, "detector_sim": 57, "t02runsimul": [57, 62], "detector_filenam": [57, 222], "surface_station_1ghz": [57, 62], "det_dir": 57, "join": [57, 61], "config_5": 57, "working_dir": 57, "suface_station_1ghz": 57, "input_dir": 57, "jcglaser": 57, "yet": [57, 59, 61, 76, 77, 81, 148, 162], "makedir": 57, "current_fold": 57, "dirnam": 57, "detector_fil": [57, 77], "t1": 57, "basenam": 57, "cmd": 57, "engin": 57, "header": [57, 165, 175, 238], "c_": 57, "grb": 57, "grb64": 57, "ckpt": 57, "restart": [57, 237], "pythonpath": 57, "l": [57, 59, 74, 101, 206, 207], "qsub": 57, "often": [57, 161, 238, 242], "consider": 57, "parti": 57, "emitter_model": 58, "anecho": 58, "chamber": [58, 74], "15deg": 58, "30deg": 58, "45deg": 58, "60deg": 58, "75deg": 58, "wavelength": [58, 59], "reson": 58, "300": [58, 60, 61, 71, 143], "unwant": 58, "anker": 58, "pillar": 59, "signalgen": [59, 61, 63, 101, 239], "semianalyt": 59, "motiv": [59, 167], "spectra": [59, 117], "resembl": 59, "predict": [59, 218], "refin": [59, 148], "fine": [59, 125, 148, 239], "fluctuat": [59, 222], "fulli": [59, 233], "reproduc": [59, 183], "kind": [59, 75, 76, 218], "semin": 59, "histor": 59, "incredibli": 59, "quit": [59, 237], "emul": 59, "vividli": 59, "2048": [59, 132], "characteris": [59, 119], "polaris": [59, 148, 164], "perpendicular": [59, 61, 77, 79, 81, 83, 85, 148, 216, 228, 234], "volt": [59, 61, 118, 124, 125, 203, 215, 229, 234, 243], "gigahertz": 59, "adimension": 59, "posess": 59, "longitudin": [59, 101, 148], "formula": 59, "percent": 59, "ghz": [59, 60, 61, 86, 122, 125, 215, 234, 239, 243], "offer": [59, 233, 238, 243], "advantag": [59, 61, 62, 233, 238, 239, 243], "stretch": 59, "maxima": [59, 140, 148], "fair": 59, "shower_profil": 59, "shower_library_vx": 59, "pkl": 59, "nue": 59, "txxxx": 59, "a01preprocess_shower_librari": 59, "pickl": [59, 79, 219, 232, 238], "disadvantag": [59, 239], "integrand": 59, "subdivis": 59, "oppos": 59, "less": [59, 61, 161], "suffic": [59, 61], "rather": [59, 77, 206, 220, 233], "anywai": 59, "piec": 59, "carz": 59, "frame": [59, 91, 99, 103, 220], "e_r": 59, "brief": [59, 61], "obscur": 59, "fed": 59, "absolut": [59, 61, 77, 81, 83, 85, 92, 106, 107, 108, 118, 131, 152, 194, 199, 203, 204, 211, 242], "becom": [59, 60, 220, 242], "kilogram": 59, "hard": [59, 120, 167], "kr": 59, "wavenumb": 59, "fresnel": [59, 101], "express": [59, 60, 125, 131], "2r": 59, "sin": [59, 118], "seriou": 59, "instabl": 59, "artifici": 59, "eq": [59, 60, 207], "word": [59, 79, 97, 218], "ask": [59, 81, 85, 161], "inclin": 59, "bent": 59, "light": 59, "bend": 59, "That": [59, 61, 86, 214, 235], "vicin": 59, "But": [59, 233], "zhair": 59, "corea": [59, 109, 139, 159, 225, 233, 238, 242], "cone": [59, 225, 234], "argu": 59, "affect": [59, 75, 76, 164, 192], "55": [59, 108, 131, 152], "70": [59, 60, 139, 225], "54": 59, "hinder": 59, "48": [59, 161], "concentr": 59, "caustic": 59, "entir": [59, 77, 133, 161, 235], "nice": 59, "settl": 59, "debat": 59, "maxwel": 59, "prove": 59, "harder": [59, 233], "nabla": 59, "cdot": [59, 60], "boldsymbol": 59, "rho_f": 59, "epsilon": [59, 218], "permitt": 59, "partial_t": 59, "lorenz": 59, "gaug": 59, "neglect": 59, "implicitli": [59, 242], "claim": 59, "doesn": [59, 161], "disappear": 59, "hoc": 59, "lost": 59, "sound": 59, "finit": [59, 228], "fdtd": 59, "crucial": 59, "interplai": 59, "subsequ": [59, 120], "middl": [59, 120, 224], "nanosecond": [59, 61, 164, 229, 242], "subnanosecond": 59, "substract": [59, 227], "get_tim": [59, 90, 93, 94, 95, 104, 238, 242], "crude": [59, 174], "bumpi": 59, "nevertheless": 59, "decent": 59, "rigor": 59, "aris": 59, "paremeteris": 59, "futur": [59, 60, 61, 70, 74, 132, 155, 162, 167], "my_se": 59, "42": [59, 233, 238], "sake": 59, "notion": 59, "tell": 59, "mistak": 59, "wast": 59, "sft": 59, "jwft": 59, "wrong": [59, 161, 162], "aggrav": 59, "rfft": 59, "real": [59, 79, 85, 86, 125, 132, 205, 215, 233, 239, 243], "whole": [59, 85, 228], "time2freq": [59, 209, 215], "freq2tim": [59, 209, 215], "sampling_tim": 59, "rfftfreq": 59, "trace_back_in_tim": 59, "focuss": 60, "itself": [60, 107, 158, 220, 233, 238, 242], "attenuation_ic": 60, "n_freq": [60, 61], "rapid": 60, "ll": 60, "frac": [60, 118], "variat": [60, 157], "stationari": 60, "Not": [60, 61, 77, 92, 106, 107, 148, 162], "said": 60, "pm": 60, "ln": 60, "2n_": 60, "attempt": [60, 120, 219], "gsldir": 60, "gnu": 60, "scientif": 60, "gnu_scientific_librari": 60, "cppanalyticraytrac": 60, "setup": [60, 61, 94, 104, 140, 175, 241], "build_ext": 60, "inplac": 60, "standalon": [60, 122], "makefil": 60, "readm": 60, "modular": 60, "eikon": 60, "rung": 60, "kutta": 60, "scan": [60, 177, 192, 239], "manner": 60, "shown": [60, 133, 148, 206, 235], "prop": 60, "initial_point": 60, "final_point": 60, "afterward": [60, 233, 241], "solution_int": 60, "rays_2d": 60, "initial_point_2d": 60, "final_point_2d": 60, "Or": 60, "path_length": 60, "And": 60, "xlabel": 60, "ylabel": 60, "sampling_rate_detector": 60, "nyquist_frequ": 60, "50": [60, 61, 79, 86, 122, 135, 139, 141, 225, 232], "ylim": 60, "simple_radiopropa_trac": 60, "arctan": 60, "heart": 61, "layout": [61, 148], "aspect": [61, 241], "visit": 61, "begin": [61, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 224, 228, 233, 238, 241, 242], "discuss": 61, "mysimul": 61, "_detector_simul": 61, "who": [61, 164], "child": [61, 140, 157, 192, 238], "outpufilenam": 61, "initialis": [61, 93, 94, 95, 104, 241], "convers": [61, 79, 118, 125, 194, 222, 229], "06_webinar": 61, "w02runsimul": 61, "config_default": [61, 62], "overriden": 61, "therein": 61, "weight_mod": 61, "_mantl": 61, "_crust": 61, "_simpl": 61, "parameteris": 61, "At": 61, "1235": 61, "minimum_weight_cut": 61, "skip": [61, 167, 180, 241], "698": 61, "redo_raytrac": 61, "redo": [61, 239], "bia": [61, 108, 203], "amp_per_ray_solut": 61, "max_dist": [61, 170, 191], "intercept": 61, "histogram": [61, 186, 238], "10x10": 61, "distance_cut_intercept": 61, "distance_cut_slop": 61, "9542": 61, "auto": [61, 167], "null": [61, 233], "noise_temperatur": 61, "kelvin": [61, 74, 123, 203, 229], "save_al": 61, "digit": [61, 124, 125, 161, 194, 200, 222, 234], "resampl": [61, 90, 93, 94, 95, 104, 125, 136, 153, 186], "associ": [61, 86, 97, 101, 120, 164, 220, 233, 238, 242], "mark": [61, 149], "boresight": [61, 77, 79, 81, 82, 83, 85, 234], "tine": [61, 77, 79, 81, 82, 83, 85, 232, 234], "xz": 61, "135": 61, "pos_east": [61, 233], "pos_north": [61, 233], "102": [61, 101], "ident": [61, 114, 123, 124, 207, 233], "_default": 61, "adc_id": 61, "256": [61, 135, 167], "adc_nbit": [61, 125, 234], "adc_time_delai": [61, 125], "amp_reference_measur": 61, "amp_typ": [61, 70, 74, 114, 123, 233], "vpol_prototype_50cm_n1": 61, "74": [61, 79], "cab_id": 61, "17": [61, 101, 134], "cab_length": 61, "cab_reference_measur": 61, "cab_time_delai": [61, 233], "cab_typ": 61, "lmr_400": 61, "92": 61, "bicone_v8_inf_n1": 61, "97": 61, "mac_address": 61, "0002f7f2e7b9": 61, "mbed_typ": 61, "v1": 61, "board_numb": 61, "203": [61, 101], "pos_measurement_tim": 61, "pos_posit": 61, "station_typ": [61, 82, 233], "teach": 61, "princip": 61, "constitu": 61, "guidelin": 61, "argpars": 61, "simplethreshold": [61, 109, 197], "highlowthreshold": [61, 109, 197], "channelgenericnoiseadd": [61, 109], "__name__": [61, 220], "__main__": 61, "results_fold": 61, "mkdir": [61, 62], "great": 61, "christoph": 61, "massiv": 61, "heavi": 61, "Be": 61, "comments_detector": 61, "understand": [61, 167, 235], "parser": 61, "argumentpars": 61, "add_argu": 61, "input_3": 61, "2e": 61, "19_1": 61, "0e": 61, "20": [61, 75, 76, 101, 124, 134, 141, 148, 157, 227, 232, 233], "numc_output": 61, "narg": 61, "parse_arg": 61, "incomplet": [61, 85, 233], "design": [61, 85, 134, 185, 186], "lack": [61, 235], "_detector_simulation_filter_amp": 61, "_detector_simulation_trigg": 61, "characterist": [61, 233], "700": [61, 232], "butter": [61, 93, 94, 95, 104, 131, 152, 157, 211], "150": 61, "800": [61, 148], "coincid": [61, 64, 108, 112, 199, 200, 201, 202, 203, 204, 222, 242], "subset": 61, "threshold_high": [61, 108, 200, 201], "_vrm": 61, "threshold_low": [61, 108, 200, 201], "coinc_window": [61, 112, 199, 200, 201, 202, 203, 204], "hilo_2of4_5_sigma": 61, "simple_10_sigma": 61, "default_detector": 61, "01_veff_simul": 62, "home": [62, 68, 70, 74, 79, 108], "cp": 62, "t01generate_event_list": 62, "1e19": 62, "1e19_n1e3": 62, "1e19_n1e3_output": 62, "_c_": 62, "18": [62, 101, 212], "018": 62, "22": [62, 101, 139, 225], "sr": [62, 212], "26m": 62, "binari": 62, "1e18_n1e4": 62, "1e18_n1e4_output": 62, "laptop": 62, "29": [62, 101], "later": [62, 93, 119, 120, 148, 192, 233, 239, 241], "though": [62, 75, 76, 161, 241], "worri": [62, 243], "adc": [62, 108, 118, 124, 125, 167, 180, 194, 200, 222], "bicon": [62, 232], "detector_nam": 62, "easier": [62, 114, 123, 233, 243], "t05visualize_sim_output": 62, "submodul": [63, 144, 231], "api": [65, 75, 76, 244], "analog_compon": [66, 67, 69, 73, 114, 123, 124], "load_system_respons": [66, 67, 68], "get_system_respons": [66, 67, 68], "load_amplifier_respons": [66, 69, 70], "load_amp_measur": [66, 69, 70], "get_amplifier_respons": [66, 69, 70, 73, 77, 81, 83, 85, 114, 123], "get_cable_response_parametr": [66, 69, 70], "get_cable_respons": [66, 69, 70], "get_available_amplifi": [66, 69, 70, 73, 74], "preprocessamprespons": [66, 69], "save_preprocessed_amp": [66, 69, 71], "preprocess_300amp": [66, 69, 71], "lofar": [66, 79, 109, 159], "rno_g": [66, 80, 101, 109, 159, 181, 203], "load_amp_respons": [66, 73, 74, 124], "db_mongo_read": [66, 73], "dictionarize_nested_list": [66, 73, 75], "dictionarize_nested_lists_as_tupl": [66, 73, 75], "db_mongo_writ": [66, 73], "rnog_detector": [66, 73, 80, 233], "amp": [66, 70, 71, 74, 81, 83, 85, 114, 123, 134, 137, 150, 242], "get_amp_respons": [66, 78], "antennapattern": [66, 232], "interpolate_linear": [66, 79], "interpolate_linear_vector": [66, 79], "get_group_delai": [66, 79], "parse_rnog_xfdtd_fil": [66, 79], "preprocess_rnog_xfdtd": [66, 79], "parse_wipld_fil": [66, 79], "preprocess_wipld_old": [66, 79], "save_preprocessed_wipld_old": [66, 79], "preprocess_wipld": [66, 79], "save_preprocessed_wipld": [66, 79], "save_preprocessed_wipld_forara": [66, 79], "get_pickle_antenna_respons": [66, 79], "parse_aera_xml_fil": [66, 79], "preprocess_aera": [66, 79], "parse_ara_fil": [66, 79], "preprocess_ara": [66, 79], "parse_hfss_fil": [66, 79], "preprocess_hfss": [66, 79], "preprocess_xfdtd": [66, 79], "parse_lofar_txt_fil": [66, 79], "preprocess_lofar_txt": [66, 79], "antennapatternbas": [66, 79], "get_antenna_response_vector": [66, 79], "antennapatternanalyt": [66, 79], "parametric_phas": [66, 79], "antennapatternprovid": [66, 79, 228], "load_antenna_pattern": [66, 79], "detector_bas": [66, 80], "datetimeseri": [66, 81], "obj_class": [66, 81], "decod": [66, 81], "buffer_db": [66, 81], "detectorbas": [66, 81, 83, 85], "assume_inf": [66, 80, 81, 83, 85], "antenna_by_depth": [66, 80, 81, 83, 85], "get_station_id": [66, 73, 75, 76, 77, 81, 83, 85, 90, 96, 97, 103, 105, 160, 161], "get_stat": [66, 73, 77, 81, 83, 85, 90, 97, 160, 164, 238], "has_stat": [66, 73, 77, 81, 83, 85], "get_unique_time_period": [66, 81, 83, 85], "get_detector_tim": [66, 73, 75, 76, 77, 81, 83, 85], "get_channel": [66, 73, 77, 81, 83, 85, 90, 106, 107], "get_devic": [66, 73, 77, 81, 83, 85], "get_absolute_posit": [66, 73, 77, 81, 83, 85, 233], "get_absolute_position_sit": [66, 81, 82, 83, 85], "get_sit": [66, 73, 77, 81, 82, 83, 85], "get_site_coordin": [66, 73, 77, 81, 83, 85], "get_channel_id": [66, 73, 77, 81, 83, 85, 90, 95, 106, 107, 238], "get_parallel_channel": [66, 81, 83, 85], "get_number_of_devic": [66, 81, 83, 85], "get_device_id": [66, 81, 83, 85], "get_cable_delai": [66, 73, 77, 81, 82, 83, 85], "get_cable_type_and_length": [66, 81, 82, 83, 85], "get_antenna_typ": [66, 73, 77, 81, 82, 83, 85], "get_antenna_deployment_tim": [66, 81, 82, 83, 85], "get_antenna_orient": [66, 73, 77, 81, 82, 83, 85], "get_amplifier_typ": [66, 81, 82, 83, 85], "get_amplifier_measur": [66, 81, 83, 85], "get_sampling_frequ": [66, 73, 77, 81, 82, 83, 85], "get_number_of_sampl": [66, 73, 77, 81, 82, 83, 85, 90, 93, 94, 95, 104], "get_antenna_model": [66, 73, 77, 81, 82, 83, 85], "get_channel_group_id": [66, 81, 83, 85], "get_noise_rm": [66, 81, 83, 85, 137], "get_noise_temperatur": [66, 73, 77, 81, 83, 85], "is_channel_noiseless": [66, 73, 77, 81, 83, 85], "detector_sql": 66, "get_everyth": [66, 82], "get_everything_channel": [66, 82], "get_everything_st": [66, 82], "get_everything_posit": [66, 82], "get_antenna_model_fil": [66, 82], "get_station_typ": [66, 82], "detector_sys_uncertainti": 66, "detectorsysuncertainti": [66, 83], "set_antenna_orientation_offset": [66, 83], "reset_antenna_orientation_offset": [66, 83], "set_antenna_position_offset": [66, 83], "reset_antenna_position_offset": [66, 83], "filterrespons": [66, 131, 211], "get_filter_response_mini_circuit": [66, 84], "get_filter_response_mini_circuits2": [66, 84], "get_filter_respons": [66, 84, 157, 209, 211], "generic_detector": [66, 80], "genericdetector": [66, 85, 112, 114, 171, 191, 192], "add_generic_st": [66, 85], "add_station_properties_for_ev": [66, 85, 233], "get_station_properties_for_ev": [66, 85], "set_ev": [66, 85, 233], "get_reference_st": [66, 85], "get_reference_station_id": [66, 85], "get_default_st": [66, 85], "get_default_station_id": [66, 85], "get_default_channel": [66, 85], "get_default_channel_id": [66, 85], "get_raw_st": [66, 85], "get_raw_channel": [66, 85], "get_nam": [66, 86, 90, 99, 108], "get_time_delai": [66, 73, 77, 86, 113, 114, 121, 123], "subtract_time_delay_from_respons": [66, 86], "sql_to_json": 66, "test_detector_db": 66, "visualize_detector": [66, 234], "bhokansonfasig": 68, "tree": [68, 179, 180], "possibli": [70, 74], "amp_measur": 70, "buffer": [70, 75, 76, 77, 79, 81, 165, 233], "cable_typ": [70, 76], "cable_length": 70, "amp_nam": [71, 76, 78], "hardwarerespons": 71, "preprocess": [71, 79, 180], "seri": [71, 93, 94, 95, 104, 118, 148, 215], "ex": [71, 79], "set_database_tim": [73, 75, 76], "set_detector_tim": [73, 75, 76], "get_database_tim": [73, 75, 76], "find_primary_measur": [73, 75, 76], "get_object_nam": [73, 75, 76], "get_collection_nam": [73, 75, 76], "load_board_inform": [73, 75, 76], "get_general_station_inform": [73, 75, 76], "get_general_channel_inform": [73, 75, 76], "get_general_device_inform": [73, 75, 76], "get_collection_inform": [73, 75, 76], "get_quantity_nam": [73, 75, 76], "get_all_available_signal_chain_config": [73, 75, 76], "get_identifi": [73, 75, 76], "get_posit": [73, 75, 76, 90, 95, 238], "get_channel_signal_chain_measur": [73, 75, 76], "get_component_data": [73, 75, 76], "get_complete_station_inform": [73, 75, 76], "get_channel_signal_chain": [73, 75, 76, 77], "get_complete_channel_inform": [73, 75, 76], "get_complete_device_inform": [73, 75, 76], "query_modification_timestamps_per_st": [73, 75, 76], "rename_database_collect": [73, 76], "create_empty_collect": [73, 76], "clone_collection_to_collect": [73, 76], "set_not_work": [73, 76], "add_entry_to_databas": [73, 76], "add_general_station_info": [73, 76], "add_general_channel_info_to_st": [73, 76], "add_general_device_info_to_st": [73, 76], "add_measurement_protocol": [73, 76], "update_current_primari": [73, 76], "change_primary_antenna_measur": [73, 76], "change_primary_cable_measur": [73, 76], "change_primary_iglu_measur": [73, 76], "change_primary_drab_measur": [73, 76], "change_primary_surface_measur": [73, 76], "change_primary_downhole_measur": [73, 76], "decommission_a_st": [73, 76], "decommission_a_channel": [73, 76], "decommission_a_devic": [73, 76], "export_as_str": [73, 77], "get_channel_orient": [73, 77], "get_signal_chain_respons": [73, 77, 86], "get_signal_chain_compon": [73, 77], "get_relative_position_devic": [73, 77], "rno_surfac": 74, "temp": [74, 76, 123, 167], "293": [74, 123], "hardwar": [74, 75, 76, 111, 114, 123, 235, 242], "incorpor": [74, 111, 114, 123], "ri": 74, "hardweareresponseincorpor": 74, "52": 74, "room": 74, "empir": 74, "board": [74, 76, 108, 124, 203], "drab": [74, 75, 76, 77, 235], "fiber": [74, 76, 77, 235], "iglu": [74, 75, 76, 77, 233, 235], "climat": 74, "phased_arrai": 74, "15k": 74, "connect": [75, 76, 77], "preconfigur": [75, 76], "mongo": [75, 76, 77], "client": [75, 76], "freeli": [75, 76], "acces": [75, 76], "db": [75, 76, 77, 81, 86, 132, 167], "database_connect": [75, 76, 77], "rnog_publ": [75, 76, 77], "env_pw_us": [75, 76], "server": [75, 76, 79, 81, 83, 232, 233], "environment": [75, 76], "mongo_serv": [75, 76], "mongo_us": [75, 76], "mongo_password": [75, 76], "rnog_test_publ": [75, 76], "connection_str": [75, 76], "db_mongo_connection_str": [75, 76], "database_nam": [75, 76], "rnog_liv": [75, 76], "mongo_kwarg": [75, 76], "mongocli": [75, 76], "utc": [75, 76, 161, 164], "commiss": [75, 76, 77, 85, 233, 235], "collection_nam": [75, 76], "primary_tim": [75, 76], "identification_label": [75, 76], "data_dict": [75, 76], "object_id": [75, 76], "measurement_id": [75, 76], "surface_board": [75, 76], "iglu_board": [75, 76], "timestamp": [75, 76, 82, 161, 164], "s_paramet": [75, 76, 79], "object_typ": [75, 76], "board_nam": [75, 76], "info_nam": [75, 76], "device_id": [75, 76, 77, 81, 83, 85], "devic": [75, 76, 77, 81, 83, 85], "search_bi": [75, 76], "obj_id": [75, 76], "measurement_nam": [75, 76], "use_primary_time_with_measur": [75, 76], "station_posit": [75, 76, 148, 233], "channel_posit": [75, 76], "signal_chain": [75, 76, 77], "unless": [75, 76, 167], "wanted_quant": [75, 76], "object_nam": [75, 76], "input_d": [75, 76], "golden_iglu": [75, 76], "measurement_temp": [75, 76], "drab_id": [75, 76], "golden_drab": [75, 76], "channel_device_id": [75, 76], "position_id": [75, 76], "channel_signal_id": [75, 76], "component_typ": [75, 76], "component_id": [75, 76], "supplementary_info": [75, 76], "sparamet": [75, 76], "measurement_station_posit": [75, 76], "measurement_channel_posit": [75, 76], "measurement_signal_chain": [75, 76], "measurement_device_posit": [75, 76], "complete_info": [75, 76], "indentifi": [75, 76], "dictinoari": [75, 76], "otherth": [75, 76], "response_chain": [75, 76], "measurement_posit": [75, 76], "modif": [75, 76], "requier": [75, 76, 91, 99, 103], "station_data": [75, 76], "modification_timestamp": [75, 76], "station_commission_timestamp": [75, 76], "station_decommission_timestamp": [75, 76], "former": [75, 76, 235], "comiss": [75, 76, 233], "nested_list": 75, "parent_kei": 75, "nested_field": 75, "nested_kei": 75, "aggreg": 75, "old_nam": 76, "new_nam": 76, "fail": [76, 219], "old_collect": 76, "new_collect": 76, "primary_measur": 76, "breakout_id": 76, "breakout_channel_id": 76, "broken": 76, "dosn": 76, "breakout": 76, "identification_kei": 76, "identification_valu": 76, "primary_measurement_start": 76, "hpol": [76, 77, 232], "vpol": [76, 77, 232], "station_nam": 76, "station_com": 76, "number_of_sampl": [76, 77, 135], "2080": 76, "channel_com": 76, "device_nam": 76, "device_com": 76, "protocol_nam": 76, "utcnow": [76, 235], "antenna_typ": [76, 90, 101, 232], "antenna_nam": [76, 120, 161, 171], "protocol": 76, "units_arr": 76, "function_test": 76, "s11": 76, "cable_nam": 76, "downhol": 76, "board_typ": 76, "laser_id": 76, "iglu_id": 76, "photodiode_id": 76, "breakout_cha_id": 76, "decomm_tim": 76, "decommiss": [76, 85, 233], "over_write_handset_valu": 77, "database_tim": [77, 235], "always_query_entire_descript": 77, "select_st": 77, "acut": 77, "question": [77, 233], "queri": [77, 167, 233], "describt": 77, "descib": 77, "io": [77, 109, 233, 238], "detector_tre": 77, "json_kwarg": 77, "additional_data": 77, "_json_seri": 77, "skip_signal_chain_respons": 77, "dumps_kwarg": 77, "constructor": [77, 191, 192, 233, 238, 241], "idendifi": 77, "channel_info": 77, "station_info": 77, "site": [77, 81, 83, 85, 95, 143, 148, 169, 217], "outward": [77, 79, 81, 83, 85, 234], "symmetri": [77, 79, 81, 83, 85, 232, 234, 239], "counterclockwis": [77, 79, 81, 82, 83, 85, 232, 234], "orientation_theta": [77, 79, 90, 101, 234], "orientation_phi": [77, 79, 90, 101, 234], "rotation_theta": [77, 79, 90, 101, 234], "rotation_phi": [77, 79, 90, 101, 234], "tubl": 77, "channel_signal_chain": 77, "mostli": [77, 233], "repons": [77, 86, 235], "coax": [77, 118, 235], "radiant": [77, 148], "signal_chain_compon": 77, "dictonari": [77, 79], "particlular": 77, "pariti": 77, "antenna_model": [77, 79], "vel": [77, 79], "accronym": 77, "abbrivatipn": 77, "outer": 77, "tempertur": 77, "use_stor": 77, "cable_onli": 77, "time_delai": [77, 86, 228], "latitud": [77, 81, 83, 85, 118], "longitud": [77, 81, 83, 85, 118], "ntu": 78, "y1": 79, "interpolation_method": 79, "imaginari": 79, "magnitud": [79, 101, 120, 206, 232], "vector_effective_length": 79, "df": [79, 215], "effecitv": 79, "path_gain": 79, "path_phas": 79, "xfdtd": [79, 232], "THAT": 79, "THE": 79, "IN": 79, "TO": 79, "OF": 79, "ad1": 79, "ra1": 79, "gen_num": 79, "wipld": 79, "s_12": 79, "older": [79, 233, 235], "insuffici": 79, "incid": [79, 207, 216], "circuit": 79, "ohm": [79, 214], "180deg": [79, 81, 82, 83, 85, 232, 234], "ff2": 79, "inicd": 79, "h_phi": [79, 232], "h_theta": [79, 232], "wipl": [79, 232], "verifi": 79, "sha1": [79, 232], "pars": [79, 84, 165, 171, 175, 233], "ascii": 79, "containig": 79, "hfss": 79, "magnitudes_theta": 79, "magnitudes_phi": 79, "phases_phi": 79, "phases_theta": 79, "csv": [79, 167], "path_theta": 79, "path_phi": 79, "lba": [79, 161, 162], "ant": 79, "antennamodel": 79, "interpolation_mod": 79, "magphas": 79, "cutoff_freq": 79, "phase_typ": 79, "theoret": 79, "usag": [79, 233, 243], "occupi": 79, "rnog_mongo": 80, "backward": [80, 81, 83, 85, 161, 215], "alia": 81, "obj": 81, "rtype": 81, "in_memori": 81, "tini": 81, "tb": 81, "getter": [81, 83, 85], "detector_sql_auth": [81, 83], "credenti": [81, 83], "arianna_detector_db": [81, 83, 85], "madel": [81, 83, 85], "_inffirn": [81, 83, 85], "period": [81, 83, 85, 232, 242], "mode_id": [81, 85], "deploi": [81, 83, 85, 235], "lmr240": [81, 83, 85], "deploy": [81, 83, 85, 234], "differenti": [81, 82, 83, 85, 134, 212], "group_id": [81, 83, 85, 94, 104], "stage": [81, 83, 85, 180], "precomput": [81, 83, 85], "deconvolv": [81, 83, 85, 114, 123], "100mhz": [81, 83, 85], "deviat": [81, 83, 85, 108, 124, 174, 214, 239], "noiseless": [81, 83, 85], "proxi": [81, 83, 85], "utm": 82, "connector": [82, 234], "ori_theta": 83, "ori_phi": 83, "rot_theta": 83, "rot_phi": 83, "systemat": [83, 150], "filter_nam": 84, "minicircuit": 84, "default_st": 85, "reference_st": [85, 233], "default_channel": 85, "reference_channel": [85, 233], "default_devic": 85, "reference_devic": 85, "station_dict": 85, "run_numb": [85, 97, 167, 180], "whose": [85, 93, 94, 95, 104, 133, 135, 220, 238, 239], "y_unit": 86, "remove_time_delai": 86, "debug_plot": 86, "attenuator_in_db": 86, "multipi": 86, "trace_at_readout": 86, "trace_at_antenna": 86, "arang": 86, "complex_resp": 86, "mag": 86, "Will": [86, 122, 131, 208], "alongsid": 86, "Its": [86, 241], "expon": 86, "multiplicit": 86, "10db": [86, 203], "ax1": 86, "in_db": 86, "plt_kwarg": 86, "resp": 86, "base_show": 90, "baseshow": [90, 91, 99, 103, 148], "get_id": [90, 91, 92, 94, 96, 97, 99, 102, 103, 104, 105, 106, 107], "get_paramet": [90, 91, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 238], "set_paramet": [90, 91, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 238], "has_paramet": [90, 91, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107], "get_axi": [90, 91, 99, 103], "get_coordinatesystem": [90, 91, 99, 103], "deseri": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 238], "base_st": [90, 205, 207], "basest": [90, 92, 106, 107, 207], "set_parameter_error": [90, 92, 95, 106, 107, 238], "get_parameter_error": [90, 92, 95, 106, 107, 238], "remove_paramet": [90, 92, 106, 107], "set_station_tim": [90, 92, 106, 107], "get_station_tim": [90, 92, 106, 107], "get_station_time_dict": [90, 92, 106, 107], "remove_trigg": [90, 92, 106, 107], "get_trigg": [90, 92, 106, 107], "get_primary_trigg": [90, 92, 106, 107], "get_first_trigg": [90, 92, 106, 107], "has_trigg": [90, 92, 97, 106, 107, 108, 110, 112], "set_trigg": [90, 92, 106, 107, 108], "set_electric_field": [90, 92, 106, 107], "get_electric_field": [90, 92, 106, 107, 238], "get_electric_field_id": [90, 92, 106, 107], "add_electric_field": [90, 92, 106, 107], "get_electric_fields_for_channel": [90, 92, 106, 107, 238], "is_neutrino": [90, 92, 106, 107], "is_cosmic_rai": [90, 92, 106, 107], "set_is_neutrino": [90, 92, 106, 107], "set_is_cosmic_rai": [90, 92, 106, 107], "get_arianna_paramet": [90, 92, 106, 107], "has_arianna_paramet": [90, 92, 106, 107], "set_arianna_paramet": [90, 92, 106, 107], "basetrac": [90, 93, 94, 95, 104, 140, 157, 192, 239], "get_trac": [90, 93, 94, 95, 104, 160, 164, 228, 238], "get_filtered_trac": [90, 93, 94, 95, 104], "set_trac": [90, 93, 94, 95, 104, 238], "set_frequency_spectrum": [90, 93, 94, 95, 104, 238, 239], "set_trace_start_tim": [90, 93, 94, 95, 104, 238], "add_trace_start_tim": [90, 93, 94, 95, 104], "get_trace_start_tim": [90, 93, 94, 95, 104], "get_frequ": [90, 93, 94, 95, 104, 238], "get_hilbert_envelop": [90, 93, 94, 95, 104], "get_hilbert_envelope_mag": [90, 93, 94, 95, 104], "apply_time_shift": [90, 93, 94, 95, 104], "add_to_trac": [90, 93, 94, 95, 104], "get_group_id": [90, 94, 104], "get_unique_identifi": [90, 95, 104], "has_parameter_error": [90, 95], "set_channel_id": [90, 95], "has_channel_id": [90, 95], "get_shower_id": [90, 95, 104, 106], "get_ray_tracing_solution_id": [90, 95, 104], "set_posit": [90, 95], "get_stokes_paramet": [90, 95], "has_station_id": [90, 96, 103, 105], "register_module_ev": [90, 97], "register_module_st": [90, 97], "iter_modul": [90, 97], "get_generator_info": [90, 97], "set_generator_info": [90, 97], "has_generator_info": [90, 97], "set_id": [90, 97], "get_run_numb": [90, 97], "set_event_tim": [90, 97], "get_event_tim": [90, 97], "set_stat": [90, 97], "add_particl": [90, 97], "get_particl": [90, 97], "get_primari": [90, 97], "get_par": [90, 97], "has_particl": [90, 97], "get_interaction_product": [90, 97], "add_show": [90, 97], "get_show": [90, 97, 238], "has_show": [90, 97], "get_first_show": [90, 97, 238], "add_sim_show": [90, 97], "get_sim_show": [90, 97, 238], "get_first_sim_show": [90, 97], "has_sim_show": [90, 97], "add_sim_emitt": [90, 97], "get_sim_emitt": [90, 97, 238], "get_first_sim_emitt": [90, 97], "has_sim_emitt": [90, 97], "get_hybrid_inform": [90, 97, 238], "hybrid_inform": 90, "hybridinform": [90, 98, 238], "add_hybrid_show": [90, 98, 238], "get_hybrid_show": [90, 98, 238], "hybrid_show": [90, 98], "hybridshow": [90, 99, 238], "set_hybrid_detector": [90, 99, 238], "get_hybrid_detector": [90, 99, 238], "parameter_seri": 90, "serialize_covari": [90, 100], "deserialize_covari": [90, 100], "stationparamet": [90, 101, 238], "nu_zenith": [90, 101], "nu_azimuth": [90, 101], "nu_flavor": [90, 101], "nu_vertex": [90, 101, 140], "cr_energi": [90, 101], "cr_zenith": [90, 101, 238], "cr_azimuth": [90, 101], "channels_max_amplitud": [90, 101], "zenith_cr_templatefit": [90, 101], "zenith_nu_templatefit": [90, 101], "cr_xcorrel": [90, 101], "nu_xcorrel": [90, 101], "station_tim": [90, 101, 242], "cr_energy_em": [90, 101], "nu_inttyp": [90, 101], "chi2_efield_time_direction_fit": [90, 101], "ndf_efield_time_direction_fit": [90, 101], "cr_xmax": [90, 101], "vertex_2d_fit": [90, 101, 140], "distance_correl": [90, 101], "viewing_angl": [90, 101, 239], "flagged_channel": [90, 101], "cr_dominant_polaris": [90, 101], "dirty_fft_channel": [90, 101], "channelparamet": [90, 101, 122], "maximum_amplitude_envelop": [90, 101], "p2p_amplitud": [90, 101], "signal_tim": [90, 101, 141], "noise_rm": [90, 101], "signal_region": [90, 101], "noise_region": [90, 101], "signal_time_offset": [90, 101], "signal_receiving_zenith": [90, 101], "signal_ray_typ": [90, 101], "signal_receiving_azimuth": [90, 101], "block_offset": [90, 101, 122], "vrms_nuradiomc_simul": [90, 101], "bandwidth_nuradiomc_simul": [90, 101], "electricfieldparamet": [90, 101], "ray_path_typ": [90, 92, 101, 106, 107], "polarization_angl": [90, 101], "polarization_angle_expect": [90, 101], "signal_energy_flu": [90, 101], "cr_spectrum_slop": [90, 101], "nu_vertex_dist": [90, 101], "nu_viewing_angl": [90, 101], "max_amp_antenna": [90, 101], "max_amp_antenna_envelop": [90, 101], "reflection_coefficient_theta": [90, 101], "reflection_coefficient_phi": [90, 101], "cr_spectrum_quadratic_term": [90, 101], "energy_fluence_ratio": [90, 101], "nu_vertex_propagation_tim": [90, 101], "raytracing_solut": [90, 101], "ariannaparamet": [90, 101], "seq_start_tim": [90, 101], "seq_stop_tim": [90, 101], "seq_num": [90, 101], "comm_period": [90, 101], "comm_dur": [90, 101], "trigger_threshold": [90, 101], "l1_supression_valu": [90, 101], "internal_clock_tim": [90, 101], "showerparamet": [90, 91, 99, 101, 103], "electromagnetic_energi": [90, 101], "radiation_energi": [90, 101], "electromagnetic_radiation_energi": [90, 101], "primary_particl": [90, 101], "shower_maximum": [90, 101], "distance_shower_maximum_geometr": [90, 101], "distance_shower_maximum_grammag": [90, 101], "parent_id": [90, 101], "refractive_index_at_ground": [90, 101], "atmospheric_model": [90, 101], "magnetic_field_rot": [90, 101], "magnetic_field_vector": [90, 95, 101, 106, 148, 228], "observation_level": [90, 101], "charge_excess_profile_id": [90, 101], "interferometric_shower_maximum": [90, 101], "interferometric_shower_axi": [90, 101], "interferometric_cor": [90, 101], "emitterparamet": [90, 101], "realization_id": [90, 101], "particleparamet": [90, 101], "generatorattribut": [90, 101], "total_number_of_ev": [90, 101], "eventparamet": [90, 101], "sim_config": [90, 101], "hash_nuradioreco": [90, 101], "hash_nuradiomc": [90, 101], "as_hdf5_dict": [90, 102], "radio_show": 90, "radioshow": [90, 97, 103, 238], "sim_channel": [90, 106], "sim_emitt": [90, 97], "simemitt": [90, 97, 105], "set_candid": [90, 106], "is_candid": [90, 106], "get_magnetic_field_vector": [90, 106, 107], "set_magnetic_field_vector": [90, 106], "get_simulation_weight": [90, 106], "set_simulation_weight": [90, 106], "iter_channel": [90, 106, 107, 238], "add_channel": [90, 106, 107], "get_ray_tracing_id": [90, 106], "get_channels_by_channel_id": [90, 106], "get_channels_by_shower_id": [90, 106], "get_channels_by_ray_tracing_id": [90, 106], "set_sim_st": [90, 107], "add_sim_st": [90, 107], "get_sim_st": [90, 107, 238], "has_sim_st": [90, 107], "iter_channel_group": [90, 107], "has_channel": [90, 107], "remove_channel": [90, 107], "set_reference_reconstruct": [90, 107], "get_reference_reconstruct": [90, 107], "get_reference_direct": [90, 107], "set_primari": [90, 108], "is_primari": [90, 108], "set_trigger_tim": [90, 108], "get_trigger_tim": [90, 108], "get_typ": [90, 108], "get_triggered_channel": [90, 108], "set_triggered_channel": [90, 108], "set_pre_trigger_tim": [90, 108], "get_pre_trigger_tim": [90, 108, 109, 205], "get_pre_trigger_time_channel": [90, 108], "get_trigger_set": [90, 108], "simplethresholdtrigg": [90, 108], "envelopephasedtrigg": [90, 108], "simplephasedtrigg": [90, 108], "highlowtrigg": [90, 108], "integratedpowertrigg": [90, 108], "envelopetrigg": [90, 108, 109, 197], "rnogsurfacetrigg": [90, 108], "antiparallel": [91, 99, 103], "movement": [91, 99, 103], "particla": [91, 99, 103], "coordiat": [91, 99, 103], "magnet": [91, 95, 99, 101, 103, 148], "data_pkl": [91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108], "_event_tim": [92, 106, 107], "isot": [92, 106, 107], "_station_tim": [92, 106, 107], "overridden": [92, 106, 107, 220], "simelectricfield": [92, 106, 107, 176], "efield_id": [92, 106, 107], "save_efield_trac": [92, 106], "trace_start_tim": [93, 167, 205, 242], "ifft": [93, 94, 95, 104, 215], "represent": [93, 94, 95, 104, 164], "date": [93, 94, 95, 104, 161], "butterab": [93, 94, 95, 104, 108, 131, 152, 211], "butterworth": [93, 94, 95, 104, 108, 131, 143, 152, 199, 206, 211, 214, 228], "window_mask": [93, 94, 95, 104], "frequency_spectrum": [93, 94, 95, 104], "delta_t": [93, 94, 95, 104], "silent": [93, 94, 95, 104], "theorem": [93, 94, 95, 104], "cyclic": [93, 94, 95, 104, 228], "wrap": [93, 94, 95, 104, 239], "acommod": [93, 94, 95, 104], "_sampling_r": [93, 94, 95, 104], "_trace_start_tim": [93, 94, 95, 104], "_time_trac": [93, 94, 95, 104], "channel_group_id": [94, 104, 107], "dual": [94, 104, 161], "tripl": [94, 104, 106], "common": [94, 104, 131, 215, 228, 232], "save_trac": [94, 95, 104], "ray_tracing_id": [95, 104, 106], "window_sampl": [95, 228], "vxb_vxvxb": 95, "filter_kwarg": 95, "stoke": [95, 228], "vxb": [95, 148, 228], "vxvxb": [95, 148, 228], "roll": [95, 194, 222, 242], "shorter": [95, 161], "sit": 95, "trace_util": [95, 209], "get_stok": [95, 209, 228], "emitter_id": [96, 97, 105], "inter": 97, "sequenc": [97, 101], "evt_id": 97, "particle_id": [97, 209, 223], "particle_or_show": 97, "parent_particl": 97, "sim_show": [97, 148, 169], "hybrid": 97, "hybrid_detector": 99, "target_object": 100, "parameter_enum": 100, "no_arg": 101, "qualnam": 101, "ot": 101, "crosscorrel": 101, "26": 101, "chi2": 101, "fitter": 101, "27": 101, "28": 101, "31": [101, 133], "60": [101, 108, 139, 148, 203, 225], "defaultdict": 101, "nrr": 101, "readlofardata": [101, 120, 159, 160], "stationrfifilt": [101, 109, 115], "61": [101, 133], "stationpulsefind": [101, 109, 115], "62": 101, "rfi": [101, 118, 120, 164], "ampliud": 101, "likel": 101, "pedest": [101, 167], "channelblockoffsetfitt": [101, 109, 121, 167], "onski": 101, "e_theta": [101, 208], "e_phi": [101, 208], "voltagetoanalyticefieldconvert": [101, 109, 143], "convolut": [101, 131, 211, 214, 242], "channelid": 101, "dirat": 101, "provi": 101, "l1": 101, "supress": 101, "sea": 101, "corrdinatesystem": 101, "103": 101, "104": 101, "105": 101, "106": 101, "107": 101, "108": 101, "109": 101, "110": [101, 112], "longitudion": 101, "112": 101, "121": 101, "122": [101, 162], "ob": 101, "footprint": 101, "23": 101, "201": 101, "202": 101, "particle_index": 102, "regular": 104, "apart": 104, "candidate_statu": 106, "simulation_weight": 106, "unique_identifi": 106, "save_channel_trac": 106, "use_channel": [107, 206, 207], "ascend": 107, "return_group_id": 107, "delet": 107, "suppli": [107, 125, 200], "triggers_pkl": 108, "trigger_typ": [108, 167, 180], "pre_trigger_tim": [108, 194, 205, 222], "involv": 108, "primary_trigg": 108, "number_of_coincid": [108, 200], "channel_coincidence_window": 108, "threshold_factor": 108, "power_mean": [108, 112, 214], "power_std": [108, 112, 214], "phasing_angl": [108, 194], "trigger_delai": [108, 194], "output_passband": [108, 214], "diod": [108, 112, 203, 214, 227], "calculate_noise_paramet": [108, 209, 214], "diodesimul": [108, 209, 227], "6th": [108, 214], "secondary_channel": 108, "primary_angl": 108, "secondary_angl": 108, "sec_trigger_delai": 108, "window_s": 108, "maximum_amp": [108, 194], "subbeam": [108, 194], "tick": [108, 194], "stride": [108, 222], "high_low_window": [108, 200, 201], "integration_window": [108, 202], "filtertyp": 108, "vbia": [108, 203], "hardwareresponseincorpor": [109, 110, 113, 121, 131, 242], "beamformingdirectionfitter_lofar": [109, 115], "geometric_delai": [109, 115, 116, 117], "beamformingdirectionfitt": [109, 115, 116], "beamforming_util": [109, 115], "mini_beamform": [109, 115, 117], "beamform": [109, 115, 117, 119, 148, 222], "geometricdelayfarfield": [109, 115, 117], "stationgalacticcalibr": [109, 115], "fourier_seri": [109, 115, 118], "find_snr_of_timeseri": [109, 115, 119], "num_double_zero": [109, 115, 120], "median_sorted_by_pow": [109, 115, 120], "findrfi_lofar": [109, 115, 120], "channelblockoffset": [109, 121, 122], "fit_block_offset": [109, 121, 122], "triggerboardrespons": [109, 121], "setup_logg": [109, 126, 127], "register_run": [109, 126, 127], "deltat": [109, 144], "iftelectricfieldreconstructor": 109, "linearslopeoper": [109, 156, 158], "slopespectrumoper": [109, 156, 158], "domainflipp": [109, 156, 158], "symmetrizingoper": [109, 156, 158], "nuradiorecoio": [109, 159, 233, 238], "eventread": [109, 159, 233, 238], "eventwrit": [109, 159, 233, 238], "get_head": [109, 159, 165, 175, 176, 238], "event_parser_factori": [109, 159], "scan_files_funct": [109, 159, 177], "iter_events_funct": [109, 159, 177], "measured_nois": 109, "channelmeasurednoiseadd": [109, 181], "neutrinodirectionreconstructor": 109, "voltagetoefieldanalyticconverterforneutrino": [109, 187], "neutrinovertexreconstructor": [109, 239], "create_lookup_t": [109, 189, 239], "neutrino2dvertexreconstructor": [109, 140, 189, 239], "neutrino3dvertexreconstructor": [109, 189, 239], "phasedarrai": 109, "calc_parameters_for_rnog_surface_trigg": [109, 197], "linear_fit": [109, 197, 198], "get_envelope_trigg": [109, 197, 199], "get_high_low_trigg": [109, 197, 200], "get_majority_log": [109, 197, 200], "multihighlowthreshold": [109, 197], "get_high_trigg": [109, 197, 201], "get_low_trigg": [109, 197, 201], "get_multiple_high_low_trigg": [109, 197, 201], "powerintegr": [109, 197], "get_power_int_trigg": [109, 197, 202], "rnog_surface_trigg": [109, 197], "schottky_diod": [109, 197, 203], "get_threshold_trigg": [109, 197, 204], "analogtodigitalconvert": [109, 124, 194], "perfect_compar": [109, 125], "perfect_floor_compar": [109, 125], "perfect_ceiling_compar": [109, 125], "apply_satur": [109, 125], "round_to_int": [109, 125], "get_digital_trac": [109, 125], "get_array_of_channel": [109, 128, 207], "channeladdcabledelai": 109, "channelantennadedispers": 109, "get_filter_argu": [109, 131], "get_filt": [109, 113, 114, 121, 123, 131, 132], "test_equ": [109, 131], "channelcwnotchfilt": 109, "find_frequency_peaks_from_trac": [109, 132], "find_frequency_peak": [109, 132], "filter_cw": [109, 132], "plot_trac": [109, 132], "plot_ft": [109, 132], "add_random_phas": [109, 134], "fftnoise_fullfft": [109, 134], "bandlimited_nois": [109, 134], "precalculate_bandlimited_noise_paramet": [109, 134], "bandlimited_noise_from_precalculated_paramet": [109, 134], "bandlimited_noise_from_spectrum": [109, 134], "channellengthadjust": [109, 183, 186], "channelsignalreconstructor": 109, "get_snr": [109, 137], "channelstopfilt": [109, 242], "channeltemplatecorrel": 109, "match_sampl": [109, 139], "channeltimeoffsetcalcul": 109, "channeltimewindow": 109, "correlationdirectionfitt": 109, "cosmicrayenergyreconstructor": 109, "efieldairtoicepropag": 109, "efieldradiointerferometricreconstruct": 109, "efieldinterferometricdepthreco": [109, 148], "sample_longitudinal_profil": [109, 148], "reconstruct_interferometric_depth": [109, 148], "update_atmospheric_model_and_refractivity_t": [109, 148], "efieldinterferometricaxisreco": [109, 148], "find_maximum_in_plan": [109, 148], "sample_lateral_cross_sect": [109, 148], "reconstruct_shower_axi": [109, 148], "get_geometry_and_transform": [109, 148], "get_station_data": [109, 148], "plot_lateral_cross_sect": [109, 148], "efieldtimedirectionfitt": 109, "efieldtovoltageconvert": [109, 241, 242], "efieldtovoltageconverterperefield": 109, "electricfieldbandpassfilt": 109, "electricfieldresampl": 109, "electricfieldsignalreconstructor": 109, "eventtypeidentifi": 109, "sphericalwavefitt": 109, "templatedirectionfitt": 109, "triggertimeadjust": [109, 242], "covari": [109, 206], "stacked_lstsq": [109, 206, 207], "voltagetoefieldconvert": [109, 242], "voltagetoefieldconverterperchannel": 109, "sim_to_data": [111, 114, 123, 205, 242], "tunnel": [112, 214], "fasig": 112, "exce": [112, 132, 176, 186], "power_threshold": 112, "default_integrated_pow": 112, "requri": [112, 200, 201, 202, 204], "get_mingainlin": [113, 114, 121, 123], "phase_onli": [114, 123], "mingainlin": [114, 123], "unfilt": [114, 123], "post": [114, 123, 125, 167, 194], "mitig": [114, 123], "zero_nois": [114, 123], "unclear": [114, 123], "station_list": [115, 120], "metadata_dir": [115, 120, 161, 162, 164], "ant_posit": 116, "matrix": [116, 206], "nr_of_ant": 116, "interferometri": [116, 128, 209], "max_it": 116, "cr_snr": [116, 119], "logger_level": [116, 118, 119, 120, 164, 171], "1009": [116, 128], "0345": [116, 128], "fft_data": 117, "pycrtool": [117, 161], "hbeamformblock": 117, "ant_po": [117, 194], "partial": [118, 167], "a_": 118, "sum_": 118, "mathrm": 118, "b_": 118, "odd": [118, 134, 161, 164, 215], "lofar_lba": 118, "galact": [118, 133], "clean": [118, 164], "correl": [118, 139, 140, 142, 148, 191, 192, 196, 206, 238, 239], "meaning": 118, "experiment": [118, 242], "timeseri": 119, "window_start": 119, "window_end": 119, "noise_start": 119, "noise_end": 119, "enhanc": 119, "estim": [119, 124, 140, 157, 167, 235], "lora": [119, 164], "noise_window": [119, 154], "good_channel": 119, "ave_shift": 120, "preced": 120, "psort": 120, "median": [120, 124, 167], "reoder": 120, "until": [120, 186, 206, 235], "tbb_filenam": 120, "target_trace_length": 120, "65536": [120, 164], "rfi_cleaning_trace_length": 120, "8192": 120, "flagged_antenna_id": 120, "num_dbl_z": 120, "tbb": [120, 161, 164], "h5": 120, "dirti": 120, "metadata": [120, 161, 162, 164], "chunk": [120, 124], "output_dict": 120, "avg_power_spectrum": 120, "avg_antenna_pow": 120, "cleaned_pow": 120, "contamin": 120, "phase_st": 120, "dirty_channel": 120, "dirty_channels_block_s": 120, "stabil": 120, "valueerror": 120, "varianc": 120, "hardcod": 120, "reader": [120, 164, 167, 238, 242], "add_offset": [121, 122], "remove_offset": [121, 122], "apply_trigger_filt": [121, 124], "get_avg_vrm": [121, 124], "apply_adc_gain": [121, 124], "get_trigger_valu": [121, 124], "digitize_trac": [121, 124], "block_siz": [122, 164], "128": [122, 138, 210, 228], "max_frequ": 122, "051000000000000004": 122, "mv": 122, "maxit": 122, "guess": [122, 148, 191], "cost": 122, "return_trac": 122, "tol": 122, "1e": [122, 157, 161, 206, 207, 218], "06": [122, 194, 200, 201, 204, 214, 218], "rect": 122, "baselin": [122, 167], "output_trac": 122, "toler": [122, 161], "223": 123, "323": 123, "flower": 124, "bit": [124, 125, 220, 232, 234], "adc_input_rang": 124, "clock_offset": [124, 125, 164, 194, 200], "adc_output": [124, 125, 194, 200], "2v": 124, "clock": [124, 125, 161, 162, 164, 194, 216], "cycl": [124, 125, 157], "discretis": [124, 125, 194, 200], "trigger_filt": [124, 125, 194], "trace_split": 124, "approx_vrm": 124, "avg_vrm": 124, "closest": [124, 170, 173], "ideal": 124, "avg_rm": 124, "vrms_after_gain": 124, "ideal_vrm": 124, "capacitor": 124, "requested_channel": 124, "found_trigger_channel": 124, "do_apply_trigger_filt": 124, "trigger_xxx": 124, "quantiz": [124, 194, 222], "abli": 124, "trigger_board_vrm": 124, "adc_n_bit": 125, "adc_ref_voltag": 125, "perfect": [125, 131, 152, 211], "flash": 125, "signif": 125, "ceil": 125, "digitis": 125, "digital_trac": 125, "perfect_floor": 125, "adc_counts_trac": 125, "clip": [125, 148], "unclip": 125, "saturated_trac": 125, "satur": [125, 234], "adc_reference_voltag": [125, 200, 234], "jitter": [125, 134, 194], "random_clock_offset": 125, "upsampl": [125, 194, 222, 228, 238], "fpga": 125, "arithmet": 125, "_adc_typ": 125, "elimin": 125, "nyquist": [125, 134, 215], "trigger_": [125, 200], "trigger_adc": [125, 194, 200], "adc_typ": 125, "return_sampling_frequ": 125, "upsampling_factor": [125, 194], "int_factor": [125, 194, 228], "handler": [127, 220, 241], "streamhandl": [127, 241], "formatt": [127, 220, 241], "logging_statu": [127, 220, 241], "februari": [127, 220, 241], "2024": [127, 220, 232, 241], "decor": 127, "zenlim": [128, 142], "azilim": [128, 142], "360deg": 128, "subtract": [129, 167, 180, 186, 242], "static": [131, 162], "roll_width": [131, 211], "half_hann_perc": 131, "0025": 131, "gaussian_tap": [131, 211], "hann_tap": 131, "hann": [131, 224], "fir": [131, 228], "rippl": [131, 211], "uniti": [131, 211], "decibel": [131, 211], "chebyshev": [131, 211], "5mhz": 131, "taper": [131, 211], "percentag": [131, 138, 224], "jan": 131, "07": [131, 148, 157], "robert": 131, "lahmann": 131, "fau": 131, "get_window": 131, "ham": [131, 224], "kaiser": 131, "beta": 131, "firwin": 131, "lp": 131, "f_cut": 131, "hp": 131, "bp": 131, "f_cut_low": 131, "f_cut_high": 131, "unus": 131, "signatur": 131, "notimplementederror": 131, "is_equ": 131, "fo": 132, "freq_peak": 132, "quality_factor": 132, "notch": 132, "qualiti": [132, 164], "f0": 132, "bw": 132, "centr": 132, "iir": 132, "nonetyp": 132, "plot_kwarg": 132, "hz": [132, 164, 167], "plotlabel": 132, "save_filt": 132, "pydgsm": 133, "oliveira": 133, "costa": 133, "2008": 133, "0802": 133, "1525": 133, "zheng": 133, "2016": 133, "1605": 133, "04920": 133, "bright": 133, "n_side": 133, "interpolation_frequ": 133, "41": 133, "healpix": 133, "skymap": 133, "downsiz": 133, "pixel": 133, "greatli": 133, "n_samples_time_domain": 134, "min_freq": [134, 214], "max_freq": [134, 214], "perfect_whit": 134, "time_domain": [134, 207], "dc": [134, 167], "nquist": 134, "frequencei": 134, "v_rm": 134, "flat": [134, 218], "rayleigh": [134, 214, 222], "white": 134, "rl": 134, "sept": 134, "multi_whit": 134, "disir": 134, "n_frequenc": 134, "excluded_channel": 134, "exclud": 134, "compli": 135, "signal_window_start": 137, "signal_window_length": 137, "noise_window_start": 137, "noise_window_length": 137, "laid": 137, "stored_nois": 137, "rms_stage": 137, "glitch": [138, 242], "smoothli": [138, 242], "filter_s": 138, "prepend": [138, 242], "tukei": [138, 242], "span": 138, "fill": [138, 233], "template_directori": 139, "ref_templ": 139, "resampling_factor": 139, "channels_to_us": [139, 149, 196], "cosmic_rai": [139, 149, 155, 196], "n_templat": 139, "correctd": 140, "thu": [140, 148], "electric_field_templ": [140, 157], "use_sim": [140, 157], "window_funct": 141, "around_puls": 141, "window_width": [141, 218], "window_rise_tim": 141, "time_window_start": 141, "time_window_end": 141, "han": [141, 206], "rise": 141, "channel_pair": 142, "use_envelop": 142, "360": [142, 232], "beforehand": [143, 241], "10th": [143, 206], "calculateamplitudeperraysolut": [144, 145], "host": 148, "interferometr": 148, "rit": 148, "schoorlemm": 148, "jr": 148, "10348": 148, "schlueter": 148, "hueg": 148, "p07048": 148, "x_rit": 148, "x_max": 148, "irregular": 148, "signal_kind": 148, "metric": [148, 218], "hilbert_sum": [148, 218], "interferomet": 148, "number_of_antenna": 148, "anchor": [148, 218], "singal": 148, "lower_depth": 148, "400": 148, "upper_depth": 148, "bin_siz": 148, "return_profil": 148, "samp": 148, "narrow": 148, "cm2": 148, "pf": 148, "depths_cors": 148, "coars": 148, "depths_fin": 148, "signals_cores": 148, "signals_fin": 148, "popt": 148, "use_mc_geometri": 148, "use_mc_puls": 148, "p_axi": 148, "quadrat": 148, "coordinatesytem": 148, "argmax": 148, "shower_axis_init": 148, "shower_axis_mc": 148, "core_mc": 148, "initial_grid_spac": 148, "centered_around_truth": 148, "cross_section_s": 148, "deg_resolut": 148, "726646259971648e": 148, "stupid": 148, "strenght": 148, "60m": 148, "abitrari": 148, "side": [148, 191, 200, 201], "1000m": 148, "target": [148, 158], "deg2rad": 148, "point_found": 148, "strengt": 148, "is_mc": 148, "truth": [148, 238], "smear": 148, "optain": 148, "inperfect": 148, "traces_vxb": 148, "mp": 148, "mc_po": 148, "fname": [148, 161], "fitur": 148, "time_uncertainti": 149, "time_resolut": 150, "pre_pulse_tim": 150, "post_pulse_tim": 150, "sys_dx": 150, "sys_di": 150, "sys_dz": 150, "sys_amp": 150, "aplif": 150, "simstationclass": 151, "retriv": 151, "lookuperror": 151, "seq": 152, "signal_window_pr": 154, "signal_window_post": 154, "distinguish": [155, 238], "forced_event_typ": 155, "accordingli": [155, 215, 242], "criteria": [155, 174, 186], "decis": 155, "make_priors_plot": [156, 157], "theori": 157, "2102": 157, "00258": 157, "amp_dct": 157, "pulse_time_prior": 157, "pulse_time_uncertainti": 157, "n_iter": 157, "pol": [157, 161, 208], "relative_toler": 157, "convergence_level": 157, "energy_fluence_passband": 157, "slope_passband": 157, "phase_slop": 157, "ift": 157, "bandpass_filt": [157, 209], "prior": 157, "efield_sc": 157, "linearoper": 158, "sigma_m": 158, "sigma_n": 158, "codomain": 158, "endomorphicoper": 158, "wise": [158, 216], "revers": [158, 238], "domaintupl": 158, "rawtbbio": [159, 160], "read_antenna_pol_flip": [159, 160, 161], "read_bad_antenna": [159, 160, 161], "read_antenna_delai": [159, 160, 161], "read_station_delai": [159, 160, 161], "decode_if_need": [159, 160, 161], "tbbdata_dal1": [159, 160, 161], "multifile_dal1": [159, 160, 161], "rawtbbio_metadata": [159, 160], "make_antennaid_filt": [159, 160, 162], "mapantennasetkeyword": [159, 160, 162], "getitrfantennaposit": [159, 160, 162], "getstationposit": [159, 160, 162], "convertitrftoloc": [159, 160, 162], "getstationphasecalibr": [159, 160, 162], "convertphase_to_tim": [159, 160, 162], "getclockcorrectionfromparsetaddit": [159, 160, 162], "getclockcorrect": [159, 160, 162], "rawtbbio_util": [159, 160], "even_antname_to_odd": [159, 160, 163], "antname_is_even": [159, 160, 163], "get_metadata": [159, 160, 164], "lora_timestamp_to_blocknumb": [159, 160, 164], "tbb_filetag_from_utc": [159, 160, 164], "getlofartrac": [159, 160, 164], "readrnogdatamattak": [159, 166, 185], "get_time_offset": [159, 166, 167], "readrnogdata": [159, 166, 167], "calculate_simulation_weight": [159, 168, 169], "make_sim_st": [159, 168, 169], "make_sim_show": [159, 168, 169], "readcorea": [159, 168, 172, 173, 242], "readcoreasshow": [159, 168], "antenna_id": [159, 161, 162, 168, 171], "readcoreasst": [159, 168], "readcoreasstationgrid": [159, 168], "simulationselector": [159, 168], "readariannadata": [159, 178, 180], "readariannadatacalib": [159, 178], "openfil": [159, 165], "close_fil": [159, 160, 161, 164, 165], "get_filenam": [159, 165], "get_event_id": [159, 165], "get_event_i": [159, 165, 238], "get_ev": [159, 165, 166, 167, 238], "get_detector": [159, 165, 175, 233], "get_n_ev": [159, 165], "needs_metadata": [160, 161], "get_station_nam": [160, 161], "get_antenna_nam": [160, 161], "get_antenna_set": [160, 161], "get_sample_frequ": [160, 161], "get_filter_select": [160, 161], "get_timestamp": [160, 161], "get_full_data_length": [160, 161], "get_all_sample_numb": [160, 161], "get_nominal_sample_numb": [160, 161], "get_nominal_data_length": [160, 161], "get_itrf_antenna_posit": [160, 161], "get_lofar_centered_posit": [160, 161], "get_timing_callibration_phas": [160, 161], "get_timing_callibration_delai": [160, 161], "get_data": [160, 161], "set_polarization_flip": [160, 161], "set_odd_polarization_delai": [160, 161], "set_station_delai": [160, 161], "find_and_set_polarization_delai": [160, 161], "has_antenna": [160, 161], "get_timestamp_as_datetim": [160, 161], "get_total_delai": [160, 161], "get_time_from_second": [160, 161], "get_geometric_delai": [160, 161], "setup_trace_load": [160, 164], "check_trace_qu": [160, 164], "pim": 161, "schellart": 161, "tobia": 161, "winchen": 161, "lim": 161, "author": [161, 206, 232], "brian": [161, 162], "hare": [161, 162], "remot": [161, 233], "96": [161, 222], "hba": [161, 162], "cs001": [161, 162], "complic": 161, "spread": [161, 238], "isn": 161, "difficult": 161, "constantli": 161, "challeng": 161, "rcu": 161, "essenti": 161, "rc": 161, "rcuid": 161, "0th": 161, "ect": 161, "antennaset": [161, 162], "lba_out": [161, 162], "spell": 161, "antennaid": [161, 162], "think": 161, "misnom": 161, "lba_inn": [161, 162], "flip": 161, "ne": 161, "sw": 161, "nw": 161, "se": 161, "antenna_respons": 161, "input_decod": 161, "force_metadata_ant_po": 161, "forcemetadata_delai": 161, "filepaths_by_stationnam": 161, "stationnam": 161, "lba_10_90": 161, "posix": 161, "fact": [161, 241], "instant": 161, "usabl": 161, "sample_frequ": 161, "itrf": [161, 162], "cs002": [161, 162], "alloc": 161, "force_file_delai": 161, "start_index": 161, "num_point": 161, "antenna_index": 161, "int16": 161, "past": [161, 164, 235], "filename_list": 161, "polarization_flip": 161, "bad_antenna": 161, "additional_ant_delai": 161, "station_delai": 161, "only_complete_pair": 161, "pol_flips_are_bad": 161, "bad": 161, "rare": 161, "even_antenna_nam": 161, "new_delai": 161, "properli": [161, 233], "shouldn": 161, "uncorrect": 161, "total_delai": 161, "liter": [161, 220], "source_loc": 161, "antenna_loc": 161, "xyz": 161, "correspondingli": 161, "earli": 162, "lightn": 162, "imag": 162, "002000001": 162, "antenna_set": 162, "ugli": 162, "cs302": 162, "142": 162, "lba_x": 162, "lba_i": 162, "lba_sparse0": 162, "lba_sparse1": 162, "hba_0": 162, "hba_1": 162, "coordinate_system": 162, "wgs84": 162, "postion": 162, "lat": 162, "lon": 162, "alt": 162, "itrfpo": 162, "phase_cent": 162, "ref_lat_lon": 162, "file_loc": 162, "staticmetadata": 162, "caltabl": 162, "xmetadata_directori": 162, "subband": 162, "14260161": 162, "07397622e": 162, "18j": 162, "05283530e": 162, "03169438e": 162, "68675289e": 162, "70789381e": 162, "72903474e": 162, "95669876": 162, "41800591e": 162, "41278190e": 162, "40755789e": 162, "41017232e": 162, "19j": 162, "46241246e": 162, "51465260e": 162, "98463207": 162, "80081617e": 162, "03j": 162, "98463138": 162, "89975906e": 162, "98463069": 162, "99870187e": 162, "98299670": 162, "71319125e": 162, "02j": 162, "98299096": 162, "72306908e": 162, "98298520": 162, "73294686e": 162, "03201290": 162, "39535744e": 162, "03144532": 162, "14880844e": 162, "03082273": 162, "90182487e": 162, "82551740": 162, "23731331e": 162, "01j": 162, "82094046": 162, "29743206e": 162, "81631975": 162, "35721497e": 162, "12370332": 162, "15296909e": 162, "12428451": 162, "09484545e": 162, "12483564": 162, "03669252e": 162, "92476286": 162, "48703460e": 162, "92810503": 162, "43912711e": 162, "93142239": 162, "39104744e": 162, "10043006": 162, "18995646e": 162, "10075250": 162, "58731668e": 162, "10104193": 162, "98450938e": 162, "01051042": 162, "40052904e": 162, "01290481": 162, "34513198e": 162, "01526883": 162, "28960464e": 162, "phase_calibr": 162, "sample_tim": 162, "5e": 162, "callibr": 162, "1383263000": 162, "superterp": 162, "drift": 162, "even_ant_nam": 163, "ant_nam": 163, "lora_second": 164, "lora_nanosecond": 164, "sample_numb": 164, "sampling_frequ": [164, 194, 228], "1st": 164, "januari": 164, "1970": 164, "blocknumb": 164, "samplenumb": 164, "gp": 164, "tbb_h5_filenam": 164, "time_": 164, "time_n": 164, "trace_length_nbin": 164, "repeatedli": 164, "against": [164, 232], "dipole_id": 164, "restricted_station_set": 164, "tbb_directori": 164, "json_directori": 164, "metadata_directori": 164, "krato": 164, "coma": 164, "vol": 164, "astro3": 164, "vhecr": 164, "lora_trigg": 164, "astro7": 164, "kratos_fil": 164, "filepath": 164, "metadat": 164, "ingest": 164, "trace_length": [164, 222], "parse_head": 165, "parse_detector": [165, 233], "fail_on_version_mismatch": 165, "fail_on_minor_version_mismatch": 165, "max_open_fil": 165, "buffer_s": 165, "104857600": 165, "byte": 165, "100mb": 165, "eventid": [165, 176], "event_numb": 165, "add_selector": [166, 167], "get_events_inform": [166, 167], "get_waveform": [166, 167], "get_event_by_index": [166, 167], "temporari": 167, "mattak": 167, "519": 167, "time_offset": 167, "run_table_path": 167, "load_run_t": 167, "run_tabl": 167, "mattak_kwarg": 167, "adher": [167, 186], "root_file_or_fold": 167, "run_nr": 167, "1100": 167, "679": 167, "dirs_fil": 167, "read_calibrated_data": 167, "select_trigg": 167, "select_run": 167, "apply_baseline_correct": 167, "convert_to_voltag": 167, "selector": 167, "run_typ": 167, "run_time_rang": 167, "max_trigger_r": 167, "overwrite_sampling_r": 167, "max_in_mem": 167, "stationxx": 167, "runxxx": 167, "incorp": 167, "convin": 167, "run_tim": 167, "trigger_r": 167, "programm": 167, "interrupt": [167, 238], "messag": [167, 220, 241], "decreas": 167, "fastest": 167, "eventinfo": 167, "trigger_selector": 167, "triggertyp": 167, "runtabl": 167, "suffici": [167, 207], "unconstrain": 167, "backend": 167, "pyroot": 167, "fallback": 167, "runinfo": 167, "dataread": 167, "eventnumb": 167, "read_ev": 167, "triggertim": 167, "indeci": 167, "event_index": 167, "max_ev": 167, "overflow": 167, "wf": 167, "wavefrom": 167, "particluar": 167, "chronolog": 167, "across": [167, 241], "corsika": 169, "convex": 169, "hull": 169, "star": [170, 173, 233], "reuturn": [170, 173], "set_ascending_run_and_event_numb": 171, "__ascending_run_and_event_numb": 171, "bee": 171, "default_id": 171, "ynax": 173, "frequency_window": 174, "n_std": 174, "std": 174, "stricter": 174, "selected_sim": 174, "read_detector": [175, 233], "max_file_s": 176, "1024": [176, 233, 239], "check_for_dupl": 176, "events_per_fil": 176, "mbyte": 176, "writer": 176, "whenev": [176, 220, 229, 232], "fullfil": 176, "version_major": 177, "version_minor": 177, "scan_files_majorversion_minorvers": 177, "rawdata": 180, "fpncorrecteddata": 180, "calibrateddata": 180, "time_interv": 180, "ampoutdata": 180, "random_iter": 180, "fpn": 180, "regardless": 180, "fpnsubdata": 180, "walk": 180, "noiseimporterroot": [181, 182], "noiseimport": [181, 182, 183, 184], "get_noise_st": [181, 186], "seizabl": 183, "basi": [183, 241], "noise_fil": 183, "rnog": [185, 213, 232], "noise_fold": 185, "file_pattern": [185, 186], "match_station_id": 185, "channel_map": [185, 186], "scramble_noise_file_ord": 185, "random_se": [185, 186], "reader_kwarg": 185, "he": [185, 232], "arguement": 185, "max_iter": 186, "draw_noise_statist": 186, "restrict_station_id": 186, "allow_noise_resampl": 186, "baseline_substract": 186, "allowed_trigg": 186, "subdirectori": 186, "suitabl": 186, "thrown": [186, 228], "mean_opt": 186, "get_correlation_array_2d": [189, 191, 192], "get_correlation_for_po": [189, 191, 192], "get_signal_travel_tim": [189, 191, 192], "find_ray_typ": [189, 191], "find_receiving_zenith": [189, 191], "get_correlation_array_3d": [189, 192], "lookup_table_loc": [191, 192], "reconstructor": [191, 192], "lookup": [191, 192], "z_width": 191, "grid_spac": 191, "direction_guess": 191, "use_dnr": 191, "stripe": 191, "strip": 191, "dnr": 191, "themselv": [191, 234], "d_hor": [191, 192], "ray_typ": [191, 192], "ch1": 191, "scenario": 191, "distances_2d": 192, "azimuths_2d": 192, "z_coordinates_2d": 192, "distance_step_3d": 192, "widths_3d": 192, "z_step_3d": 192, "min_antenna_dist": 192, "debug_fold": 192, "dept": 192, "get_antenna_posit": [193, 194], "calculate_time_delai": [193, 194], "get_channel_trace_start_tim": [193, 194], "check_vertical_str": [193, 194], "power_sum": [193, 194], "phase_sign": [193, 194], "phased_trigg": [193, 194], "particip": 194, "1809": 194, "04573": 194, "floatss": 194, "959931089": 194, "714608352": 194, "513801244": 194, "333826648": 194, "164572284": 194, "11022302e": 194, "ref_index": [194, 222], "beam_rol": 194, "throw": 194, "dont": 194, "channel_trace_start_tim": 194, "coh_sum": 194, "num_fram": 194, "phased_trac": 194, "apply_digit": 194, "is_trigg": 194, "met": 194, "simple_phased_threshold": 194, "set_not_trigg": [194, 200, 201], "not_trigg": [194, 200, 201], "start_pulser_posit": 195, "number_coincid": [199, 203], "envelope_trigg": 199, "high_threshold": [200, 201], "low_threshold": [200, 201], "time_coincid": [200, 201, 222], "tt": 200, "triggerd": 200, "triggerd_bin": 200, "triggered_tim": 200, "use_digit": 200, "default_high_low": [200, 201], "n_high_low": 201, "calculat": [201, 202, 204], "default_powerint": 202, "slide": 202, "300k": 203, "273k": 203, "250k": 203, "triggerpath": 203, "rnog_surface_trigger_measur": 203, "default_simple_threshold": 204, "data_to_sim": [205, 242], "vmin": 206, "chi": 206, "loglikelihood": 206, "climb": 206, "uphil": 206, "invert": [206, 207, 232], "hess": 206, "expens": 206, "robust": 206, "contour": 206, "hessian": 206, "dembinski": 206, "kit": 206, "edu": [206, 213], "cov": 206, "invcov": 206, "linalg": 206, "inv": 206, "chisquar": 206, "par": 206, "grad": 206, "negloglik": 206, "rcond": [206, 207], "svd": [206, 207], "singular": [206, 207], "reconstuct": 206, "foward": 206, "maxim": 206, "debug_plotpath": 206, "use_mc_direct": [206, 207], "frequeci": 206, "symmetr": [207, 222, 234], "unfold": [207, 242], "019": 207, "6971": 207, "furthermor": [207, 241], "force_polar": 207, "deconvolut": 208, "analytic_puls": 209, "amp_from_energi": [209, 210], "get_analytic_pulse_freq": [209, 210], "get_analytic_puls": [209, 210], "cr_flux": 209, "get_measured_data": [209, 212], "get_interpolated_cr_flux": [209, 212], "get_analytic_cr_flux": [209, 212], "get_flux_per_energy_bin": [209, 212], "get_cr_event_r": [209, 212], "plot_measured_spectrum": [209, 212], "dataserv": 209, "get_available_dataservers_by_responsetim": [209, 213], "download_from_dataserv": [209, 213], "tunnel_diod": [209, 214], "geometryutil": 209, "get_time_delay_from_direct": [209, 216], "rot_z": [209, 216], "rot_x": [209, 216], "rot_i": [209, 216], "get_efield_in_spherical_coord": [209, 216], "get_fresnel_angl": [209, 216], "get_fresnel_t_p": [209, 216], "get_fresnel_t_": [209, 216], "get_fresnel_r_p": [209, 216], "get_fresnel_r_": [209, 216], "get_refractive_index": [209, 217], "get_sign": [209, 218], "interfere_traces_interpol": [209, 218], "get_time_shift": [209, 218], "fit_axi": [209, 218], "get_intersection_between_line_and_plan": [209, 218], "io_util": 209, "read_pickl": [209, 219], "addfilt": [209, 220], "addhandl": [209, 220, 241], "callhandl": [209, 220], "fatal": [209, 220], "findcal": [209, 220], "getchild": [209, 220], "geteffectivelevel": [209, 220], "hashandl": [209, 220], "isenabledfor": [209, 220], "makerecord": [209, 220], "removefilt": [209, 220], "removehandl": [209, 220], "setlevel": [209, 220, 241], "addlogginglevel": [209, 220], "get_fancy_formatt": [209, 220, 241], "set_general_log_level": [209, 220, 241], "mro": [209, 221], "rolled_sum_rol": [209, 222], "rolling_indic": [209, 222], "rolled_sum_tak": [209, 222], "rolled_sum_sl": [209, 222], "thermalnoisegener": [209, 222], "generate_nois": [209, 222], "thermalnoisegeneratorphasedarrai": [209, 222], "generate_noise2": [209, 222], "signal_process": 209, "half_hann_window": [209, 224], "set_template_directori": [209, 225], "get_cr_ref_templ": [209, 225], "get_set_of_cr_templates_ful": [209, 225], "get_set_of_cr_templ": [209, 225], "get_set_of_nu_templ": [209, 225], "get_nu_ref_templ": [209, 225], "analyze_tim": [209, 226], "tracewindow": 209, "get_window_around_maximum": [209, 227], "get_efield_antenna_factor": [209, 228], "get_channel_voltage_from_efield": [209, 228], "get_electric_field_energy_flu": [209, 228], "upsampling_fir": [209, 228], "butterworth_filter_trac": [209, 228], "apply_butterworth": [209, 228], "delay_trac": [209, 228], "get_git_commit_hash": [209, 230], "get_nuradiomc_commit_hash": [209, 230], "get_nuradioreco_commit_hash": [209, 230], "amp_p0": 210, "amp_p1": 210, "phase_p0": 210, "n_samples_tim": 210, "phase_p1": 210, "quadratic_term": 210, "quadratic_term_offset": 210, "data_auger_19": 212, "data_ta_21": 212, "err_up": 212, "err_low": 212, "log10_energi": 212, "auger_19": 212, "auger_17": 212, "ta_19": 212, "log10e_min": 212, "log10e_max": 212, "log10energi": 212, "a_eff": 212, "eventr": 212, "zenith_angl": 212, "solid_angl": 212, "base_unit": 212, "attent": [212, 239], "yr": 212, "zeuthen": 213, "uchicago": 213, "remote_path": 213, "target_path": 213, "unpack_tarbal": 213, "try_ord": 213, "diodd": 214, "lowpass": 214, "resist": 214, "trace_after_tunnel_diod": 214, "999999999999999e": 214, "n_tri": 214, "achiv": 215, "omit": [215, 243], "imped": 215, "remark": 215, "spectral": 215, "contrast": 215, "num_sampl": 215, "forward": 215, "conserv": 215, "000293": [216, 217], "zenith_incom": 216, "n_2": 216, "n_1": 216, "snell": 216, "transmit": 216, "defind": 216, "land": 217, "n_air": 217, "sum_trac": 218, "tstep": 218, "target_po": 218, "tab": 218, "traget": 218, "stamp": 218, "refractivityt": 218, "avg": 218, "tshift": 218, "sec": 218, "corex": 218, "corei": 218, "intersetct": 218, "flatten": 218, "plane_norm": 218, "plane_anchor": 218, "line_direct": 218, "line_anchor": 218, "betweem": 218, "rosettacod": 218, "find_the_intersection_of_a_line_with_a_plan": 218, "psi": 218, "latin1": 219, "suppos": 219, "hdlr": 220, "hierarchi": [220, 238], "sy": 220, "stderr": 220, "msg": 220, "exc_info": 220, "houston": 220, "disast": 220, "thorni": 220, "loggabl": 220, "veto": 220, "stack_info": 220, "stack": 220, "caller": 220, "descend": 220, "getlogg": [220, 241], "abc": 220, "ghi": 220, "unpickl": 220, "socket": 220, "mysteri": 220, "fn": 220, "lno": 220, "sinfo": 220, "factori": 220, "subclass": 220, "logrecord": 220, "rootlogg": 220, "levelnam": 220, "levelnum": 220, "methodnam": 220, "comprehens": 220, "getloggerclass": 220, "clobber": 220, "attributeerror": 220, "answer": 220, "__call__": [221, 243], "sumtr": 222, "n_major": 222, "time_coincidence_major": 222, "noise_typ": 222, "keep_full_band": 222, "window_length": 222, "main_low_angl": 222, "039338088856046": 222, "main_high_angl": 222, "n_beam": 222, "220": 222, "calcuat": 222, "59": 222, "lowest": [222, 232, 241], "highest": [222, 232], "phasing_mod": 222, "trigger_mod": 222, "binned_sum": 222, "half_perc": 224, "hann_window_length": 224, "140": 225, "module_list": 226, "t_tot": 226, "sustract": 227, "left_tim": 227, "right_tim": 227, "return_spectrum": 228, "electric_field_trac": 228, "signal_window_mask": 228, "noise_window_mask": 228, "trace_u": 228, "trace_v": 228, "squeez": 228, "choic": [228, 229], "simpli": [228, 241], "efield_trace_vxb_vxvxb": 228, "transform_to_vxb_vxvxb": 228, "transform_from_onsky_to_ground": 228, "original_sampling_frequ": 228, "ntap": 228, "impuls": 228, "tap": 228, "upsampled_trac": 228, "cutoff": 228, "filtered_trac": 228, "filtered_spectrum": 228, "delayed_sampl": 228, "crop": 228, "delayed_trac": 228, "mm": [229, 243], "eplu": 229, "substanc": 229, "mole": 229, "lumin": 229, "intens": 229, "candela": 229, "si": 229, "esi": 229, "coulomb": 229, "offlin": [229, 233], "pierr": 229, "collabor": 229, "geant4": 229, "demand": 232, "sha1sum": 232, "hashlib": 232, "send": [232, 233], "christian": 232, "1903": 232, "07023": 232, "appendix": 232, "head": 232, "inf": 232, "imprecis": 232, "embed": 232, "10cm": 232, "3m": 232, "nose": 232, "58m": 232, "100m": 232, "200m": 232, "52cm": 232, "260cm": 232, "270mm": 232, "xf": 232, "inch": 232, "borehol": 232, "cubic": 232, "4200": 232, "halfwai": 232, "wall": 232, "diamet": 232, "constraint": 232, "574": 232, "ska": 232, "skala": 232, "350": 232, "ieeexplor": 232, "ieee": 232, "abstract": 232, "7297231": 232, "detector_tim": [233, 235], "lifetim": 233, "took": 233, "decomiss": 233, "compost": 233, "situat": 233, "varieti": 233, "ship": 233, "cumbersom": 233, "prone": 233, "declar": 233, "substitut": 233, "ant_com": 233, "rnog_vpol_4inch_center_n1": 233, "73": 233, "likewis": 233, "therebi": 233, "_event": 233, "event_read": [233, 238], "event_writ": [233, 238], "detector_brows": 233, "web": [233, 237], "127": [233, 237], "8080": [233, 237], "dropdown": 233, "position_x": 234, "position_i": 234, "position_z": 234, "rod": 234, "west": 234, "simplic": 234, "sidewai": 234, "tradit": 234, "upright": 234, "my_detector": 234, "deployment_tim": 234, "aka": 234, "accumul": 234, "euler": 234, "un": 234, "intuit": [234, 235], "everydai": 234, "intrins": 234, "trigger_adc_nbit": 234, "trigger_adc_reference_voltag": 234, "trigger_adc_sampling_frequ": 234, "context": 235, "mainten": 235, "bring": 235, "immedi": 235, "imagin": 235, "poor": 235, "dedic": [235, 238, 241], "datatim": 235, "reanalyz": 235, "todai": 235, "earlier": 235, "organ": [235, 238], "station_rnog": 235, "schemat": 235, "_x": 235, "200mhz": 235, "hopefulli": 235, "implemet": 236, "eventbrows": 237, "ly": 237, "webbrows": 237, "brows": 237, "press": 237, "ctrl": 237, "inotifi": 237, "reload": 237, "debugg": 237, "pin": 237, "224": 237, "474": 237, "503": 237, "favorit": 237, "nuradioview": 237, "simpler": 238, "obviou": 238, "onto": 238, "streamlin": 238, "nuradioreco_io": 238, "event_1": 238, "event_2": 238, "stnp": 238, "hist": 238, "children": 238, "zenith_uncertainti": 238, "respectr": 238, "despit": 238, "hybriddetector": 238, "divers": 238, "impract": 238, "impement": 238, "slot": 238, "pai": 239, "horitont": 239, "reliabl": 239, "ior": 239, "cherenkov_angl": 239, "arcco": 239, "efield_spec": 239, "e18": 239, "efield_templ": 239, "exactl": 239, "influenc": 239, "rougher": 239, "struggl": 239, "colormap": 239, "serious": 239, "freez": 239, "arrang": 241, "deem": 241, "cleanup": 241, "clash": 241, "behaviour": 241, "report": 241, "logging_level": 241, "my_logg": 241, "regard": 241, "prioriti": 241, "diagram": 241, "filehandl": 241, "f_handler": 241, "setformatt": 241, "edit": 241, "parent_logg": 241, "mess": 241, "transfer": 242, "s12": 242, "consequ": 242, "behavior": [242, 243], "rollov": 242, "128n": 242, "artifact": 242, "anywher": 242, "astopi": 242, "caveat": 242, "move": 242, "pure": 242, "life": 243, "132": 243, "milli": 243, "2f": 243, "stai": 243, "accomplish": 243, "superced": 243}, "objects": {"NuRadioMC": [[5, 0, 0, "-", "EvtGen"], [18, 0, 0, "-", "SignalGen"], [25, 0, 0, "-", "SignalProp"], [31, 0, 0, "-", "simulation"], [35, 0, 0, "-", "utilities"]], "NuRadioMC.EvtGen": [[6, 0, 0, "-", "NuRadioMCtoAraSim"], [7, 0, 0, "-", "NuRadioProposal"], [8, 0, 0, "-", "create_tau_tab"], [9, 0, 0, "-", "generate_cylinder"], [10, 0, 0, "-", "generate_unforced"], [11, 0, 0, "-", "generator"], [12, 0, 0, "-", "generator_ASCII"], [13, 0, 0, "-", "generator_skeleton"], [14, 0, 0, "-", "hdf5_to_ASCII"], [15, 0, 0, "-", "proposal_table_manager"], [16, 0, 0, "-", "readARAEventList"], [17, 0, 0, "-", "readEventList_ASCII"]], "NuRadioMC.EvtGen.NuRadioProposal": [[7, 1, 1, "", "ProposalFunctions"], [7, 1, 1, "", "SecondaryProperties"], [7, 3, 1, "", "is_em_primary"], [7, 3, 1, "", "is_had_primary"], [7, 3, 1, "", "is_shower_primary"], [7, 3, 1, "", "particle_code"]], "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions": [[7, 2, 1, "", "get_decays"], [7, 2, 1, "", "get_secondaries_array"]], "NuRadioMC.EvtGen.generate_unforced": [[10, 3, 1, "", "generate_eventlist_cylinder"]], "NuRadioMC.EvtGen.generator": [[11, 3, 1, "", "generate_eventlist_cylinder"], [11, 3, 1, "", "generate_surface_muons"], [11, 3, 1, "", "generate_vertex_positions"], [11, 3, 1, "", "get_energies"], [11, 3, 1, "", "get_energy_from_flux"], [11, 3, 1, "", "get_intersection_volume_neutrino"], [11, 3, 1, "", "get_product_position_time"], [11, 3, 1, "", "get_tau_95_length"], [11, 3, 1, "", "ice_cube_nu_fit"], [11, 3, 1, "", "ice_cube_nu_fit_2022"], [11, 3, 1, "", "intersection_box_ray"], [11, 3, 1, "", "is_in_fiducial_volume"], [11, 3, 1, "", "load_input_hdf5"], [11, 3, 1, "", "mask_arrival_azimuth"], [11, 3, 1, "", "primary_energy_from_deposited"], [11, 3, 1, "", "set_volume_attributes"], [11, 3, 1, "", "write_events_to_hdf5"]], "NuRadioMC.EvtGen.generator_ASCII": [[12, 3, 1, "", "generate_eventlist"]], "NuRadioMC.EvtGen.generator_skeleton": [[13, 3, 1, "", "generate_my_events"]], "NuRadioMC.EvtGen.proposal_table_manager": [[15, 3, 1, "", "download_proposal_tables"], [15, 3, 1, "", "get_compiler"], [15, 3, 1, "", "produce_proposal_tables"], [15, 3, 1, "", "produce_proposal_tables_tarball"]], "NuRadioMC.EvtGen.readARAEventList": [[16, 3, 1, "", "convert_to_hdf5"], [16, 3, 1, "", "read_ARA_eventlist"]], "NuRadioMC.EvtGen.readEventList_ASCII": [[17, 3, 1, "", "read_eventlist"]], "NuRadioMC.SignalGen": [[19, 0, 0, "-", "ARZ"], [21, 0, 0, "-", "HCRB2017"], [22, 0, 0, "-", "askaryan"], [23, 0, 0, "-", "emitter"], [24, 0, 0, "-", "parametrizations"]], "NuRadioMC.SignalGen.ARZ": [[20, 0, 0, "-", "ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ": [[20, 1, 1, "", "ARZ"], [20, 1, 1, "", "ARZ_tabulated"], [20, 3, 1, "", "get_vector_potential"], [20, 3, 1, "", "get_vector_potential_numba"], [20, 3, 1, "", "theta_to_thetaprime"], [20, 3, 1, "", "thetaprime_to_theta"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ": [[20, 2, 1, "", "em_fraction"], [20, 2, 1, "", "get_last_shower_profile_id"], [20, 2, 1, "", "get_shower_profile"], [20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "get_vector_potential"], [20, 2, 1, "", "get_vector_potential_fast"], [20, 2, 1, "", "set_interpolation_factor"], [20, 2, 1, "", "set_interpolation_factor2"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated": [[20, 2, 1, "", "get_time_trace"], [20, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.HCRB2017": [[21, 3, 1, "", "gauss"], [21, 3, 1, "", "get_N_AskDepthA"], [21, 3, 1, "", "get_frequency_spectrum"], [21, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.askaryan": [[22, 3, 1, "", "get_frequency_spectrum"], [22, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.emitter": [[23, 3, 1, "", "get_frequency_spectrum"], [23, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.parametrizations": [[24, 3, 1, "", "get_parametrizations"], [24, 3, 1, "", "get_time_trace"], [24, 4, 1, "", "logger"]], "NuRadioMC.SignalProp": [[26, 0, 0, "-", "analyticraytracing"], [27, 0, 0, "-", "directRayTracing"], [28, 0, 0, "-", "propagation"], [29, 0, 0, "-", "propagation_base_class"], [30, 0, 0, "-", "radioproparaytracing"]], "NuRadioMC.SignalProp.analyticraytracing": [[26, 3, 1, "", "get_C0_from_log"], [26, 3, 1, "", "get_delta_y"], [26, 3, 1, "", "get_gamma"], [26, 3, 1, "", "get_n_steps"], [26, 3, 1, "", "get_reflection_point"], [26, 3, 1, "", "get_segments"], [26, 3, 1, "", "get_turning_point"], [26, 3, 1, "", "get_y"], [26, 3, 1, "", "get_y_diff"], [26, 3, 1, "", "get_y_turn"], [26, 3, 1, "", "get_y_with_z_mirror"], [26, 3, 1, "", "get_z_deep"], [26, 3, 1, "", "get_z_unmirrored"], [26, 3, 1, "", "n"], [26, 3, 1, "", "obj_delta_y_square"], [26, 1, 1, "", "ray_tracing"], [26, 1, 1, "", "ray_tracing_2D"], [26, 4, 1, "", "speed_of_light"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing": [[26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_effective_index_birefringence"], [26, 2, 1, "", "get_focusing"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_path_properties_birefringence"], [26, 2, 1, "", "get_polarization_birefringence"], [26, 2, 1, "", "get_polarization_birefringence_simple"], [26, 2, 1, "", "get_pulse_propagation_birefringence"], [26, 2, 1, "", "get_ray_path"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "on_sky_birefringence"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_solution"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D": [[26, 2, 1, "", "angular_diff"], [26, 2, 1, "", "apply_propagation_effects"], [26, 2, 1, "", "determine_solution_type"], [26, 2, 1, "", "ds"], [26, 2, 1, "", "find_solutions"], [26, 2, 1, "", "get_C_0_from_angle"], [26, 2, 1, "", "get_C_1"], [26, 2, 1, "", "get_angle"], [26, 2, 1, "", "get_angle_from_C_0"], [26, 2, 1, "", "get_angle_from_logC_0"], [26, 2, 1, "", "get_attenuation"], [26, 2, 1, "", "get_attenuation_along_path"], [26, 2, 1, "", "get_c"], [26, 2, 1, "", "get_config"], [26, 2, 1, "", "get_launch_angle"], [26, 2, 1, "", "get_launch_vector"], [26, 2, 1, "", "get_number_of_raytracing_solutions"], [26, 2, 1, "", "get_number_of_solutions"], [26, 2, 1, "", "get_output_parameters"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_path_length"], [26, 2, 1, "", "get_path_length_analytic"], [26, 2, 1, "", "get_path_reflections"], [26, 2, 1, "", "get_path_segments"], [26, 2, 1, "", "get_raytracing_output"], [26, 2, 1, "", "get_receive_angle"], [26, 2, 1, "", "get_receive_vector"], [26, 2, 1, "", "get_reflection_angle"], [26, 2, 1, "", "get_results"], [26, 2, 1, "", "get_solution_type"], [26, 2, 1, "", "get_surf_skim_angle"], [26, 2, 1, "", "get_surface_pulse"], [26, 2, 1, "", "get_tof_for_straight_line"], [26, 2, 1, "", "get_travel_time"], [26, 2, 1, "", "get_travel_time_analytic"], [26, 2, 1, "", "get_z_from_n"], [26, 2, 1, "", "get_z_mirrored"], [26, 2, 1, "", "has_solution"], [26, 2, 1, "", "is_in_refraction_zone"], [26, 2, 1, "", "obj_delta_y"], [26, 2, 1, "", "plot_result"], [26, 2, 1, "", "reset_solutions"], [26, 2, 1, "", "set_config"], [26, 2, 1, "", "set_start_and_end_point"], [26, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.directRayTracing": [[27, 1, 1, "", "direct_ray_tracing"]], "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing": [[27, 2, 1, "", "apply_propagation_effects"], [27, 2, 1, "", "find_solutions"], [27, 2, 1, "", "get_attenuation"], [27, 2, 1, "", "get_config"], [27, 2, 1, "", "get_launch_vector"], [27, 2, 1, "", "get_number_of_raytracing_solutions"], [27, 2, 1, "", "get_number_of_solutions"], [27, 2, 1, "", "get_output_parameters"], [27, 2, 1, "", "get_path"], [27, 2, 1, "", "get_path_length"], [27, 2, 1, "", "get_raytracing_output"], [27, 2, 1, "", "get_receive_vector"], [27, 2, 1, "", "get_reflection_angle"], [27, 2, 1, "", "get_results"], [27, 2, 1, "", "get_solution_type"], [27, 2, 1, "", "get_travel_time"], [27, 2, 1, "", "has_solution"], [27, 2, 1, "", "reset_solutions"], [27, 2, 1, "", "set_config"], [27, 2, 1, "", "set_start_and_end_point"], [27, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.propagation": [[28, 3, 1, "", "get_propagation_module"]], "NuRadioMC.SignalProp.propagation_base_class": [[29, 1, 1, "", "ray_tracing_base"]], "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base": [[29, 2, 1, "", "apply_propagation_effects"], [29, 2, 1, "", "find_solutions"], [29, 2, 1, "", "get_attenuation"], [29, 2, 1, "", "get_config"], [29, 2, 1, "", "get_launch_vector"], [29, 2, 1, "", "get_number_of_raytracing_solutions"], [29, 2, 1, "", "get_number_of_solutions"], [29, 2, 1, "", "get_output_parameters"], [29, 2, 1, "", "get_path"], [29, 2, 1, "", "get_path_length"], [29, 2, 1, "", "get_raytracing_output"], [29, 2, 1, "", "get_receive_vector"], [29, 2, 1, "", "get_reflection_angle"], [29, 2, 1, "", "get_results"], [29, 2, 1, "", "get_solution_type"], [29, 2, 1, "", "get_travel_time"], [29, 2, 1, "", "has_solution"], [29, 2, 1, "", "reset_solutions"], [29, 2, 1, "", "set_config"], [29, 2, 1, "", "set_start_and_end_point"], [29, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.radioproparaytracing": [[30, 1, 1, "", "radiopropa_ray_tracing"]], "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing": [[30, 2, 1, "", "activate_auto_step_size"], [30, 2, 1, "", "apply_propagation_effects"], [30, 2, 1, "", "deactivate_auto_step_size"], [30, 2, 1, "", "delta_theta_bottom"], [30, 2, 1, "", "delta_theta_direct"], [30, 2, 1, "", "delta_theta_reflective"], [30, 2, 1, "", "find_solutions"], [30, 2, 1, "", "get_attenuation"], [30, 2, 1, "", "get_config"], [30, 2, 1, "", "get_correction_path_length"], [30, 2, 1, "", "get_correction_travel_time"], [30, 2, 1, "", "get_focusing"], [30, 2, 1, "", "get_frequencies_for_attenuation"], [30, 2, 1, "", "get_launch_vector"], [30, 2, 1, "", "get_launch_vector_analytic"], [30, 2, 1, "", "get_number_of_raytracing_solutions"], [30, 2, 1, "", "get_number_of_solutions"], [30, 2, 1, "", "get_output_parameters"], [30, 2, 1, "", "get_path"], [30, 2, 1, "", "get_path_candidate"], [30, 2, 1, "", "get_path_length"], [30, 2, 1, "", "get_raytracing_output"], [30, 2, 1, "", "get_receive_vector"], [30, 2, 1, "", "get_reflection_angle"], [30, 2, 1, "", "get_results"], [30, 2, 1, "", "get_solution_type"], [30, 2, 1, "", "get_travel_time"], [30, 2, 1, "", "has_solution"], [30, 2, 1, "", "raytracer_birefringence"], [30, 2, 1, "", "raytracer_iterative"], [30, 2, 1, "", "raytracer_minimizer"], [30, 2, 1, "", "reset_solutions"], [30, 2, 1, "", "set_config"], [30, 2, 1, "", "set_cut_viewing_angle"], [30, 2, 1, "", "set_iterative_sphere_sizes"], [30, 2, 1, "", "set_iterative_step_sizes"], [30, 2, 1, "", "set_maximum_trajectory_length"], [30, 2, 1, "", "set_minimizer_tolerance"], [30, 2, 1, "", "set_shower_axis"], [30, 2, 1, "", "set_solutions"], [30, 2, 1, "", "set_start_and_end_point"], [30, 2, 1, "", "use_optional_function"]], "NuRadioMC.simulation": [[32, 0, 0, "-", "output_writer_hdf5"], [33, 0, 0, "-", "simulation"], [34, 0, 0, "-", "time_logger"]], "NuRadioMC.simulation.output_writer_hdf5": [[32, 1, 1, "", "outputWriterHDF5"]], "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5": [[32, 2, 1, "", "add_event_group"], [32, 2, 1, "", "calculate_Veff"], [32, 2, 1, "", "write_empty_output_file"], [32, 2, 1, "", "write_output_file"]], "NuRadioMC.simulation.simulation": [[33, 3, 1, "", "apply_det_response"], [33, 3, 1, "", "apply_det_response_sim"], [33, 3, 1, "", "build_NuRadioEvents_from_hdf5"], [33, 3, 1, "", "build_dummy_event"], [33, 3, 1, "", "calculate_particle_weight"], [33, 3, 1, "", "calculate_polarization_vector"], [33, 3, 1, "", "calculate_sim_efield"], [33, 3, 1, "", "calculate_sim_efield_for_emitter"], [33, 3, 1, "", "get_config"], [33, 3, 1, "", "group_into_events"], [33, 3, 1, "", "increase_signal"], [33, 3, 1, "", "merge_config"], [33, 3, 1, "", "read_input_hdf5"], [33, 3, 1, "", "remove_all_traces"], [33, 1, 1, "", "simulation"]], "NuRadioMC.simulation.simulation.simulation": [[33, 2, 1, "", "get_Vrms"], [33, 2, 1, "", "get_bandwidth"], [33, 2, 1, "", "get_sampling_rate"], [33, 5, 1, "", "integrated_channel_response"], [33, 2, 1, "", "run"]], "NuRadioMC.simulation.time_logger": [[34, 3, 1, "", "pretty_time_delta"], [34, 1, 1, "", "timeLogger"]], "NuRadioMC.simulation.time_logger.timeLogger": [[34, 2, 1, "", "reset_times"], [34, 2, 1, "", "show_time"], [34, 2, 1, "", "start_time"], [34, 2, 1, "", "stop_time"]], "NuRadioMC.utilities": [[36, 0, 0, "-", "Veff"], [37, 0, 0, "-", "attenuation"], [38, 0, 0, "-", "cross_sections"], [39, 0, 0, "-", "dump_hdf5"], [40, 0, 0, "-", "earth_attenuation"], [41, 0, 0, "-", "fluxes"], [42, 0, 0, "-", "inelasticities"], [43, 0, 0, "-", "medium"], [44, 0, 0, "-", "medium_base"], [45, 0, 0, "-", "merge_hdf5"], [46, 0, 0, "-", "muon_flux"], [47, 0, 0, "-", "plotting"], [48, 0, 0, "-", "runner"], [49, 0, 0, "-", "runner_example"], [50, 0, 0, "-", "split_hdf5"]], "NuRadioMC.utilities.Veff": [[36, 3, 1, "", "FC_limits"], [36, 3, 1, "", "export"], [36, 3, 1, "", "get_Veff_Aeff"], [36, 3, 1, "", "get_Veff_Aeff_array"], [36, 3, 1, "", "get_Veff_Aeff_single"], [36, 3, 1, "", "get_Veff_Aeff_single_wrapper"], [36, 3, 1, "", "get_Veff_water_equivalent"], [36, 3, 1, "", "get_index"], [36, 3, 1, "", "get_veff_output"], [36, 3, 1, "", "remove_duplicate_triggers"]], "NuRadioMC.utilities.attenuation": [[37, 3, 1, "", "fit_GL1"], [37, 3, 1, "", "get_attenuation_length"], [37, 3, 1, "", "get_temperature"]], "NuRadioMC.utilities.cross_sections": [[38, 3, 1, "", "csms"], [38, 3, 1, "", "get_interaction_length"], [38, 3, 1, "", "get_nu_cross_section"], [38, 3, 1, "", "param"]], "NuRadioMC.utilities.dump_hdf5": [[39, 3, 1, "", "dump"]], "NuRadioMC.utilities.earth_attenuation": [[40, 1, 1, "", "CoreMantleCrustModel"], [40, 1, 1, "", "PREM"], [40, 3, 1, "", "get_core_mantle_crust_weight"], [40, 3, 1, "", "get_simple_weight"], [40, 3, 1, "", "get_weight"]], "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel": [[40, 6, 1, "", "densities"], [40, 2, 1, "", "density"], [40, 6, 1, "", "earth_radius"], [40, 6, 1, "", "radii"], [40, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.earth_attenuation.PREM": [[40, 6, 1, "", "densities"], [40, 2, 1, "", "density"], [40, 6, 1, "", "earth_radius"], [40, 6, 1, "", "radii"], [40, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.fluxes": [[41, 3, 1, "", "get_exposure"], [41, 3, 1, "", "get_fluence_limit"], [41, 3, 1, "", "get_integrated_exposure"], [41, 3, 1, "", "get_limit_e1_flux"], [41, 3, 1, "", "get_limit_e2_flux"], [41, 3, 1, "", "get_limit_flux"], [41, 3, 1, "", "get_limit_from_aeff"], [41, 3, 1, "", "get_number_of_events_for_flux"]], "NuRadioMC.utilities.inelasticities": [[42, 3, 1, "", "get_ccnc"], [42, 3, 1, "", "get_neutrino_inelasticity"], [42, 3, 1, "", "inelasticity_tau_decay"], [42, 3, 1, "", "random_tau_branch"], [42, 3, 1, "", "rejection_sampling"]], "NuRadioMC.utilities.medium": [[43, 1, 1, "", "ARA_2022"], [43, 1, 1, "", "ARAsim_southpole"], [43, 1, 1, "", "birefringence_medium"], [43, 3, 1, "", "get_ice_model"], [43, 1, 1, "", "greenland_firn"], [43, 1, 1, "", "greenland_perturbation"], [43, 1, 1, "", "greenland_simple"], [43, 1, 1, "", "mooresbay_simple"], [43, 1, 1, "", "mooresbay_simple_2"], [43, 1, 1, "", "southpole_2015"], [43, 1, 1, "", "southpole_simple"], [43, 1, 1, "", "uniform_ice"]], "NuRadioMC.utilities.medium.ARA_2022": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.ARAsim_southpole": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.birefringence_medium": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_birefringence_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_firn": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_perturbation": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_simple": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple_2": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_2015": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_simple": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.uniform_ice": [[43, 2, 1, "", "add_reflective_bottom"], [43, 2, 1, "", "get_average_index_of_refraction"], [43, 2, 1, "", "get_gradient_of_index_of_refraction"], [43, 2, 1, "", "get_ice_model_radiopropa"], [43, 2, 1, "", "get_index_of_refraction"], [43, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base": [[44, 1, 1, "", "IceModel"], [44, 1, 1, "", "IceModelBirefringence"], [44, 1, 1, "", "IceModelSimple"], [44, 1, 1, "", "RadioPropaIceWrapper"], [44, 1, 1, "", "ScalarFieldBuilder"]], "NuRadioMC.utilities.medium_base.IceModel": [[44, 2, 1, "", "add_reflective_bottom"], [44, 2, 1, "", "get_average_index_of_refraction"], [44, 2, 1, "", "get_gradient_of_index_of_refraction"], [44, 2, 1, "", "get_ice_model_radiopropa"], [44, 2, 1, "", "get_index_of_refraction"], [44, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelBirefringence": [[44, 2, 1, "", "add_reflective_bottom"], [44, 2, 1, "", "get_average_index_of_refraction"], [44, 2, 1, "", "get_birefringence_index_of_refraction"], [44, 2, 1, "", "get_gradient_of_index_of_refraction"], [44, 2, 1, "", "get_ice_model_radiopropa"], [44, 2, 1, "", "get_index_of_refraction"], [44, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelSimple": [[44, 2, 1, "", "add_reflective_bottom"], [44, 2, 1, "", "get_average_index_of_refraction"], [44, 2, 1, "", "get_gradient_of_index_of_refraction"], [44, 2, 1, "", "get_ice_model_radiopropa"], [44, 2, 1, "", "get_index_of_refraction"], [44, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper": [[44, 2, 1, "", "add_module"], [44, 2, 1, "", "get_module"], [44, 2, 1, "", "get_modules"], [44, 2, 1, "", "get_scalar_field"], [44, 2, 1, "", "remove_module"], [44, 2, 1, "", "replace_module"]], "NuRadioMC.utilities.medium_base.ScalarFieldBuilder": [[44, 2, 1, "", "getGradient"], [44, 2, 1, "", "getValue"]], "NuRadioMC.utilities.merge_hdf5": [[45, 3, 1, "", "merge2"]], "NuRadioMC.utilities.muon_flux": [[46, 1, 1, "", "MuonFlux"]], "NuRadioMC.utilities.muon_flux.MuonFlux": [[46, 2, 1, "", "get_e_grid"], [46, 2, 1, "", "get_int_angle_mu_flux_buffered"], [46, 2, 1, "", "get_interp_angle_mu_flux"], [46, 2, 1, "", "get_mu_flux"]], "NuRadioMC.utilities.plotting": [[47, 3, 1, "", "plot_vertex_distribution"]], "NuRadioMC.utilities.runner": [[48, 1, 1, "", "NuRadioMCRunner"]], "NuRadioMC.utilities.runner.NuRadioMCRunner": [[48, 2, 1, "", "get_outputfilename"], [48, 2, 1, "", "run"]], "NuRadioMC.utilities.runner_example": [[49, 3, 1, "", "task"]], "NuRadioMC.utilities.split_hdf5": [[50, 3, 1, "", "split_hdf5_input_file"]], "NuRadioReco": [[66, 0, 0, "-", "detector"], [90, 0, 0, "-", "framework"], [109, 0, 0, "-", "modules"], [209, 0, 0, "-", "utilities"]], "NuRadioReco.detector": [[67, 0, 0, "-", "ARA"], [69, 0, 0, "-", "ARIANNA"], [72, 0, 0, "-", "LOFAR"], [73, 0, 0, "-", "RNO_G"], [78, 0, 0, "-", "amp"], [79, 0, 0, "-", "antennapattern"], [80, 0, 0, "-", "detector"], [81, 0, 0, "-", "detector_base"], [82, 0, 0, "-", "detector_sql"], [83, 0, 0, "-", "detector_sys_uncertainties"], [84, 0, 0, "-", "filterresponse"], [85, 0, 0, "-", "generic_detector"], [86, 0, 0, "-", "response"], [87, 0, 0, "-", "sql_to_json"], [88, 0, 0, "-", "test_detector_db"], [89, 0, 0, "-", "visualize_detector"]], "NuRadioReco.detector.ARA": [[68, 0, 0, "-", "analog_components"]], "NuRadioReco.detector.ARA.analog_components": [[68, 3, 1, "", "get_system_response"], [68, 3, 1, "", "load_system_response"]], "NuRadioReco.detector.ARIANNA": [[70, 0, 0, "-", "analog_components"], [71, 0, 0, "-", "preprocessAmpResponses"]], "NuRadioReco.detector.ARIANNA.analog_components": [[70, 3, 1, "", "get_amplifier_response"], [70, 3, 1, "", "get_available_amplifiers"], [70, 3, 1, "", "get_cable_response"], [70, 3, 1, "", "get_cable_response_parametrized"], [70, 3, 1, "", "load_amp_measurement"], [70, 3, 1, "", "load_amplifier_response"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses": [[71, 3, 1, "", "preprocess_300Amp"], [71, 3, 1, "", "save_preprocessed_Amps"]], "NuRadioReco.detector.RNO_G": [[74, 0, 0, "-", "analog_components"], [75, 0, 0, "-", "db_mongo_read"], [76, 0, 0, "-", "db_mongo_write"], [77, 0, 0, "-", "rnog_detector"]], "NuRadioReco.detector.RNO_G.analog_components": [[74, 3, 1, "", "get_available_amplifiers"], [74, 3, 1, "", "load_amp_response"]], "NuRadioReco.detector.RNO_G.db_mongo_read": [[75, 1, 1, "", "Database"], [75, 3, 1, "", "dictionarize_nested_lists"], [75, 3, 1, "", "dictionarize_nested_lists_as_tuples"]], "NuRadioReco.detector.RNO_G.db_mongo_read.Database": [[75, 2, 1, "", "find_primary_measurement"], [75, 2, 1, "", "get_all_available_signal_chain_configs"], [75, 2, 1, "", "get_channel_signal_chain"], [75, 2, 1, "", "get_channel_signal_chain_measurement"], [75, 2, 1, "", "get_collection_information"], [75, 2, 1, "", "get_collection_names"], [75, 2, 1, "", "get_complete_channel_information"], [75, 2, 1, "", "get_complete_device_information"], [75, 2, 1, "", "get_complete_station_information"], [75, 2, 1, "", "get_component_data"], [75, 2, 1, "", "get_database_time"], [75, 2, 1, "", "get_detector_time"], [75, 2, 1, "", "get_general_channel_information"], [75, 2, 1, "", "get_general_device_information"], [75, 2, 1, "", "get_general_station_information"], [75, 2, 1, "", "get_identifier"], [75, 2, 1, "", "get_object_names"], [75, 2, 1, "", "get_position"], [75, 2, 1, "", "get_quantity_names"], [75, 2, 1, "", "get_station_ids"], [75, 2, 1, "", "load_board_information"], [75, 2, 1, "", "query_modification_timestamps_per_station"], [75, 2, 1, "", "set_database_time"], [75, 2, 1, "", "set_detector_time"]], "NuRadioReco.detector.RNO_G.db_mongo_write": [[76, 1, 1, "", "Database"]], "NuRadioReco.detector.RNO_G.db_mongo_write.Database": [[76, 2, 1, "", "add_entry_to_database"], [76, 2, 1, "", "add_general_channel_info_to_station"], [76, 2, 1, "", "add_general_device_info_to_station"], [76, 2, 1, "", "add_general_station_info"], [76, 2, 1, "", "add_measurement_protocol"], [76, 2, 1, "", "change_primary_antenna_measurement"], [76, 2, 1, "", "change_primary_cable_measurement"], [76, 2, 1, "", "change_primary_downhole_measurement"], [76, 2, 1, "", "change_primary_drab_measurement"], [76, 2, 1, "", "change_primary_iglu_measurement"], [76, 2, 1, "", "change_primary_surface_measurement"], [76, 2, 1, "", "clone_collection_to_collection"], [76, 2, 1, "", "create_empty_collection"], [76, 2, 1, "", "decommission_a_channel"], [76, 2, 1, "", "decommission_a_device"], [76, 2, 1, "", "decommission_a_station"], [76, 2, 1, "", "find_primary_measurement"], [76, 2, 1, "", "get_all_available_signal_chain_configs"], [76, 2, 1, "", "get_channel_signal_chain"], [76, 2, 1, "", "get_channel_signal_chain_measurement"], [76, 2, 1, "", "get_collection_information"], [76, 2, 1, "", "get_collection_names"], [76, 2, 1, "", "get_complete_channel_information"], [76, 2, 1, "", "get_complete_device_information"], [76, 2, 1, "", "get_complete_station_information"], [76, 2, 1, "", "get_component_data"], [76, 2, 1, "", "get_database_time"], [76, 2, 1, "", "get_detector_time"], [76, 2, 1, "", "get_general_channel_information"], [76, 2, 1, "", "get_general_device_information"], [76, 2, 1, "", "get_general_station_information"], [76, 2, 1, "", "get_identifier"], [76, 2, 1, "", "get_object_names"], [76, 2, 1, "", "get_position"], [76, 2, 1, "", "get_quantity_names"], [76, 2, 1, "", "get_station_ids"], [76, 2, 1, "", "load_board_information"], [76, 2, 1, "", "query_modification_timestamps_per_station"], [76, 2, 1, "", "rename_database_collection"], [76, 2, 1, "", "set_database_time"], [76, 2, 1, "", "set_detector_time"], [76, 2, 1, "", "set_not_working"], [76, 2, 1, "", "update_current_primary"]], "NuRadioReco.detector.RNO_G.rnog_detector": [[77, 1, 1, "", "Detector"]], "NuRadioReco.detector.RNO_G.rnog_detector.Detector": [[77, 2, 1, "", "export"], [77, 2, 1, "", "export_as_string"], [77, 2, 1, "", "get_absolute_position"], [77, 2, 1, "", "get_amplifier_response"], [77, 2, 1, "", "get_antenna_model"], [77, 2, 1, "", "get_antenna_orientation"], [77, 2, 1, "", "get_antenna_type"], [77, 2, 1, "", "get_cable_delay"], [77, 2, 1, "", "get_channel"], [77, 2, 1, "", "get_channel_ids"], [77, 2, 1, "", "get_channel_orientation"], [77, 2, 1, "", "get_channel_signal_chain"], [77, 2, 1, "", "get_detector_time"], [77, 2, 1, "", "get_devices"], [77, 2, 1, "", "get_noise_temperature"], [77, 2, 1, "", "get_number_of_channels"], [77, 2, 1, "", "get_number_of_samples"], [77, 2, 1, "", "get_relative_position"], [77, 2, 1, "", "get_relative_position_device"], [77, 2, 1, "", "get_sampling_frequency"], [77, 2, 1, "", "get_signal_chain_components"], [77, 2, 1, "", "get_signal_chain_response"], [77, 2, 1, "", "get_site"], [77, 2, 1, "", "get_site_coordinates"], [77, 2, 1, "", "get_station"], [77, 2, 1, "", "get_station_ids"], [77, 2, 1, "", "get_time_delay"], [77, 2, 1, "", "has_station"], [77, 2, 1, "", "is_channel_noiseless"], [77, 2, 1, "", "update"]], "NuRadioReco.detector.amp": [[78, 3, 1, "", "get_amp_response"]], "NuRadioReco.detector.antennapattern": [[79, 1, 1, "", "AntennaPattern"], [79, 1, 1, "", "AntennaPatternAnalytic"], [79, 1, 1, "", "AntennaPatternBase"], [79, 1, 1, "", "AntennaPatternProvider"], [79, 3, 1, "", "get_group_delay"], [79, 3, 1, "", "get_pickle_antenna_response"], [79, 3, 1, "", "interpolate_linear"], [79, 3, 1, "", "interpolate_linear_vectorized"], [79, 3, 1, "", "parse_AERA_XML_file"], [79, 3, 1, "", "parse_ARA_file"], [79, 3, 1, "", "parse_HFSS_file"], [79, 3, 1, "", "parse_LOFAR_txt_file"], [79, 3, 1, "", "parse_RNOG_XFDTD_file"], [79, 3, 1, "", "parse_WIPLD_file"], [79, 3, 1, "", "preprocess_AERA"], [79, 3, 1, "", "preprocess_ARA"], [79, 3, 1, "", "preprocess_HFSS"], [79, 3, 1, "", "preprocess_LOFAR_txt"], [79, 3, 1, "", "preprocess_RNOG_XFDTD"], [79, 3, 1, "", "preprocess_WIPLD"], [79, 3, 1, "", "preprocess_WIPLD_old"], [79, 3, 1, "", "preprocess_XFDTD"], [79, 3, 1, "", "save_preprocessed_WIPLD"], [79, 3, 1, "", "save_preprocessed_WIPLD_forARA"], [79, 3, 1, "", "save_preprocessed_WIPLD_old"]], "NuRadioReco.detector.antennapattern.AntennaPattern": [[79, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic": [[79, 2, 1, "", "get_antenna_response_vectorized"], [79, 2, 1, "", "parametric_phase"]], "NuRadioReco.detector.antennapattern.AntennaPatternBase": [[79, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternProvider": [[79, 2, 1, "", "load_antenna_pattern"]], "NuRadioReco.detector.detector": [[80, 3, 1, "", "Detector"]], "NuRadioReco.detector.detector_base": [[81, 1, 1, "", "DateTimeSerializer"], [81, 1, 1, "", "DetectorBase"], [81, 3, 1, "", "buffer_db"]], "NuRadioReco.detector.detector_base.DateTimeSerializer": [[81, 6, 1, "", "OBJ_CLASS"], [81, 2, 1, "", "decode"], [81, 2, 1, "", "encode"]], "NuRadioReco.detector.detector_base.DetectorBase": [[81, 5, 1, "", "antenna_by_depth"], [81, 5, 1, "", "assume_inf"], [81, 2, 1, "", "get_absolute_position"], [81, 2, 1, "", "get_absolute_position_site"], [81, 2, 1, "", "get_amplifier_measurement"], [81, 2, 1, "", "get_amplifier_response"], [81, 2, 1, "", "get_amplifier_type"], [81, 2, 1, "", "get_antenna_deployment_time"], [81, 2, 1, "", "get_antenna_model"], [81, 2, 1, "", "get_antenna_orientation"], [81, 2, 1, "", "get_antenna_type"], [81, 2, 1, "", "get_cable_delay"], [81, 2, 1, "", "get_cable_type_and_length"], [81, 2, 1, "", "get_channel"], [81, 2, 1, "", "get_channel_group_id"], [81, 2, 1, "", "get_channel_ids"], [81, 2, 1, "", "get_detector_time"], [81, 2, 1, "", "get_device"], [81, 2, 1, "", "get_device_ids"], [81, 2, 1, "", "get_noise_RMS"], [81, 2, 1, "", "get_noise_temperature"], [81, 2, 1, "", "get_number_of_channels"], [81, 2, 1, "", "get_number_of_devices"], [81, 2, 1, "", "get_number_of_samples"], [81, 2, 1, "", "get_parallel_channels"], [81, 2, 1, "", "get_relative_position"], [81, 2, 1, "", "get_sampling_frequency"], [81, 2, 1, "", "get_site"], [81, 2, 1, "", "get_site_coordinates"], [81, 2, 1, "", "get_station"], [81, 2, 1, "", "get_station_ids"], [81, 2, 1, "", "get_unique_time_periods"], [81, 2, 1, "", "has_station"], [81, 2, 1, "", "is_channel_noiseless"], [81, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sql": [[82, 1, 1, "", "Detector"], [82, 3, 1, "", "get_amplifier_type"], [82, 3, 1, "", "get_antenna_model_file"], [82, 3, 1, "", "get_antenna_type"], [82, 3, 1, "", "get_cable_delays"], [82, 3, 1, "", "get_number_of_channels"], [82, 3, 1, "", "get_relative_position"], [82, 3, 1, "", "get_relative_positions"], [82, 3, 1, "", "get_station_type"]], "NuRadioReco.detector.detector_sql.Detector": [[82, 2, 1, "", "get_absolute_position_site"], [82, 2, 1, "", "get_amplifier_type"], [82, 2, 1, "", "get_antenna_deployment_time"], [82, 2, 1, "", "get_antenna_model"], [82, 2, 1, "", "get_antenna_orientation"], [82, 2, 1, "", "get_antenna_type"], [82, 2, 1, "", "get_cable_delay"], [82, 2, 1, "", "get_cable_type_and_length"], [82, 2, 1, "", "get_everything"], [82, 2, 1, "", "get_everything_channels"], [82, 2, 1, "", "get_everything_positions"], [82, 2, 1, "", "get_everything_stations"], [82, 2, 1, "", "get_number_of_channels"], [82, 2, 1, "", "get_number_of_samples"], [82, 2, 1, "", "get_relative_position"], [82, 2, 1, "", "get_relative_positions"], [82, 2, 1, "", "get_sampling_frequency"], [82, 2, 1, "", "get_site"], [82, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sys_uncertainties": [[83, 1, 1, "", "DetectorSysUncertainties"]], "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties": [[83, 5, 1, "", "antenna_by_depth"], [83, 5, 1, "", "assume_inf"], [83, 2, 1, "", "get_absolute_position"], [83, 2, 1, "", "get_absolute_position_site"], [83, 2, 1, "", "get_amplifier_measurement"], [83, 2, 1, "", "get_amplifier_response"], [83, 2, 1, "", "get_amplifier_type"], [83, 2, 1, "", "get_antenna_deployment_time"], [83, 2, 1, "", "get_antenna_model"], [83, 2, 1, "", "get_antenna_orientation"], [83, 2, 1, "", "get_antenna_type"], [83, 2, 1, "", "get_cable_delay"], [83, 2, 1, "", "get_cable_type_and_length"], [83, 2, 1, "", "get_channel"], [83, 2, 1, "", "get_channel_group_id"], [83, 2, 1, "", "get_channel_ids"], [83, 2, 1, "", "get_detector_time"], [83, 2, 1, "", "get_device"], [83, 2, 1, "", "get_device_ids"], [83, 2, 1, "", "get_noise_RMS"], [83, 2, 1, "", "get_noise_temperature"], [83, 2, 1, "", "get_number_of_channels"], [83, 2, 1, "", "get_number_of_devices"], [83, 2, 1, "", "get_number_of_samples"], [83, 2, 1, "", "get_parallel_channels"], [83, 2, 1, "", "get_relative_position"], [83, 2, 1, "", "get_sampling_frequency"], [83, 2, 1, "", "get_site"], [83, 2, 1, "", "get_site_coordinates"], [83, 2, 1, "", "get_station"], [83, 2, 1, "", "get_station_ids"], [83, 2, 1, "", "get_unique_time_periods"], [83, 2, 1, "", "has_station"], [83, 2, 1, "", "is_channel_noiseless"], [83, 2, 1, "", "reset_antenna_orientation_offsets"], [83, 2, 1, "", "reset_antenna_position_offsets"], [83, 2, 1, "", "set_antenna_orientation_offsets"], [83, 2, 1, "", "set_antenna_position_offsets"], [83, 2, 1, "", "update"]], "NuRadioReco.detector.filterresponse": [[84, 3, 1, "", "get_filter_response"], [84, 3, 1, "", "get_filter_response_mini_circuits"], [84, 3, 1, "", "get_filter_response_mini_circuits2"]], "NuRadioReco.detector.generic_detector": [[85, 1, 1, "", "GenericDetector"]], "NuRadioReco.detector.generic_detector.GenericDetector": [[85, 2, 1, "", "add_generic_station"], [85, 2, 1, "", "add_station_properties_for_event"], [85, 5, 1, "", "antenna_by_depth"], [85, 5, 1, "", "assume_inf"], [85, 2, 1, "", "get_absolute_position"], [85, 2, 1, "", "get_absolute_position_site"], [85, 2, 1, "", "get_amplifier_measurement"], [85, 2, 1, "", "get_amplifier_response"], [85, 2, 1, "", "get_amplifier_type"], [85, 2, 1, "", "get_antenna_deployment_time"], [85, 2, 1, "", "get_antenna_model"], [85, 2, 1, "", "get_antenna_orientation"], [85, 2, 1, "", "get_antenna_type"], [85, 2, 1, "", "get_cable_delay"], [85, 2, 1, "", "get_cable_type_and_length"], [85, 2, 1, "", "get_channel"], [85, 2, 1, "", "get_channel_group_id"], [85, 2, 1, "", "get_channel_ids"], [85, 2, 1, "", "get_default_channel"], [85, 2, 1, "", "get_default_channel_id"], [85, 2, 1, "", "get_default_station"], [85, 2, 1, "", "get_default_station_id"], [85, 2, 1, "", "get_detector_time"], [85, 2, 1, "", "get_device"], [85, 2, 1, "", "get_device_ids"], [85, 2, 1, "", "get_noise_RMS"], [85, 2, 1, "", "get_noise_temperature"], [85, 2, 1, "", "get_number_of_channels"], [85, 2, 1, "", "get_number_of_devices"], [85, 2, 1, "", "get_number_of_samples"], [85, 2, 1, "", "get_parallel_channels"], [85, 2, 1, "", "get_raw_channel"], [85, 2, 1, "", "get_raw_station"], [85, 2, 1, "", "get_reference_station"], [85, 2, 1, "", "get_reference_station_id"], [85, 2, 1, "", "get_reference_station_ids"], [85, 2, 1, "", "get_reference_stations"], [85, 2, 1, "", "get_relative_position"], [85, 2, 1, "", "get_sampling_frequency"], [85, 2, 1, "", "get_site"], [85, 2, 1, "", "get_site_coordinates"], [85, 2, 1, "", "get_station"], [85, 2, 1, "", "get_station_ids"], [85, 2, 1, "", "get_station_properties_for_event"], [85, 2, 1, "", "get_unique_time_periods"], [85, 2, 1, "", "has_station"], [85, 2, 1, "", "is_channel_noiseless"], [85, 2, 1, "", "set_event"], [85, 2, 1, "", "update"]], "NuRadioReco.detector.response": [[86, 1, 1, "", "Response"], [86, 3, 1, "", "subtract_time_delay_from_response"]], "NuRadioReco.detector.response.Response": [[86, 2, 1, "", "get_names"], [86, 2, 1, "", "get_time_delay"], [86, 2, 1, "", "plot"], [86, 2, 1, "", "remove"]], "NuRadioReco.framework": [[91, 0, 0, "-", "base_shower"], [92, 0, 0, "-", "base_station"], [93, 0, 0, "-", "base_trace"], [94, 0, 0, "-", "channel"], [95, 0, 0, "-", "electric_field"], [96, 0, 0, "-", "emitter"], [97, 0, 0, "-", "event"], [98, 0, 0, "-", "hybrid_information"], [99, 0, 0, "-", "hybrid_shower"], [100, 0, 0, "-", "parameter_serialization"], [101, 0, 0, "-", "parameters"], [102, 0, 0, "-", "particle"], [103, 0, 0, "-", "radio_shower"], [104, 0, 0, "-", "sim_channel"], [105, 0, 0, "-", "sim_emitter"], [106, 0, 0, "-", "sim_station"], [107, 0, 0, "-", "station"], [108, 0, 0, "-", "trigger"]], "NuRadioReco.framework.base_shower": [[91, 1, 1, "", "BaseShower"]], "NuRadioReco.framework.base_shower.BaseShower": [[91, 2, 1, "", "deserialize"], [91, 2, 1, "", "get_axis"], [91, 2, 1, "", "get_coordinatesystem"], [91, 2, 1, "", "get_id"], [91, 2, 1, "", "get_parameter"], [91, 2, 1, "", "get_parameters"], [91, 2, 1, "", "has_parameter"], [91, 2, 1, "", "serialize"], [91, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.base_station": [[92, 1, 1, "", "BaseStation"]], "NuRadioReco.framework.base_station.BaseStation": [[92, 2, 1, "", "add_electric_field"], [92, 2, 1, "", "deserialize"], [92, 2, 1, "", "get_ARIANNA_parameter"], [92, 2, 1, "", "get_ARIANNA_parameters"], [92, 2, 1, "", "get_electric_field_ids"], [92, 2, 1, "", "get_electric_fields"], [92, 2, 1, "", "get_electric_fields_for_channels"], [92, 2, 1, "", "get_first_trigger"], [92, 2, 1, "", "get_id"], [92, 2, 1, "", "get_parameter"], [92, 2, 1, "", "get_parameter_error"], [92, 2, 1, "", "get_parameters"], [92, 2, 1, "", "get_primary_trigger"], [92, 2, 1, "", "get_station_time"], [92, 2, 1, "", "get_station_time_dict"], [92, 2, 1, "", "get_trigger"], [92, 2, 1, "", "get_triggers"], [92, 2, 1, "", "has_ARIANNA_parameter"], [92, 2, 1, "", "has_parameter"], [92, 2, 1, "", "has_trigger"], [92, 2, 1, "", "has_triggered"], [92, 2, 1, "", "is_cosmic_ray"], [92, 2, 1, "", "is_neutrino"], [92, 2, 1, "", "remove_parameter"], [92, 2, 1, "", "remove_triggers"], [92, 2, 1, "", "serialize"], [92, 2, 1, "", "set_ARIANNA_parameter"], [92, 2, 1, "", "set_electric_fields"], [92, 2, 1, "", "set_is_cosmic_ray"], [92, 2, 1, "", "set_is_neutrino"], [92, 2, 1, "", "set_parameter"], [92, 2, 1, "", "set_parameter_error"], [92, 2, 1, "", "set_station_time"], [92, 2, 1, "", "set_trigger"], [92, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.base_trace": [[93, 1, 1, "", "BaseTrace"], [93, 3, 1, "", "get_frequencies"]], "NuRadioReco.framework.base_trace.BaseTrace": [[93, 2, 1, "", "add_to_trace"], [93, 2, 1, "", "add_trace_start_time"], [93, 2, 1, "", "apply_time_shift"], [93, 2, 1, "", "deserialize"], [93, 2, 1, "", "get_filtered_trace"], [93, 2, 1, "", "get_frequencies"], [93, 2, 1, "", "get_frequency_spectrum"], [93, 2, 1, "", "get_hilbert_envelope"], [93, 2, 1, "", "get_hilbert_envelope_mag"], [93, 2, 1, "", "get_number_of_samples"], [93, 2, 1, "", "get_sampling_rate"], [93, 2, 1, "", "get_times"], [93, 2, 1, "", "get_trace"], [93, 2, 1, "", "get_trace_start_time"], [93, 2, 1, "", "resample"], [93, 2, 1, "", "serialize"], [93, 2, 1, "", "set_frequency_spectrum"], [93, 2, 1, "", "set_trace"], [93, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.channel": [[94, 1, 1, "", "Channel"]], "NuRadioReco.framework.channel.Channel": [[94, 2, 1, "", "add_to_trace"], [94, 2, 1, "", "add_trace_start_time"], [94, 2, 1, "", "apply_time_shift"], [94, 2, 1, "", "deserialize"], [94, 2, 1, "", "get_filtered_trace"], [94, 2, 1, "", "get_frequencies"], [94, 2, 1, "", "get_frequency_spectrum"], [94, 2, 1, "", "get_group_id"], [94, 2, 1, "", "get_hilbert_envelope"], [94, 2, 1, "", "get_hilbert_envelope_mag"], [94, 2, 1, "", "get_id"], [94, 2, 1, "", "get_number_of_samples"], [94, 2, 1, "", "get_parameter"], [94, 2, 1, "", "get_parameters"], [94, 2, 1, "", "get_sampling_rate"], [94, 2, 1, "", "get_times"], [94, 2, 1, "", "get_trace"], [94, 2, 1, "", "get_trace_start_time"], [94, 2, 1, "", "has_parameter"], [94, 2, 1, "", "resample"], [94, 2, 1, "", "serialize"], [94, 2, 1, "", "set_frequency_spectrum"], [94, 2, 1, "", "set_parameter"], [94, 2, 1, "", "set_trace"], [94, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.electric_field": [[95, 1, 1, "", "ElectricField"]], "NuRadioReco.framework.electric_field.ElectricField": [[95, 2, 1, "", "add_to_trace"], [95, 2, 1, "", "add_trace_start_time"], [95, 2, 1, "", "apply_time_shift"], [95, 2, 1, "", "deserialize"], [95, 2, 1, "", "get_channel_ids"], [95, 2, 1, "", "get_filtered_trace"], [95, 2, 1, "", "get_frequencies"], [95, 2, 1, "", "get_frequency_spectrum"], [95, 2, 1, "", "get_hilbert_envelope"], [95, 2, 1, "", "get_hilbert_envelope_mag"], [95, 2, 1, "", "get_number_of_samples"], [95, 2, 1, "", "get_parameter"], [95, 2, 1, "", "get_parameter_error"], [95, 2, 1, "", "get_parameters"], [95, 2, 1, "", "get_position"], [95, 2, 1, "", "get_ray_tracing_solution_id"], [95, 2, 1, "", "get_sampling_rate"], [95, 2, 1, "", "get_shower_id"], [95, 2, 1, "", "get_stokes_parameters"], [95, 2, 1, "", "get_times"], [95, 2, 1, "", "get_trace"], [95, 2, 1, "", "get_trace_start_time"], [95, 2, 1, "", "get_unique_identifier"], [95, 2, 1, "", "has_channel_ids"], [95, 2, 1, "", "has_parameter"], [95, 2, 1, "", "has_parameter_error"], [95, 2, 1, "", "resample"], [95, 2, 1, "", "serialize"], [95, 2, 1, "", "set_channel_ids"], [95, 2, 1, "", "set_frequency_spectrum"], [95, 2, 1, "", "set_parameter"], [95, 2, 1, "", "set_parameter_error"], [95, 2, 1, "", "set_position"], [95, 2, 1, "", "set_trace"], [95, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.emitter": [[96, 1, 1, "", "Emitter"]], "NuRadioReco.framework.emitter.Emitter": [[96, 2, 1, "", "deserialize"], [96, 2, 1, "", "get_id"], [96, 2, 1, "", "get_parameter"], [96, 2, 1, "", "get_parameters"], [96, 2, 1, "", "get_station_ids"], [96, 2, 1, "", "has_parameter"], [96, 2, 1, "", "has_station_ids"], [96, 2, 1, "", "serialize"], [96, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.event": [[97, 1, 1, "", "Event"]], "NuRadioReco.framework.event.Event": [[97, 2, 1, "", "add_particle"], [97, 2, 1, "", "add_shower"], [97, 2, 1, "", "add_sim_emitter"], [97, 2, 1, "", "add_sim_shower"], [97, 2, 1, "", "deserialize"], [97, 2, 1, "", "get_event_time"], [97, 2, 1, "", "get_first_shower"], [97, 2, 1, "", "get_first_sim_emitter"], [97, 2, 1, "", "get_first_sim_shower"], [97, 2, 1, "", "get_generator_info"], [97, 2, 1, "", "get_hybrid_information"], [97, 2, 1, "", "get_id"], [97, 2, 1, "", "get_interaction_products"], [97, 2, 1, "", "get_parameter"], [97, 2, 1, "", "get_parent"], [97, 2, 1, "", "get_particle"], [97, 2, 1, "", "get_particles"], [97, 2, 1, "", "get_primary"], [97, 2, 1, "", "get_run_number"], [97, 2, 1, "", "get_shower"], [97, 2, 1, "", "get_showers"], [97, 2, 1, "", "get_sim_emitter"], [97, 2, 1, "", "get_sim_emitters"], [97, 2, 1, "", "get_sim_shower"], [97, 2, 1, "", "get_sim_showers"], [97, 2, 1, "", "get_station"], [97, 2, 1, "", "get_station_ids"], [97, 2, 1, "", "get_stations"], [97, 2, 1, "", "has_generator_info"], [97, 2, 1, "", "has_parameter"], [97, 2, 1, "", "has_particle"], [97, 2, 1, "", "has_shower"], [97, 2, 1, "", "has_sim_emitter"], [97, 2, 1, "", "has_sim_shower"], [97, 2, 1, "", "has_triggered"], [97, 2, 1, "", "iter_modules"], [97, 2, 1, "", "register_module_event"], [97, 2, 1, "", "register_module_station"], [97, 2, 1, "", "serialize"], [97, 2, 1, "", "set_event_time"], [97, 2, 1, "", "set_generator_info"], [97, 2, 1, "", "set_id"], [97, 2, 1, "", "set_parameter"], [97, 2, 1, "", "set_station"]], "NuRadioReco.framework.hybrid_information": [[98, 1, 1, "", "HybridInformation"]], "NuRadioReco.framework.hybrid_information.HybridInformation": [[98, 2, 1, "", "add_hybrid_shower"], [98, 2, 1, "", "deserialize"], [98, 2, 1, "", "get_hybrid_shower"], [98, 2, 1, "", "get_hybrid_showers"], [98, 2, 1, "", "serialize"]], "NuRadioReco.framework.hybrid_shower": [[99, 1, 1, "", "HybridShower"]], "NuRadioReco.framework.hybrid_shower.HybridShower": [[99, 2, 1, "", "deserialize"], [99, 2, 1, "", "get_axis"], [99, 2, 1, "", "get_coordinatesystem"], [99, 2, 1, "", "get_hybrid_detector"], [99, 2, 1, "", "get_id"], [99, 2, 1, "", "get_name"], [99, 2, 1, "", "get_parameter"], [99, 2, 1, "", "get_parameters"], [99, 2, 1, "", "has_parameter"], [99, 2, 1, "", "serialize"], [99, 2, 1, "", "set_hybrid_detector"], [99, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.parameter_serialization": [[100, 3, 1, "", "deserialize"], [100, 3, 1, "", "deserialize_covariances"], [100, 3, 1, "", "serialize"], [100, 3, 1, "", "serialize_covariances"]], "NuRadioReco.framework.parameters": [[101, 1, 1, "", "ARIANNAParameters"], [101, 1, 1, "", "channelParameters"], [101, 1, 1, "", "electricFieldParameters"], [101, 1, 1, "", "emitterParameters"], [101, 1, 1, "", "eventParameters"], [101, 1, 1, "", "generatorAttributes"], [101, 1, 1, "", "particleParameters"], [101, 1, 1, "", "showerParameters"], [101, 1, 1, "", "stationParameters"]], "NuRadioReco.framework.parameters.ARIANNAParameters": [[101, 6, 1, "", "comm_duration"], [101, 6, 1, "", "comm_period"], [101, 6, 1, "", "internal_clock_time"], [101, 6, 1, "", "l1_supression_value"], [101, 6, 1, "", "seq_num"], [101, 6, 1, "", "seq_start_time"], [101, 6, 1, "", "seq_stop_time"], [101, 6, 1, "", "trigger_thresholds"]], "NuRadioReco.framework.parameters.channelParameters": [[101, 6, 1, "", "P2P_amplitude"], [101, 6, 1, "", "SNR"], [101, 6, 1, "", "Vrms_NuRadioMC_simulation"], [101, 6, 1, "", "azimuth"], [101, 6, 1, "", "bandwidth_NuRadioMC_simulation"], [101, 6, 1, "", "block_offsets"], [101, 6, 1, "", "cr_xcorrelations"], [101, 6, 1, "", "maximum_amplitude"], [101, 6, 1, "", "maximum_amplitude_envelope"], [101, 6, 1, "", "noise_regions"], [101, 6, 1, "", "noise_rms"], [101, 6, 1, "", "nu_xcorrelations"], [101, 6, 1, "", "signal_ray_type"], [101, 6, 1, "", "signal_receiving_azimuth"], [101, 6, 1, "", "signal_receiving_zenith"], [101, 6, 1, "", "signal_regions"], [101, 6, 1, "", "signal_time"], [101, 6, 1, "", "signal_time_offset"], [101, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.electricFieldParameters": [[101, 6, 1, "", "azimuth"], [101, 6, 1, "", "cr_spectrum_quadratic_term"], [101, 6, 1, "", "cr_spectrum_slope"], [101, 6, 1, "", "energy_fluence_ratios"], [101, 6, 1, "", "launch_vector"], [101, 6, 1, "", "max_amp_antenna"], [101, 6, 1, "", "max_amp_antenna_envelope"], [101, 6, 1, "", "nu_vertex_distance"], [101, 6, 1, "", "nu_vertex_propagation_time"], [101, 6, 1, "", "nu_viewing_angle"], [101, 6, 1, "", "polarization_angle"], [101, 6, 1, "", "polarization_angle_expectation"], [101, 6, 1, "", "ray_path_type"], [101, 6, 1, "", "raytracing_solution"], [101, 6, 1, "", "reflection_coefficient_phi"], [101, 6, 1, "", "reflection_coefficient_theta"], [101, 6, 1, "", "signal_energy_fluence"], [101, 6, 1, "", "signal_time"], [101, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.emitterParameters": [[101, 6, 1, "", "amplitude"], [101, 6, 1, "", "antenna_type"], [101, 6, 1, "", "frequency"], [101, 6, 1, "", "half_width"], [101, 6, 1, "", "model"], [101, 6, 1, "", "orientation_phi"], [101, 6, 1, "", "orientation_theta"], [101, 6, 1, "", "polarization"], [101, 6, 1, "", "position"], [101, 6, 1, "", "realization_id"], [101, 6, 1, "", "rotation_phi"], [101, 6, 1, "", "rotation_theta"], [101, 6, 1, "", "time"]], "NuRadioReco.framework.parameters.eventParameters": [[101, 6, 1, "", "hash_NuRadioMC"], [101, 6, 1, "", "hash_NuRadioReco"], [101, 6, 1, "", "sim_config"]], "NuRadioReco.framework.parameters.generatorAttributes": [[101, 6, 1, "", "Emax"], [101, 6, 1, "", "Emin"], [101, 6, 1, "", "NuRadioMC_EvtGen_version"], [101, 6, 1, "", "NuRadioMC_EvtGen_version_hash"], [101, 6, 1, "", "NuRadioMC_version"], [101, 6, 1, "", "NuRadioMC_version_hash"], [101, 6, 1, "", "Tnoise"], [101, 6, 1, "", "Vrms"], [101, 6, 1, "", "area"], [101, 6, 1, "", "bandwidth"], [101, 6, 1, "", "deposited"], [101, 6, 1, "", "dt"], [101, 6, 1, "", "fiducial_rmax"], [101, 6, 1, "", "fiducial_rmin"], [101, 6, 1, "", "fiducial_xmax"], [101, 6, 1, "", "fiducial_xmin"], [101, 6, 1, "", "fiducial_ymax"], [101, 6, 1, "", "fiducial_ymin"], [101, 6, 1, "", "fiducial_zmax"], [101, 6, 1, "", "fiducial_zmin"], [101, 6, 1, "", "flavors"], [101, 6, 1, "", "n_events"], [101, 6, 1, "", "n_samples"], [101, 6, 1, "", "phimax"], [101, 6, 1, "", "phimin"], [101, 6, 1, "", "rmax"], [101, 6, 1, "", "rmin"], [101, 6, 1, "", "start_event_id"], [101, 6, 1, "", "thetamax"], [101, 6, 1, "", "thetamin"], [101, 6, 1, "", "total_number_of_events"], [101, 6, 1, "", "volume"], [101, 6, 1, "", "xmax"], [101, 6, 1, "", "xmin"], [101, 6, 1, "", "ymax"], [101, 6, 1, "", "ymin"], [101, 6, 1, "", "zmax"], [101, 6, 1, "", "zmin"]], "NuRadioReco.framework.parameters.particleParameters": [[101, 6, 1, "", "azimuth"], [101, 6, 1, "", "cr_azimuth"], [101, 6, 1, "", "cr_energy"], [101, 6, 1, "", "cr_energy_em"], [101, 6, 1, "", "cr_zenith"], [101, 6, 1, "", "energy"], [101, 6, 1, "", "flavor"], [101, 6, 1, "", "inelasticity"], [101, 6, 1, "", "interaction_type"], [101, 6, 1, "", "n_interaction"], [101, 6, 1, "", "parent_id"], [101, 6, 1, "", "shower_id"], [101, 6, 1, "", "vertex"], [101, 6, 1, "", "vertex_time"], [101, 6, 1, "", "weight"], [101, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.showerParameters": [[101, 6, 1, "", "atmospheric_model"], [101, 6, 1, "", "azimuth"], [101, 6, 1, "", "charge_excess_profile_id"], [101, 6, 1, "", "core"], [101, 6, 1, "", "distance_shower_maximum_geometric"], [101, 6, 1, "", "distance_shower_maximum_grammage"], [101, 6, 1, "", "electromagnetic_energy"], [101, 6, 1, "", "electromagnetic_radiation_energy"], [101, 6, 1, "", "energy"], [101, 6, 1, "", "flavor"], [101, 6, 1, "", "interaction_type"], [101, 6, 1, "", "interferometric_core"], [101, 6, 1, "", "interferometric_shower_axis"], [101, 6, 1, "", "interferometric_shower_maximum"], [101, 6, 1, "", "k_L"], [101, 6, 1, "", "magnetic_field_rotation"], [101, 6, 1, "", "magnetic_field_vector"], [101, 6, 1, "", "n_interaction"], [101, 6, 1, "", "observation_level"], [101, 6, 1, "", "parent_id"], [101, 6, 1, "", "primary_particle"], [101, 6, 1, "", "radiation_energy"], [101, 6, 1, "", "refractive_index_at_ground"], [101, 6, 1, "", "shower_maximum"], [101, 6, 1, "", "type"], [101, 6, 1, "", "vertex"], [101, 6, 1, "", "vertex_time"], [101, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.stationParameters": [[101, 6, 1, "", "azimuth"], [101, 6, 1, "", "ccnc"], [101, 6, 1, "", "channels_max_amplitude"], [101, 6, 1, "", "chi2_efield_time_direction_fit"], [101, 6, 1, "", "cr_azimuth"], [101, 6, 1, "", "cr_dominant_polarisation"], [101, 6, 1, "", "cr_energy"], [101, 6, 1, "", "cr_energy_em"], [101, 6, 1, "", "cr_xcorrelations"], [101, 6, 1, "", "cr_xmax"], [101, 6, 1, "", "cr_zenith"], [101, 6, 1, "", "dirty_fft_channels"], [101, 6, 1, "", "distance_correlations"], [101, 6, 1, "", "flagged_channels"], [101, 6, 1, "", "inelasticity"], [101, 6, 1, "", "ndf_efield_time_direction_fit"], [101, 6, 1, "", "nu_azimuth"], [101, 6, 1, "", "nu_energy"], [101, 6, 1, "", "nu_flavor"], [101, 6, 1, "", "nu_inttype"], [101, 6, 1, "", "nu_vertex"], [101, 6, 1, "", "nu_xcorrelations"], [101, 6, 1, "", "nu_zenith"], [101, 6, 1, "", "shower_energy"], [101, 6, 1, "", "station_time"], [101, 6, 1, "", "triggered"], [101, 6, 1, "", "vertex_2D_fit"], [101, 6, 1, "", "viewing_angles"], [101, 6, 1, "", "zenith"], [101, 6, 1, "", "zenith_cr_templatefit"], [101, 6, 1, "", "zenith_nu_templatefit"]], "NuRadioReco.framework.particle": [[102, 1, 1, "", "Particle"]], "NuRadioReco.framework.particle.Particle": [[102, 2, 1, "", "as_hdf5_dict"], [102, 2, 1, "", "deserialize"], [102, 2, 1, "", "get_id"], [102, 2, 1, "", "get_parameter"], [102, 2, 1, "", "get_parameters"], [102, 2, 1, "", "has_parameter"], [102, 2, 1, "", "serialize"], [102, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.radio_shower": [[103, 1, 1, "", "RadioShower"]], "NuRadioReco.framework.radio_shower.RadioShower": [[103, 2, 1, "", "deserialize"], [103, 2, 1, "", "get_axis"], [103, 2, 1, "", "get_coordinatesystem"], [103, 2, 1, "", "get_id"], [103, 2, 1, "", "get_parameter"], [103, 2, 1, "", "get_parameters"], [103, 2, 1, "", "get_station_ids"], [103, 2, 1, "", "has_parameter"], [103, 2, 1, "", "has_station_ids"], [103, 2, 1, "", "serialize"], [103, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_channel": [[104, 1, 1, "", "SimChannel"]], "NuRadioReco.framework.sim_channel.SimChannel": [[104, 2, 1, "", "add_to_trace"], [104, 2, 1, "", "add_trace_start_time"], [104, 2, 1, "", "apply_time_shift"], [104, 2, 1, "", "deserialize"], [104, 2, 1, "", "get_filtered_trace"], [104, 2, 1, "", "get_frequencies"], [104, 2, 1, "", "get_frequency_spectrum"], [104, 2, 1, "", "get_group_id"], [104, 2, 1, "", "get_hilbert_envelope"], [104, 2, 1, "", "get_hilbert_envelope_mag"], [104, 2, 1, "", "get_id"], [104, 2, 1, "", "get_number_of_samples"], [104, 2, 1, "", "get_parameter"], [104, 2, 1, "", "get_parameters"], [104, 2, 1, "", "get_ray_tracing_solution_id"], [104, 2, 1, "", "get_sampling_rate"], [104, 2, 1, "", "get_shower_id"], [104, 2, 1, "", "get_times"], [104, 2, 1, "", "get_trace"], [104, 2, 1, "", "get_trace_start_time"], [104, 2, 1, "", "get_unique_identifier"], [104, 2, 1, "", "has_parameter"], [104, 2, 1, "", "resample"], [104, 2, 1, "", "serialize"], [104, 2, 1, "", "set_frequency_spectrum"], [104, 2, 1, "", "set_parameter"], [104, 2, 1, "", "set_trace"], [104, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.sim_emitter": [[105, 1, 1, "", "SimEmitter"]], "NuRadioReco.framework.sim_emitter.SimEmitter": [[105, 2, 1, "", "deserialize"], [105, 2, 1, "", "get_id"], [105, 2, 1, "", "get_parameter"], [105, 2, 1, "", "get_parameters"], [105, 2, 1, "", "get_station_ids"], [105, 2, 1, "", "has_parameter"], [105, 2, 1, "", "has_station_ids"], [105, 2, 1, "", "serialize"], [105, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_station": [[106, 1, 1, "", "SimStation"]], "NuRadioReco.framework.sim_station.SimStation": [[106, 2, 1, "", "add_channel"], [106, 2, 1, "", "add_electric_field"], [106, 2, 1, "", "deserialize"], [106, 2, 1, "", "get_ARIANNA_parameter"], [106, 2, 1, "", "get_ARIANNA_parameters"], [106, 2, 1, "", "get_channel"], [106, 2, 1, "", "get_channel_ids"], [106, 2, 1, "", "get_channels_by_channel_id"], [106, 2, 1, "", "get_channels_by_ray_tracing_id"], [106, 2, 1, "", "get_channels_by_shower_id"], [106, 2, 1, "", "get_electric_field_ids"], [106, 2, 1, "", "get_electric_fields"], [106, 2, 1, "", "get_electric_fields_for_channels"], [106, 2, 1, "", "get_first_trigger"], [106, 2, 1, "", "get_id"], [106, 2, 1, "", "get_magnetic_field_vector"], [106, 2, 1, "", "get_parameter"], [106, 2, 1, "", "get_parameter_error"], [106, 2, 1, "", "get_parameters"], [106, 2, 1, "", "get_primary_trigger"], [106, 2, 1, "", "get_ray_tracing_ids"], [106, 2, 1, "", "get_shower_ids"], [106, 2, 1, "", "get_simulation_weight"], [106, 2, 1, "", "get_station_time"], [106, 2, 1, "", "get_station_time_dict"], [106, 2, 1, "", "get_trigger"], [106, 2, 1, "", "get_triggers"], [106, 2, 1, "", "has_ARIANNA_parameter"], [106, 2, 1, "", "has_parameter"], [106, 2, 1, "", "has_trigger"], [106, 2, 1, "", "has_triggered"], [106, 2, 1, "", "is_candidate"], [106, 2, 1, "", "is_cosmic_ray"], [106, 2, 1, "", "is_neutrino"], [106, 2, 1, "", "iter_channels"], [106, 2, 1, "", "remove_parameter"], [106, 2, 1, "", "remove_triggers"], [106, 2, 1, "", "serialize"], [106, 2, 1, "", "set_ARIANNA_parameter"], [106, 2, 1, "", "set_candidate"], [106, 2, 1, "", "set_electric_fields"], [106, 2, 1, "", "set_is_cosmic_ray"], [106, 2, 1, "", "set_is_neutrino"], [106, 2, 1, "", "set_magnetic_field_vector"], [106, 2, 1, "", "set_parameter"], [106, 2, 1, "", "set_parameter_error"], [106, 2, 1, "", "set_simulation_weight"], [106, 2, 1, "", "set_station_time"], [106, 2, 1, "", "set_trigger"], [106, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.station": [[107, 1, 1, "", "Station"]], "NuRadioReco.framework.station.Station": [[107, 2, 1, "", "add_channel"], [107, 2, 1, "", "add_electric_field"], [107, 2, 1, "", "add_sim_station"], [107, 2, 1, "", "deserialize"], [107, 2, 1, "", "get_ARIANNA_parameter"], [107, 2, 1, "", "get_ARIANNA_parameters"], [107, 2, 1, "", "get_channel"], [107, 2, 1, "", "get_channel_ids"], [107, 2, 1, "", "get_electric_field_ids"], [107, 2, 1, "", "get_electric_fields"], [107, 2, 1, "", "get_electric_fields_for_channels"], [107, 2, 1, "", "get_first_trigger"], [107, 2, 1, "", "get_id"], [107, 2, 1, "", "get_magnetic_field_vector"], [107, 2, 1, "", "get_number_of_channels"], [107, 2, 1, "", "get_parameter"], [107, 2, 1, "", "get_parameter_error"], [107, 2, 1, "", "get_parameters"], [107, 2, 1, "", "get_primary_trigger"], [107, 2, 1, "", "get_reference_direction"], [107, 2, 1, "", "get_reference_reconstruction"], [107, 2, 1, "", "get_sim_station"], [107, 2, 1, "", "get_station_time"], [107, 2, 1, "", "get_station_time_dict"], [107, 2, 1, "", "get_trigger"], [107, 2, 1, "", "get_triggers"], [107, 2, 1, "", "has_ARIANNA_parameter"], [107, 2, 1, "", "has_channel"], [107, 2, 1, "", "has_parameter"], [107, 2, 1, "", "has_sim_station"], [107, 2, 1, "", "has_trigger"], [107, 2, 1, "", "has_triggered"], [107, 2, 1, "", "is_cosmic_ray"], [107, 2, 1, "", "is_neutrino"], [107, 2, 1, "", "iter_channel_group"], [107, 2, 1, "", "iter_channels"], [107, 2, 1, "", "remove_channel"], [107, 2, 1, "", "remove_parameter"], [107, 2, 1, "", "remove_triggers"], [107, 2, 1, "", "serialize"], [107, 2, 1, "", "set_ARIANNA_parameter"], [107, 2, 1, "", "set_electric_fields"], [107, 2, 1, "", "set_is_cosmic_ray"], [107, 2, 1, "", "set_is_neutrino"], [107, 2, 1, "", "set_parameter"], [107, 2, 1, "", "set_parameter_error"], [107, 2, 1, "", "set_reference_reconstruction"], [107, 2, 1, "", "set_sim_station"], [107, 2, 1, "", "set_station_time"], [107, 2, 1, "", "set_trigger"], [107, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.trigger": [[108, 1, 1, "", "EnvelopePhasedTrigger"], [108, 1, 1, "", "EnvelopeTrigger"], [108, 1, 1, "", "HighLowTrigger"], [108, 1, 1, "", "IntegratedPowerTrigger"], [108, 1, 1, "", "RNOGSurfaceTrigger"], [108, 1, 1, "", "SimplePhasedTrigger"], [108, 1, 1, "", "SimpleThresholdTrigger"], [108, 1, 1, "", "Trigger"], [108, 3, 1, "", "deserialize"]], "NuRadioReco.framework.trigger.EnvelopePhasedTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.EnvelopeTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.HighLowTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.IntegratedPowerTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.RNOGSurfaceTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"], [108, 6, 1, "", "units"]], "NuRadioReco.framework.trigger.SimplePhasedTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.SimpleThresholdTrigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.Trigger": [[108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_name"], [108, 2, 1, "", "get_pre_trigger_time_channel"], [108, 2, 1, "", "get_pre_trigger_times"], [108, 2, 1, "", "get_trigger_settings"], [108, 2, 1, "", "get_trigger_time"], [108, 2, 1, "", "get_trigger_times"], [108, 2, 1, "", "get_triggered_channels"], [108, 2, 1, "", "get_type"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_primary"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_pre_trigger_times"], [108, 2, 1, "", "set_primary"], [108, 2, 1, "", "set_trigger_time"], [108, 2, 1, "", "set_trigger_times"], [108, 2, 1, "", "set_triggered"], [108, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.modules": [[110, 0, 0, "-", "ARA"], [113, 0, 0, "-", "ARIANNA"], [115, 0, 0, "-", "LOFAR"], [121, 0, 0, "-", "RNO_G"], [125, 0, 0, "-", "analogToDigitalConverter"], [126, 0, 0, "-", "base"], [128, 0, 0, "-", "beamFormingDirectionFitter"], [129, 0, 0, "-", "channelAddCableDelay"], [130, 0, 0, "-", "channelAntennaDedispersion"], [131, 0, 0, "-", "channelBandPassFilter"], [132, 0, 0, "-", "channelCWNotchFilter"], [133, 0, 0, "-", "channelGalacticNoiseAdder"], [134, 0, 0, "-", "channelGenericNoiseAdder"], [135, 0, 0, "-", "channelLengthAdjuster"], [136, 0, 0, "-", "channelResampler"], [137, 0, 0, "-", "channelSignalReconstructor"], [138, 0, 0, "-", "channelStopFilter"], [139, 0, 0, "-", "channelTemplateCorrelation"], [140, 0, 0, "-", "channelTimeOffsetCalculator"], [141, 0, 0, "-", "channelTimeWindow"], [142, 0, 0, "-", "correlationDirectionFitter"], [143, 0, 0, "-", "cosmicRayEnergyReconstructor"], [144, 0, 0, "-", "custom"], [147, 0, 0, "-", "efieldAirToIcePropagator"], [148, 0, 0, "-", "efieldRadioInterferometricReconstruction"], [149, 0, 0, "-", "efieldTimeDirectionFitter"], [150, 0, 0, "-", "efieldToVoltageConverter"], [151, 0, 0, "-", "efieldToVoltageConverterPerEfield"], [152, 0, 0, "-", "electricFieldBandPassFilter"], [153, 0, 0, "-", "electricFieldResampler"], [154, 0, 0, "-", "electricFieldSignalReconstructor"], [155, 0, 0, "-", "eventTypeIdentifier"], [156, 0, 0, "-", "iftElectricFieldReconstructor"], [159, 0, 0, "-", "io"], [181, 0, 0, "-", "measured_noise"], [187, 0, 0, "-", "neutrinoDirectionReconstructor"], [189, 0, 0, "-", "neutrinoVertexReconstructor"], [193, 0, 0, "-", "phasedarray"], [195, 0, 0, "-", "sphericalWaveFitter"], [196, 0, 0, "-", "templateDirectionFitter"], [197, 0, 0, "-", "trigger"], [205, 0, 0, "-", "triggerTimeAdjuster"], [206, 0, 0, "-", "voltageToAnalyticEfieldConverter"], [207, 0, 0, "-", "voltageToEfieldConverter"], [208, 0, 0, "-", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.ARA": [[111, 0, 0, "-", "hardwareResponseIncorporator"], [112, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator": [[111, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[111, 2, 1, "", "begin"], [111, 2, 1, "", "end"], [111, 2, 1, "", "run"]], "NuRadioReco.modules.ARA.triggerSimulator": [[112, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator": [[112, 2, 1, "", "end"], [112, 2, 1, "", "has_triggered"], [112, 2, 1, "", "run"]], "NuRadioReco.modules.ARIANNA": [[114, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator": [[114, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[114, 2, 1, "", "begin"], [114, 2, 1, "", "end"], [114, 2, 1, "", "get_filter"], [114, 2, 1, "", "get_mingainlin"], [114, 2, 1, "", "get_time_delay"], [114, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR": [[116, 0, 0, "-", "beamformingDirectionFitter_LOFAR"], [117, 0, 0, "-", "beamforming_utilities"], [118, 0, 0, "-", "stationGalacticCalibrator"], [119, 0, 0, "-", "stationPulseFinder"], [120, 0, 0, "-", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR": [[116, 1, 1, "", "beamformingDirectionFitter"], [116, 3, 1, "", "geometric_delays"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter": [[116, 2, 1, "", "begin"], [116, 2, 1, "", "end"], [116, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.beamforming_utilities": [[117, 3, 1, "", "GeometricDelayFarField"], [117, 3, 1, "", "beamformer"], [117, 3, 1, "", "geometric_delays"], [117, 3, 1, "", "mini_beamformer"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator": [[118, 3, 1, "", "fourier_series"], [118, 1, 1, "", "stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator": [[118, 2, 1, "", "begin"], [118, 2, 1, "", "end"], [118, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationPulseFinder": [[119, 3, 1, "", "find_snr_of_timeseries"], [119, 1, 1, "", "stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder": [[119, 2, 1, "", "begin"], [119, 2, 1, "", "end"], [119, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationRFIFilter": [[120, 3, 1, "", "FindRFI_LOFAR"], [120, 3, 1, "", "median_sorted_by_power"], [120, 3, 1, "", "num_double_zeros"], [120, 1, 1, "", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter": [[120, 2, 1, "", "begin"], [120, 2, 1, "", "end"], [120, 5, 1, "", "metadata_dir"], [120, 2, 1, "", "run"], [120, 5, 1, "", "station_list"]], "NuRadioReco.modules.RNO_G": [[122, 0, 0, "-", "channelBlockOffsetFitter"], [123, 0, 0, "-", "hardwareResponseIncorporator"], [124, 0, 0, "-", "triggerBoardResponse"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter": [[122, 1, 1, "", "channelBlockOffsets"], [122, 3, 1, "", "fit_block_offsets"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets": [[122, 2, 1, "", "add_offsets"], [122, 2, 1, "", "remove_offsets"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator": [[123, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator": [[123, 2, 1, "", "begin"], [123, 2, 1, "", "end"], [123, 2, 1, "", "get_filter"], [123, 2, 1, "", "get_mingainlin"], [123, 2, 1, "", "get_time_delay"], [123, 2, 1, "", "run"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse": [[124, 1, 1, "", "triggerBoardResponse"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse": [[124, 2, 1, "", "apply_adc_gain"], [124, 2, 1, "", "apply_trigger_filter"], [124, 2, 1, "", "begin"], [124, 2, 1, "", "digitize_trace"], [124, 2, 1, "", "end"], [124, 2, 1, "", "get_avg_vrms"], [124, 2, 1, "", "get_trigger_values"], [124, 2, 1, "", "run"]], "NuRadioReco.modules.analogToDigitalConverter": [[125, 1, 1, "", "analogToDigitalConverter"], [125, 3, 1, "", "apply_saturation"], [125, 3, 1, "", "perfect_ceiling_comparator"], [125, 3, 1, "", "perfect_comparator"], [125, 3, 1, "", "perfect_floor_comparator"], [125, 3, 1, "", "round_to_int"]], "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter": [[125, 2, 1, "", "end"], [125, 2, 1, "", "get_digital_trace"], [125, 2, 1, "", "run"]], "NuRadioReco.modules.base": [[127, 0, 0, "-", "module"]], "NuRadioReco.modules.base.module": [[127, 3, 1, "", "register_run"], [127, 3, 1, "", "setup_logger"]], "NuRadioReco.modules.beamFormingDirectionFitter": [[128, 1, 1, "", "beamFormingDirectionFitter"], [128, 3, 1, "", "get_array_of_channels"]], "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter": [[128, 2, 1, "", "begin"], [128, 2, 1, "", "end"], [128, 2, 1, "", "run"]], "NuRadioReco.modules.channelAddCableDelay": [[129, 1, 1, "", "channelAddCableDelay"]], "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay": [[129, 2, 1, "", "run"]], "NuRadioReco.modules.channelAntennaDedispersion": [[130, 1, 1, "", "channelAntennaDedispersion"]], "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion": [[130, 2, 1, "", "end"], [130, 2, 1, "", "run"]], "NuRadioReco.modules.channelBandPassFilter": [[131, 1, 1, "", "channelBandPassFilter"], [131, 3, 1, "", "test_equality"]], "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter": [[131, 2, 1, "", "begin"], [131, 2, 1, "", "end"], [131, 2, 1, "", "get_filter"], [131, 2, 1, "", "get_filter_arguments"], [131, 2, 1, "", "run"]], "NuRadioReco.modules.channelCWNotchFilter": [[132, 1, 1, "", "channelCWNotchFilter"], [132, 3, 1, "", "filter_cws"], [132, 3, 1, "", "find_frequency_peaks"], [132, 3, 1, "", "find_frequency_peaks_from_trace"], [132, 3, 1, "", "get_filter"], [132, 3, 1, "", "plot_ft"], [132, 3, 1, "", "plot_trace"]], "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter": [[132, 2, 1, "", "begin"], [132, 2, 1, "", "run"]], "NuRadioReco.modules.channelGalacticNoiseAdder": [[133, 1, 1, "", "channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder": [[133, 2, 1, "", "begin"], [133, 2, 1, "", "run"]], "NuRadioReco.modules.channelGenericNoiseAdder": [[134, 1, 1, "", "channelGenericNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder": [[134, 2, 1, "", "add_random_phases"], [134, 2, 1, "", "bandlimited_noise"], [134, 2, 1, "", "bandlimited_noise_from_precalculated_parameters"], [134, 2, 1, "", "bandlimited_noise_from_spectrum"], [134, 2, 1, "", "begin"], [134, 2, 1, "", "end"], [134, 2, 1, "", "fftnoise_fullfft"], [134, 2, 1, "", "precalculate_bandlimited_noise_parameters"], [134, 2, 1, "", "run"]], "NuRadioReco.modules.channelLengthAdjuster": [[135, 1, 1, "", "channelLengthAdjuster"]], "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster": [[135, 2, 1, "", "begin"], [135, 2, 1, "", "end"], [135, 2, 1, "", "run"]], "NuRadioReco.modules.channelResampler": [[136, 1, 1, "", "channelResampler"]], "NuRadioReco.modules.channelResampler.channelResampler": [[136, 2, 1, "", "begin"], [136, 2, 1, "", "end"], [136, 2, 1, "", "run"]], "NuRadioReco.modules.channelSignalReconstructor": [[137, 1, 1, "", "channelSignalReconstructor"]], "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor": [[137, 2, 1, "", "begin"], [137, 2, 1, "", "end"], [137, 2, 1, "", "get_SNR"], [137, 2, 1, "", "run"]], "NuRadioReco.modules.channelStopFilter": [[138, 1, 1, "", "channelStopFilter"]], "NuRadioReco.modules.channelStopFilter.channelStopFilter": [[138, 2, 1, "", "begin"], [138, 2, 1, "", "end"], [138, 2, 1, "", "run"]], "NuRadioReco.modules.channelTemplateCorrelation": [[139, 1, 1, "", "channelTemplateCorrelation"]], "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation": [[139, 2, 1, "", "begin"], [139, 2, 1, "", "end"], [139, 2, 1, "", "match_sampling"], [139, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeOffsetCalculator": [[140, 1, 1, "", "channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator": [[140, 2, 1, "", "begin"], [140, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeWindow": [[141, 1, 1, "", "channelTimeWindow"]], "NuRadioReco.modules.channelTimeWindow.channelTimeWindow": [[141, 2, 1, "", "begin"], [141, 2, 1, "", "end"], [141, 2, 1, "", "run"]], "NuRadioReco.modules.correlationDirectionFitter": [[142, 1, 1, "", "correlationDirectionFitter"]], "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter": [[142, 2, 1, "", "begin"], [142, 2, 1, "", "end"], [142, 2, 1, "", "run"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor": [[143, 1, 1, "", "cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor": [[143, 2, 1, "", "begin"], [143, 2, 1, "", "run"]], "NuRadioReco.modules.custom": [[145, 0, 0, "-", "deltaT"]], "NuRadioReco.modules.custom.deltaT": [[146, 0, 0, "-", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution": [[146, 1, 1, "", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution": [[146, 2, 1, "", "begin"], [146, 2, 1, "", "end"], [146, 2, 1, "", "run"]], "NuRadioReco.modules.efieldAirToIcePropagator": [[147, 1, 1, "", "efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator": [[147, 2, 1, "", "begin"], [147, 2, 1, "", "end"], [147, 2, 1, "", "run"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction": [[148, 1, 1, "", "efieldInterferometricAxisReco"], [148, 1, 1, "", "efieldInterferometricDepthReco"], [148, 3, 1, "", "get_geometry_and_transformation"], [148, 3, 1, "", "get_station_data"], [148, 4, 1, "", "logger"], [148, 3, 1, "", "plot_lateral_cross_section"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco": [[148, 2, 1, "", "begin"], [148, 2, 1, "", "end"], [148, 2, 1, "", "find_maximum_in_plane"], [148, 2, 1, "", "reconstruct_interferometric_depth"], [148, 2, 1, "", "reconstruct_shower_axis"], [148, 2, 1, "", "run"], [148, 2, 1, "", "sample_lateral_cross_section"], [148, 2, 1, "", "sample_longitudinal_profile"], [148, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco": [[148, 2, 1, "", "begin"], [148, 2, 1, "", "end"], [148, 2, 1, "", "reconstruct_interferometric_depth"], [148, 2, 1, "", "run"], [148, 2, 1, "", "sample_longitudinal_profile"], [148, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldTimeDirectionFitter": [[149, 1, 1, "", "efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter": [[149, 2, 1, "", "begin"], [149, 2, 1, "", "end"], [149, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverter": [[150, 1, 1, "", "efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter": [[150, 2, 1, "", "begin"], [150, 2, 1, "", "end"], [150, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield": [[151, 1, 1, "", "efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield": [[151, 2, 1, "", "end"], [151, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldBandPassFilter": [[152, 1, 1, "", "electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter": [[152, 2, 1, "", "begin"], [152, 2, 1, "", "end"], [152, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldResampler": [[153, 1, 1, "", "electricFieldResampler"]], "NuRadioReco.modules.electricFieldResampler.electricFieldResampler": [[153, 2, 1, "", "begin"], [153, 2, 1, "", "end"], [153, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldSignalReconstructor": [[154, 1, 1, "", "electricFieldSignalReconstructor"]], "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor": [[154, 2, 1, "", "begin"], [154, 2, 1, "", "end"], [154, 2, 1, "", "run"]], "NuRadioReco.modules.eventTypeIdentifier": [[155, 1, 1, "", "eventTypeIdentifier"]], "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier": [[155, 2, 1, "", "begin"], [155, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor": [[157, 0, 0, "-", "iftElectricFieldReconstructor"], [158, 0, 0, "-", "operators"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor": [[157, 1, 1, "", "IftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor": [[157, 2, 1, "", "begin"], [157, 2, 1, "", "make_priors_plot"], [157, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators": [[158, 1, 1, "", "DomainFlipper"], [158, 1, 1, "", "Inserter"], [158, 1, 1, "", "LinearSlopeOperator"], [158, 3, 1, "", "SlopeSpectrumOperator"], [158, 1, 1, "", "SymmetrizingOperator"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper": [[158, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter": [[158, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator": [[158, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator": [[158, 2, 1, "", "apply"]], "NuRadioReco.modules.io": [[160, 0, 0, "-", "LOFAR"], [165, 0, 0, "-", "NuRadioRecoio"], [166, 0, 0, "-", "RNO_G"], [168, 0, 0, "-", "coreas"], [175, 0, 0, "-", "eventReader"], [176, 0, 0, "-", "eventWriter"], [177, 0, 0, "-", "event_parser_factory"], [178, 0, 0, "-", "snowshovel"]], "NuRadioReco.modules.io.LOFAR": [[161, 0, 0, "-", "rawTBBio"], [162, 0, 0, "-", "rawTBBio_metadata"], [163, 0, 0, "-", "rawTBBio_utilities"], [164, 0, 0, "-", "readLOFARData"]], "NuRadioReco.modules.io.LOFAR.rawTBBio": [[161, 1, 1, "", "MultiFile_Dal1"], [161, 1, 1, "", "TBBData_Dal1"], [161, 3, 1, "", "decode_if_needed"], [161, 3, 1, "", "read_antenna_delays"], [161, 3, 1, "", "read_antenna_pol_flips"], [161, 3, 1, "", "read_bad_antennas"], [161, 3, 1, "", "read_station_delays"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1": [[161, 2, 1, "", "close_file"], [161, 2, 1, "", "find_and_set_polarization_delay"], [161, 2, 1, "", "get_ITRF_antenna_positions"], [161, 2, 1, "", "get_LOFAR_centered_positions"], [161, 2, 1, "", "get_all_sample_numbers"], [161, 2, 1, "", "get_antenna_names"], [161, 2, 1, "", "get_antenna_set"], [161, 2, 1, "", "get_data"], [161, 2, 1, "", "get_filter_selection"], [161, 2, 1, "", "get_full_data_lengths"], [161, 2, 1, "", "get_geometric_delays"], [161, 2, 1, "", "get_nominal_data_lengths"], [161, 2, 1, "", "get_nominal_sample_number"], [161, 2, 1, "", "get_sample_frequency"], [161, 2, 1, "", "get_station_ID"], [161, 2, 1, "", "get_station_name"], [161, 2, 1, "", "get_time_from_second"], [161, 2, 1, "", "get_timestamp"], [161, 2, 1, "", "get_timestamp_as_datetime"], [161, 2, 1, "", "get_timing_callibration_delays"], [161, 2, 1, "", "get_timing_callibration_phases"], [161, 2, 1, "", "get_total_delays"], [161, 2, 1, "", "has_antenna"], [161, 2, 1, "", "needs_metadata"], [161, 2, 1, "", "set_odd_polarization_delay"], [161, 2, 1, "", "set_polarization_flips"], [161, 2, 1, "", "set_station_delay"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1": [[161, 2, 1, "", "close_file"], [161, 2, 1, "", "get_ITRF_antenna_positions"], [161, 2, 1, "", "get_LOFAR_centered_positions"], [161, 2, 1, "", "get_all_sample_numbers"], [161, 2, 1, "", "get_antenna_names"], [161, 2, 1, "", "get_antenna_set"], [161, 2, 1, "", "get_data"], [161, 2, 1, "", "get_filter_selection"], [161, 2, 1, "", "get_full_data_lengths"], [161, 2, 1, "", "get_nominal_data_lengths"], [161, 2, 1, "", "get_nominal_sample_number"], [161, 2, 1, "", "get_sample_frequency"], [161, 2, 1, "", "get_station_ID"], [161, 2, 1, "", "get_station_name"], [161, 2, 1, "", "get_timestamp"], [161, 2, 1, "", "get_timing_callibration_delays"], [161, 2, 1, "", "get_timing_callibration_phases"], [161, 2, 1, "", "needs_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata": [[162, 3, 1, "", "convertITRFToLocal"], [162, 3, 1, "", "convertPhase_to_Timing"], [162, 3, 1, "", "getClockCorrectionFromParsetAddition"], [162, 3, 1, "", "getClockCorrections"], [162, 3, 1, "", "getItrfAntennaPosition"], [162, 3, 1, "", "getStationPhaseCalibration"], [162, 3, 1, "", "getStationPositions"], [162, 3, 1, "", "make_antennaID_filter"], [162, 3, 1, "", "mapAntennasetKeyword"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities": [[163, 3, 1, "", "antName_is_even"], [163, 3, 1, "", "even_antName_to_odd"]], "NuRadioReco.modules.io.LOFAR.readLOFARData": [[164, 1, 1, "", "getLOFARtraces"], [164, 3, 1, "", "get_metadata"], [164, 3, 1, "", "lora_timestamp_to_blocknumber"], [164, 1, 1, "", "readLOFARData"], [164, 3, 1, "", "tbb_filetag_from_utc"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces": [[164, 2, 1, "", "check_trace_quality"], [164, 2, 1, "", "close_file"], [164, 2, 1, "", "get_trace"], [164, 2, 1, "", "setup_trace_loading"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData": [[164, 2, 1, "", "begin"], [164, 2, 1, "", "end"], [164, 2, 1, "", "get_stations"], [164, 2, 1, "", "run"]], "NuRadioReco.modules.io.NuRadioRecoio": [[165, 1, 1, "", "NuRadioRecoio"]], "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio": [[165, 2, 1, "", "close_files"], [165, 2, 1, "", "get_detector"], [165, 2, 1, "", "get_event"], [165, 2, 1, "", "get_event_i"], [165, 2, 1, "", "get_event_ids"], [165, 2, 1, "", "get_events"], [165, 2, 1, "", "get_filenames"], [165, 2, 1, "", "get_header"], [165, 2, 1, "", "get_n_events"], [165, 2, 1, "", "openFile"]], "NuRadioReco.modules.io.RNO_G": [[167, 0, 0, "-", "readRNOGDataMattak"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak": [[167, 3, 1, "", "get_time_offset"], [167, 1, 1, "", "readRNOGData"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData": [[167, 2, 1, "", "add_selectors"], [167, 2, 1, "", "begin"], [167, 2, 1, "", "end"], [167, 2, 1, "", "get_event"], [167, 2, 1, "", "get_event_by_index"], [167, 2, 1, "", "get_events_information"], [167, 2, 1, "", "get_waveforms"], [167, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas": [[169, 0, 0, "-", "coreas"], [170, 0, 0, "-", "readCoREAS"], [171, 0, 0, "-", "readCoREASShower"], [172, 0, 0, "-", "readCoREASStation"], [173, 0, 0, "-", "readCoREASStationGrid"], [174, 0, 0, "-", "simulationSelector"]], "NuRadioReco.modules.io.coreas.coreas": [[169, 3, 1, "", "calculate_simulation_weights"], [169, 3, 1, "", "get_angles"], [169, 3, 1, "", "make_sim_shower"], [169, 3, 1, "", "make_sim_station"]], "NuRadioReco.modules.io.coreas.readCoREAS": [[170, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS": [[170, 2, 1, "", "begin"], [170, 2, 1, "", "end"], [170, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASShower": [[171, 3, 1, "", "antenna_id"], [171, 1, 1, "", "readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower": [[171, 2, 1, "", "begin"], [171, 2, 1, "", "end"], [171, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStation": [[172, 1, 1, "", "readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation": [[172, 2, 1, "", "begin"], [172, 2, 1, "", "end"], [172, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid": [[173, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS": [[173, 2, 1, "", "begin"], [173, 2, 1, "", "end"], [173, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.simulationSelector": [[174, 1, 1, "", "simulationSelector"]], "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector": [[174, 2, 1, "", "begin"], [174, 2, 1, "", "end"], [174, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventReader": [[175, 1, 1, "", "eventReader"]], "NuRadioReco.modules.io.eventReader.eventReader": [[175, 2, 1, "", "begin"], [175, 2, 1, "", "end"], [175, 2, 1, "", "get_detector"], [175, 2, 1, "", "get_header"], [175, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventWriter": [[176, 1, 1, "", "eventWriter"], [176, 3, 1, "", "get_header"]], "NuRadioReco.modules.io.eventWriter.eventWriter": [[176, 2, 1, "", "begin"], [176, 2, 1, "", "end"], [176, 2, 1, "", "run"]], "NuRadioReco.modules.io.event_parser_factory": [[177, 3, 1, "", "iter_events_function"], [177, 3, 1, "", "scan_files_function"]], "NuRadioReco.modules.io.snowshovel": [[179, 0, 0, "-", "readARIANNAData"], [180, 0, 0, "-", "readARIANNADataCalib"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData": [[179, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData": [[179, 2, 1, "", "begin"], [179, 2, 1, "", "end"], [179, 2, 1, "", "run"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib": [[180, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData": [[180, 2, 1, "", "begin"], [180, 2, 1, "", "end"], [180, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise": [[182, 0, 0, "-", "ARIANNA"], [184, 0, 0, "-", "RNO_G"], [186, 0, 0, "-", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.ARIANNA": [[183, 0, 0, "-", "noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT": [[183, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter": [[183, 2, 1, "", "begin"], [183, 2, 1, "", "end"], [183, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.RNO_G": [[185, 0, 0, "-", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter": [[185, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter": [[185, 2, 1, "", "begin"], [185, 2, 1, "", "end"], [185, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder": [[186, 1, 1, "", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder": [[186, 2, 1, "", "begin"], [186, 2, 1, "", "end"], [186, 2, 1, "", "get_noise_station"], [186, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor": [[190, 0, 0, "-", "create_lookup_table"], [191, 0, 0, "-", "neutrino2DVertexReconstructor"], [192, 0, 0, "-", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor": [[191, 1, 1, "", "neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor": [[191, 2, 1, "", "begin"], [191, 2, 1, "", "find_ray_type"], [191, 2, 1, "", "find_receiving_zenith"], [191, 2, 1, "", "get_correlation_array_2d"], [191, 2, 1, "", "get_correlation_for_pos"], [191, 2, 1, "", "get_signal_travel_time"], [191, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor": [[192, 1, 1, "", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor": [[192, 2, 1, "", "begin"], [192, 2, 1, "", "get_correlation_array_2d"], [192, 2, 1, "", "get_correlation_array_3d"], [192, 2, 1, "", "get_correlation_for_pos"], [192, 2, 1, "", "get_signal_travel_time"], [192, 2, 1, "", "run"]], "NuRadioReco.modules.phasedarray": [[194, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator": [[194, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator": [[194, 2, 1, "", "begin"], [194, 2, 1, "", "calculate_time_delays"], [194, 2, 1, "", "check_vertical_string"], [194, 2, 1, "", "end"], [194, 2, 1, "", "get_antenna_positions"], [194, 2, 1, "", "get_channel_trace_start_time"], [194, 2, 1, "", "phase_signals"], [194, 2, 1, "", "phased_trigger"], [194, 2, 1, "", "power_sum"], [194, 2, 1, "", "run"]], "NuRadioReco.modules.sphericalWaveFitter": [[195, 1, 1, "", "sphericalWaveFitter"]], "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter": [[195, 2, 1, "", "begin"], [195, 2, 1, "", "end"], [195, 2, 1, "", "run"]], "NuRadioReco.modules.templateDirectionFitter": [[196, 1, 1, "", "templateDirectionFitter"]], "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter": [[196, 2, 1, "", "begin"], [196, 2, 1, "", "end"], [196, 2, 1, "", "run"]], "NuRadioReco.modules.trigger": [[198, 0, 0, "-", "calc_parameters_for_rnog_surface_trigger"], [199, 0, 0, "-", "envelopeTrigger"], [200, 0, 0, "-", "highLowThreshold"], [201, 0, 0, "-", "multiHighLowThreshold"], [202, 0, 0, "-", "powerIntegration"], [203, 0, 0, "-", "rnog_surface_trigger"], [204, 0, 0, "-", "simpleThreshold"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[198, 3, 1, "", "linear_fit"]], "NuRadioReco.modules.trigger.envelopeTrigger": [[199, 3, 1, "", "get_envelope_triggers"], [199, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator": [[199, 2, 1, "", "begin"], [199, 2, 1, "", "end"], [199, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.highLowThreshold": [[200, 3, 1, "", "get_high_low_triggers"], [200, 3, 1, "", "get_majority_logic"], [200, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator": [[200, 2, 1, "", "begin"], [200, 2, 1, "", "end"], [200, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.multiHighLowThreshold": [[201, 3, 1, "", "get_high_triggers"], [201, 3, 1, "", "get_low_triggers"], [201, 3, 1, "", "get_multiple_high_low_trigger"], [201, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator": [[201, 2, 1, "", "begin"], [201, 2, 1, "", "end"], [201, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.powerIntegration": [[202, 3, 1, "", "get_power_int_triggers"], [202, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator": [[202, 2, 1, "", "begin"], [202, 2, 1, "", "end"], [202, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.rnog_surface_trigger": [[203, 3, 1, "", "schottky_diode"], [203, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator": [[203, 2, 1, "", "begin"], [203, 2, 1, "", "end"], [203, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.simpleThreshold": [[204, 3, 1, "", "get_threshold_triggers"], [204, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator": [[204, 2, 1, "", "begin"], [204, 2, 1, "", "end"], [204, 2, 1, "", "run"]], "NuRadioReco.modules.triggerTimeAdjuster": [[205, 1, 1, "", "triggerTimeAdjuster"]], "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster": [[205, 2, 1, "", "begin"], [205, 2, 1, "", "get_pre_trigger_time"], [205, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter": [[206, 3, 1, "", "covariance"], [206, 3, 1, "", "stacked_lstsq"], [206, 1, 1, "", "voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter": [[206, 2, 1, "", "begin"], [206, 2, 1, "", "end"], [206, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverter": [[207, 3, 1, "", "get_array_of_channels"], [207, 3, 1, "", "stacked_lstsq"], [207, 1, 1, "", "voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter": [[207, 2, 1, "", "begin"], [207, 2, 1, "", "end"], [207, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel": [[208, 1, 1, "", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel": [[208, 2, 1, "", "begin"], [208, 2, 1, "", "end"], [208, 2, 1, "", "run"]], "NuRadioReco.utilities": [[210, 0, 0, "-", "analytic_pulse"], [211, 0, 0, "-", "bandpass_filter"], [212, 0, 0, "-", "cr_flux"], [213, 0, 0, "-", "dataservers"], [214, 0, 0, "-", "diodeSimulator"], [215, 0, 0, "-", "fft"], [216, 0, 0, "-", "geometryUtilities"], [217, 0, 0, "-", "ice"], [218, 0, 0, "-", "interferometry"], [219, 0, 0, "-", "io_utilities"], [220, 0, 0, "-", "logging"], [221, 0, 0, "-", "metaclasses"], [222, 0, 0, "-", "noise"], [223, 0, 0, "-", "particle_names"], [224, 0, 0, "-", "signal_processing"], [225, 0, 0, "-", "templates"], [226, 0, 0, "-", "timing"], [227, 0, 0, "-", "traceWindows"], [228, 0, 0, "-", "trace_utilities"], [229, 0, 0, "-", "units"], [230, 0, 0, "-", "version"]], "NuRadioReco.utilities.analytic_pulse": [[210, 3, 1, "", "amp_from_energy"], [210, 3, 1, "", "get_analytic_pulse"], [210, 3, 1, "", "get_analytic_pulse_freq"]], "NuRadioReco.utilities.bandpass_filter": [[211, 3, 1, "", "get_filter_response"]], "NuRadioReco.utilities.cr_flux": [[212, 3, 1, "", "get_analytic_cr_flux"], [212, 3, 1, "", "get_cr_event_rate"], [212, 3, 1, "", "get_flux_per_energy_bin"], [212, 3, 1, "", "get_interpolated_cr_flux"], [212, 3, 1, "", "get_measured_data"], [212, 3, 1, "", "plot_measured_spectrum"]], "NuRadioReco.utilities.dataservers": [[213, 3, 1, "", "download_from_dataserver"], [213, 3, 1, "", "get_available_dataservers_by_responsetime"]], "NuRadioReco.utilities.diodeSimulator": [[214, 1, 1, "", "diodeSimulator"]], "NuRadioReco.utilities.diodeSimulator.diodeSimulator": [[214, 2, 1, "", "calculate_noise_parameters"], [214, 2, 1, "", "end"], [214, 2, 1, "", "tunnel_diode"]], "NuRadioReco.utilities.fft": [[215, 3, 1, "", "freq2time"], [215, 3, 1, "", "freqs"], [215, 3, 1, "", "time2freq"]], "NuRadioReco.utilities.geometryUtilities": [[216, 3, 1, "", "get_efield_in_spherical_coords"], [216, 3, 1, "", "get_fresnel_angle"], [216, 3, 1, "", "get_fresnel_r_p"], [216, 3, 1, "", "get_fresnel_r_s"], [216, 3, 1, "", "get_fresnel_t_p"], [216, 3, 1, "", "get_fresnel_t_s"], [216, 3, 1, "", "get_time_delay_from_direction"], [216, 3, 1, "", "rot_x"], [216, 3, 1, "", "rot_y"], [216, 3, 1, "", "rot_z"]], "NuRadioReco.utilities.ice": [[217, 3, 1, "", "get_refractive_index"]], "NuRadioReco.utilities.interferometry": [[218, 3, 1, "", "fit_axis"], [218, 3, 1, "", "get_intersection_between_line_and_plane"], [218, 3, 1, "", "get_signal"], [218, 3, 1, "", "get_time_shifts"], [218, 3, 1, "", "interfere_traces_interpolation"]], "NuRadioReco.utilities.io_utilities": [[219, 3, 1, "", "read_pickle"]], "NuRadioReco.utilities.logging": [[220, 1, 1, "", "NuRadioLogger"], [220, 3, 1, "", "addLoggingLevel"], [220, 3, 1, "", "get_fancy_formatter"], [220, 3, 1, "", "set_general_log_level"]], "NuRadioReco.utilities.logging.NuRadioLogger": [[220, 2, 1, "", "addFilter"], [220, 2, 1, "", "addHandler"], [220, 2, 1, "", "callHandlers"], [220, 2, 1, "", "critical"], [220, 2, 1, "", "debug"], [220, 2, 1, "", "error"], [220, 2, 1, "", "exception"], [220, 2, 1, "", "fatal"], [220, 2, 1, "", "filter"], [220, 2, 1, "", "findCaller"], [220, 2, 1, "", "getChild"], [220, 2, 1, "", "getEffectiveLevel"], [220, 2, 1, "", "handle"], [220, 2, 1, "", "hasHandlers"], [220, 2, 1, "", "info"], [220, 2, 1, "", "isEnabledFor"], [220, 2, 1, "", "log"], [220, 2, 1, "", "makeRecord"], [220, 6, 1, "", "manager"], [220, 2, 1, "", "removeFilter"], [220, 2, 1, "", "removeHandler"], [220, 6, 1, "", "root"], [220, 2, 1, "", "setLevel"], [220, 2, 1, "", "status"], [220, 2, 1, "", "warn"], [220, 2, 1, "", "warning"]], "NuRadioReco.utilities.metaclasses": [[221, 1, 1, "", "Singleton"]], "NuRadioReco.utilities.metaclasses.Singleton": [[221, 2, 1, "", "mro"]], "NuRadioReco.utilities.noise": [[222, 3, 1, "", "rolled_sum_roll"], [222, 3, 1, "", "rolled_sum_slicing"], [222, 3, 1, "", "rolled_sum_take"], [222, 3, 1, "", "rolling_indices"], [222, 1, 1, "", "thermalNoiseGenerator"], [222, 1, 1, "", "thermalNoiseGeneratorPhasedArray"]], "NuRadioReco.utilities.noise.thermalNoiseGenerator": [[222, 2, 1, "", "generate_noise"]], "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray": [[222, 2, 1, "", "generate_noise"], [222, 2, 1, "", "generate_noise2"]], "NuRadioReco.utilities.particle_names": [[223, 3, 1, "", "particle_id"], [223, 3, 1, "", "particle_name"]], "NuRadioReco.utilities.signal_processing": [[224, 3, 1, "", "half_hann_window"]], "NuRadioReco.utilities.templates": [[225, 1, 1, "", "Templates"]], "NuRadioReco.utilities.templates.Templates": [[225, 2, 1, "", "get_cr_ref_template"], [225, 2, 1, "", "get_cr_ref_templates"], [225, 2, 1, "", "get_nu_ref_template"], [225, 2, 1, "", "get_nu_ref_templates"], [225, 2, 1, "", "get_set_of_cr_templates"], [225, 2, 1, "", "get_set_of_cr_templates_full"], [225, 2, 1, "", "get_set_of_nu_templates"], [225, 2, 1, "", "set_template_directory"]], "NuRadioReco.utilities.timing": [[226, 3, 1, "", "analyze_timing"]], "NuRadioReco.utilities.traceWindows": [[227, 3, 1, "", "get_window_around_maximum"]], "NuRadioReco.utilities.trace_utilities": [[228, 3, 1, "", "apply_butterworth"], [228, 3, 1, "", "butterworth_filter_trace"], [228, 3, 1, "", "delay_trace"], [228, 3, 1, "", "get_channel_voltage_from_efield"], [228, 3, 1, "", "get_efield_antenna_factor"], [228, 3, 1, "", "get_electric_field_energy_fluence"], [228, 3, 1, "", "get_stokes"], [228, 3, 1, "", "upsampling_fir"]], "NuRadioReco.utilities.version": [[230, 3, 1, "", "get_NuRadioMC_commit_hash"], [230, 3, 1, "", "get_NuRadioReco_commit_hash"], [230, 3, 1, "", "get_git_commit_hash"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "nuradiomc": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 56, 65], "workflow": 0, "code": [0, 53, 63, 231], "convent": [0, 1], "how": [0, 60, 238], "write": [0, 233, 238], "docstr": 0, "updat": 0, "version": [0, 2, 230], "number": 0, "depend": [0, 2], "addit": [0, 232], "document": [0, 63, 65, 231, 244, 245], "compil": 0, "head": 0, "text": 0, "list": [0, 62, 238], "link": 0, "cross": 0, "refer": 0, "show": 0, "some": 1, "note": 1, "coordin": [1, 234], "default": 1, "system": [1, 229, 243], "point": 1, "angl": 1, "direct": [1, 56], "elect": 1, "field": [1, 238, 239, 242], "unit": [1, 229, 243], "particl": [1, 53, 102, 238], "type": 1, "fourier": [1, 243], "transform": [1, 243], "instal": 2, "nuradioreco": [2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 244], "requir": 2, "us": [2, 53, 56, 59, 238, 239], "pip": 2, "develop": [2, 60, 238], "pythonpath": 2, "manual": [2, 64, 240], "core": 2, "option": [2, 56], "Not": 2, "packag": [2, 5, 18, 19, 25, 31, 35, 66, 67, 69, 72, 73, 90, 109, 110, 113, 115, 121, 126, 144, 145, 156, 159, 160, 166, 168, 178, 181, 182, 184, 187, 189, 193, 197, 209], "introduct": [3, 4], "evtgen": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "submodul": [5, 18, 19, 25, 31, 35, 66, 67, 69, 73, 90, 109, 110, 113, 115, 121, 126, 145, 156, 159, 160, 166, 168, 178, 181, 182, 184, 187, 189, 193, 197, 209], "nuradiomctoarasim": 6, "modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 60, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 241, 242], "nuradiopropos": [7, 53], "create_tau_tab": 8, "generate_cylind": 9, "generate_unforc": 10, "gener": [11, 53, 54, 57, 58, 59, 62], "generator_ascii": 12, "generator_skeleton": 13, "hdf5_to_ascii": 14, "proposal_table_manag": 15, "readaraeventlist": 16, "readeventlist_ascii": 17, "signalgen": [18, 19, 20, 21, 22, 23, 24], "subpackag": [18, 66, 109, 144, 159, 181], "arz": [19, 20, 59], "hcrb2017": 21, "askaryan": 22, "emitt": [23, 58, 96], "parametr": 24, "signalprop": [25, 26, 27, 28, 29, 30], "analyticraytrac": 26, "directraytrac": 27, "propag": [28, 56, 60], "propagation_base_class": 29, "radioproparaytrac": 30, "simul": [31, 32, 33, 34, 54, 61, 62], "output_writer_hdf5": 32, "time_logg": 34, "util": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 243], "veff": 36, "attenu": [37, 56], "cross_sect": 38, "dump_hdf5": 39, "earth_attenu": 40, "flux": 41, "inelast": 42, "medium": 43, "medium_bas": 44, "merge_hdf5": 45, "muon_flux": 46, "plot": 47, "runner": 48, "runner_exampl": 49, "split_hdf5": 50, "hdf5": [51, 52, 57], "output": [51, 52, 54, 57], "structur": [51, 52, 235, 238, 241], "open": [51, 52], "file": [51, 52, 57, 61, 62, 233, 238], "what": [51, 52], "": [51, 52, 245], "behind": [51, 52], "attribut": [51, 52, 53], "station": [51, 52, 54, 107, 238, 242], "content": [51, 52, 245], "item": 51, "data": [51, 52, 53, 238], "v2": 52, "2": [52, 54, 57], "event": [53, 62, 97, 233, 237, 238], "cylindr": 53, "volum": [53, 62], "input": [53, 57, 62], "paramet": [53, 101, 238], "set": 53, "atmospher": 53, "muon": 53, "flat": 53, "surfac": 53, "standalon": 53, "exampl": [54, 55, 56, 60, 62], "multi": 54, "coincid": 54, "1": [54, 57], "detector": [54, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 233, 234, 235, 236, 238], "layout": 54, "3": [54, 57], "run": [54, 57, 62], "4": [54, 57, 232], "analyz": 54, "calcul": [55, 60, 62], "expect": 55, "sensit": 55, "ic": [56, 59, 217], "model": [56, 59, 232], "implement": 56, "The": [56, 229, 233, 235], "icemodel": 56, "icemodel_simpl": 56, "class": [56, 233, 235, 238], "radiopropaicewrapp": 56, "avail": [56, 232], "simpl": 56, "radiopropa": [56, 60], "specif": [56, 233, 242], "script": [56, 57, 60], "birefring": 56, "south": 56, "pole": 56, "greenland": 56, "flow": 56, "cluster": 57, "job": 57, "sh": 57, "submit": 57, "merg": 57, "individu": 57, "signal": [58, 59, 60, 233, 235], "spice": 58, "pulser": 58, "from": 59, "shower": [59, 238], "frequenc": 59, "domain": 59, "parameteris": 59, "semi": 59, "analyt": [59, 60], "valid": 59, "time": [59, 226, 235, 242], "same": 59, "random": 59, "seed": 59, "fft": [59, 215], "normalis": 59, "rai": 60, "trace": [60, 242], "tracer": 60, "gsl": 60, "speed": 60, "boost": 60, "numer": 60, "an": [60, 62], "path": 60, "configur": 61, "steer": 61, "config": [61, 62], "descript": [61, 62, 233, 234, 236], "effect": 62, "more": 62, "detail": [62, 242], "visual": 62, "result": 62, "ara": [67, 68, 110, 111, 112], "analog_compon": [68, 70, 74], "arianna": [69, 70, 71, 113, 114, 182, 183, 242], "preprocessamprespons": 71, "lofar": [72, 115, 116, 117, 118, 119, 120, 160, 161, 162, 163, 164], "rno_g": [73, 74, 75, 76, 77, 121, 122, 123, 124, 166, 167, 184, 185], "db_mongo_read": 75, "db_mongo_writ": 76, "rnog_detector": 77, "amp": 78, "antennapattern": 79, "detector_bas": 81, "detector_sql": 82, "detector_sys_uncertainti": 83, "filterrespons": 84, "generic_detector": 85, "respons": [86, 233, 235], "sql_to_json": 87, "test_detector_db": 88, "visualize_detector": 89, "framework": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "base_show": 91, "base_st": 92, "base_trac": 93, "channel": [94, 238, 242], "electric_field": 95, "hybrid_inform": 98, "hybrid_show": 99, "parameter_seri": 100, "radio_show": 103, "sim_channel": 104, "sim_emitt": 105, "sim_stat": 106, "trigger": [108, 197, 198, 199, 200, 201, 202, 203, 204, 238], "hardwareresponseincorpor": [111, 114, 123], "triggersimul": [112, 194], "beamformingdirectionfitter_lofar": 116, "beamforming_util": 117, "stationgalacticcalibr": 118, "stationpulsefind": 119, "stationrfifilt": 120, "channelblockoffsetfitt": 122, "triggerboardrespons": 124, "analogtodigitalconvert": 125, "base": [126, 127, 229], "beamformingdirectionfitt": 128, "channeladdcabledelai": 129, "channelantennadedispers": 130, "channelbandpassfilt": 131, "channelcwnotchfilt": 132, "channelgalacticnoiseadd": 133, "channelgenericnoiseadd": 134, "channellengthadjust": 135, "channelresampl": 136, "channelsignalreconstructor": 137, "channelstopfilt": 138, "channeltemplatecorrel": 139, "channeltimeoffsetcalcul": 140, "channeltimewindow": 141, "correlationdirectionfitt": 142, "cosmicrayenergyreconstructor": 143, "custom": [144, 145, 146], "deltat": [145, 146], "calculateamplitudeperraysolut": 146, "efieldairtoicepropag": 147, "efieldradiointerferometricreconstruct": 148, "efieldtimedirectionfitt": 149, "efieldtovoltageconvert": 150, "efieldtovoltageconverterperefield": 151, "electricfieldbandpassfilt": 152, "electricfieldresampl": 153, "electricfieldsignalreconstructor": 154, "eventtypeidentifi": 155, "iftelectricfieldreconstructor": [156, 157, 158], "oper": 158, "io": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "rawtbbio": 161, "rawtbbio_metadata": 162, "rawtbbio_util": 163, "readlofardata": 164, "nuradiorecoio": 165, "readrnogdatamattak": 167, "corea": [168, 169, 170, 171, 172, 173, 174], "readcorea": 170, "readcoreasshow": 171, "readcoreasst": 172, "readcoreasstationgrid": 173, "simulationselector": 174, "eventread": 175, "eventwrit": 176, "event_parser_factori": 177, "snowshovel": [178, 179, 180], "readariannadata": 179, "readariannadatacalib": 180, "measured_nois": [181, 182, 183, 184, 185, 186], "noiseimporterroot": 183, "noiseimport": 185, "channelmeasurednoiseadd": 186, "neutrinodirectionreconstructor": [187, 188], "voltagetoefieldanalyticconverterforneutrino": 188, "neutrinovertexreconstructor": [189, 190, 191, 192], "create_lookup_t": 190, "neutrino2dvertexreconstructor": 191, "neutrino3dvertexreconstructor": 192, "phasedarrai": [193, 194], "sphericalwavefitt": 195, "templatedirectionfitt": 196, "calc_parameters_for_rnog_surface_trigg": 198, "envelopetrigg": 199, "highlowthreshold": 200, "multihighlowthreshold": 201, "powerintegr": 202, "rnog_surface_trigg": 203, "simplethreshold": 204, "triggertimeadjust": 205, "voltagetoanalyticefieldconvert": 206, "voltagetoefieldconvert": 207, "voltagetoefieldconverterperchannel": 208, "analytic_puls": 210, "bandpass_filt": 211, "cr_flux": 212, "dataserv": 213, "diodesimul": 214, "geometryutil": 216, "interferometri": 218, "io_util": 219, "log": [220, 241], "metaclass": [221, 243], "nois": 222, "particle_nam": 223, "signal_process": 224, "templat": [225, 239], "tracewindow": 227, "trace_util": 228, "standard": 229, "ar": 229, "antenna": [232, 234], "implemet": 232, "overview": [232, 242], "bicone_v8_infair": 232, "bicone_v8_inffirn": 232, "bicone_v8_inf_n1": 232, "32": 232, "78": 232, "createlpda_100mhz_inffirn": 232, "createlpda_inffirn_n1": 232, "createlpda_100mhz_z1cm_infirn_rg": 232, "createlpda_100mhz_z1cm_infirn_boresighttoboundari": 232, "createlpda_100mhz_z10cm_infirn_rg": 232, "createlpda_100mhz_z1m_infirn_rg": 232, "createlpda_100mhz_z2m_infirn_rg": 232, "createlpda_100mhz_z2m_infirn_backlobe_norg": 232, "createlpda_100mhz_z3m_inair_rg": 232, "createlpda_100mhz_z3m_infirn_boresighttoboundari": 232, "createlpda_100mhz_z3mandlpdalen_infirn_boresighttoboundari": 232, "createlpda_100mhz_z5m_infirn_rg": 232, "createlpda_100mhz_z10m_infirn_rg": 232, "createlpda_100mhz_z100m_infirn_rg": 232, "createlpda_100mhz_z200m_infirn_rg": 232, "createlpda_100mhz_infair": 232, "createlpda_100mhz_z1cm_inair_rg": 232, "createlpda_100mhz_z1m_infirn_rg_v2": 232, "dip7cm_hpol_inffirn": 232, "dip7cm_z260mm_infirn_rg": 232, "dip7cm_z1m_infirn_rg": 232, "dip7cm_z2m_infirn_rg": 232, "dip7cm_z3m_infirn_rg_nearhorizontalhd": 232, "dip7cm_z5m_infirn_rg": 232, "dip7cm_z10m_infirn_rg": 232, "dip7cm_z200m_infirn_rg": 232, "dip7cm_z100m_infirn_rg": 232, "dip7cm_infair_s12": 232, "dip7cm_z270mm_inair": 232, "dip7cm_z1m_inair": 232, "dip7cm_z1m_inair_rg_nearhorizontalhd": 232, "dip7cm_z1m_inair_rg_nearhorizontalhd2": 232, "dip7cm_z2m_inair": 232, "dip7cm_z5m_inair": 232, "rnog_vpol_4inch_center_n1": 232, "73": 232, "rnog_vpol_4inch_half_n1": 232, "rnog_vpol_4inch_wall_n1": 232, "rnog_vpol_v2_5inch_center_n1": 232, "75": 232, "rnog_quadslot_v1_n1": 232, "74": 232, "rnog_quadslot_v2_n1": 232, "rnog_quadslot_v2_rescaled_finefreq": 232, "rnog_quadslot_v3_air_rescaled_to_n1": 232, "skala_inffirn": 232, "rnog_vpol_v1_n1": 232, "fourslot_inffirn": 232, "greenland_vpol_inffirn": 232, "trislot_rnog": 232, "dipole_ara_bicone_infinitefirn": 232, "xfdtd_hpol_150mmhole_n1": 232, "xfdtd_vpol_crossfeed_150mmhole_n1": 232, "78_inffirn": 232, "format": 233, "databas": [233, 235], "json": 233, "dictionari": 233, "chain": [233, 235], "genericdetector": 233, "chang": 233, "read": [233, 238], "viewer": 233, "properti": 234, "tabl": [234, 239, 245], "further": 234, "discuss": 234, "adc": 234, "rno": 235, "g": 235, "interfac": 235, "displai": 237, "nur": 238, "them": 238, "philosophi": 238, "basic": [238, 241], "storag": 238, "For": 238, "radio": 238, "simshow": 238, "simemitt": 238, "simstat": 238, "basetrac": 238, "electr": [238, 239], "hybrid": 238, "inform": 238, "vertex": 239, "reconstruct": 239, "creat": 239, "lookup": 239, "2d": 239, "v": 239, "3d": 239, "reconstructor": 239, "start": 242, "e": 242, "alter": 242, "singleton": 243, "welcom": 245, "nuradio": 245, "indic": 245}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing to NuRadioMC": [[0, "contributing-to-nuradiomc"]], "Workflow": [[0, "workflow"]], "Coding conventions": [[0, "coding-conventions"]], "How to": [[0, "how-to"]], "Writing docstrings": [[0, "writing-docstrings"]], "Update the version number / dependencies": [[0, "update-the-version-number-dependencies"]], "Writing additional documentation": [[0, "writing-additional-documentation"]], "Compiling the documentation": [[0, "compiling-the-documentation"]], "Headings and text": [[0, "headings-and-text"]], "Lists": [[0, "lists"]], "Links and cross-references": [[0, "links-and-cross-references"]], "Showing code": [[0, "showing-code"]], "Some notes on conventions": [[1, "some-notes-on-conventions"]], "Coordinates": [[1, "coordinates"]], "Default coordinate system": [[1, "default-coordinate-system"]], "Points": [[1, "points"]], "Angles": [[1, "angles"]], "Directions": [[1, "directions"]], "Electic Fields": [[1, "electic-fields"]], "Units": [[1, "units"]], "Particle types": [[1, "particle-types"]], "Fourier transformations": [[1, "fourier-transformations"]], "Installing NuRadioMC / NuRadioReco": [[2, "installing-nuradiomc-nuradioreco"]], "Requirements": [[2, "requirements"]], "Installation using pip": [[2, "installation-using-pip"]], "Development version": [[2, "development-version"]], "PYTHONPATH": [[2, "pythonpath"]], "Manual installation": [[2, "manual-installation"]], "Pip-installable dependencies": [[2, "pip-installable-dependencies"]], "Core Dependencies": [[2, "core-dependencies"]], "Optional Dependencies": [[2, "optional-dependencies"]], "Not pip-installable packages": [[2, "not-pip-installable-packages"]], "Introduction": [[3, "introduction"], [4, "introduction"]], "NuRadioMC.EvtGen package": [[5, "module-NuRadioMC.EvtGen"]], "Submodules": [[5, "submodules"], [18, "submodules"], [19, "submodules"], [25, "submodules"], [31, "submodules"], [35, "submodules"], [66, "submodules"], [67, "submodules"], [69, "submodules"], [73, "submodules"], [90, "submodules"], [109, "submodules"], [110, "submodules"], [113, "submodules"], [115, "submodules"], [121, "submodules"], [126, "submodules"], [145, "submodules"], [156, "submodules"], [159, "submodules"], [160, "submodules"], [166, "submodules"], [168, "submodules"], [178, "submodules"], [181, "submodules"], [182, "submodules"], [184, "submodules"], [187, "submodules"], [189, "submodules"], [193, "submodules"], [197, "submodules"], [209, "submodules"]], "NuRadioMC.EvtGen.NuRadioMCtoAraSim module": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "NuRadioMC.EvtGen.NuRadioProposal module": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "NuRadioMC.EvtGen.create_tau_tab module": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "NuRadioMC.EvtGen.generate_cylinder module": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "NuRadioMC.EvtGen.generate_unforced module": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "NuRadioMC.EvtGen.generator module": [[11, "module-NuRadioMC.EvtGen.generator"]], "NuRadioMC.EvtGen.generator_ASCII module": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "NuRadioMC.EvtGen.generator_skeleton module": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "NuRadioMC.EvtGen.hdf5_to_ASCII module": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "NuRadioMC.EvtGen.proposal_table_manager module": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "NuRadioMC.EvtGen.readARAEventList module": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "NuRadioMC.EvtGen.readEventList_ASCII module": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "NuRadioMC.SignalGen package": [[18, "module-NuRadioMC.SignalGen"]], "Subpackages": [[18, "subpackages"], [66, "subpackages"], [109, "subpackages"], [144, "subpackages"], [159, "subpackages"], [181, "subpackages"]], "NuRadioMC.SignalGen.ARZ package": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ module": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "NuRadioMC.SignalGen.HCRB2017 module": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "NuRadioMC.SignalGen.askaryan module": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "NuRadioMC.SignalGen.emitter module": [[23, "module-NuRadioMC.SignalGen.emitter"]], "NuRadioMC.SignalGen.parametrizations module": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "NuRadioMC.SignalProp package": [[25, "module-NuRadioMC.SignalProp"]], "NuRadioMC.SignalProp.analyticraytracing module": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "NuRadioMC.SignalProp.directRayTracing module": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "NuRadioMC.SignalProp.propagation module": [[28, "module-NuRadioMC.SignalProp.propagation"]], "NuRadioMC.SignalProp.propagation_base_class module": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "NuRadioMC.SignalProp.radioproparaytracing module": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "NuRadioMC.simulation package": [[31, "module-NuRadioMC.simulation"]], "NuRadioMC.simulation.output_writer_hdf5 module": [[32, "module-NuRadioMC.simulation.output_writer_hdf5"]], "NuRadioMC.simulation.simulation module": [[33, "module-NuRadioMC.simulation.simulation"]], "NuRadioMC.simulation.time_logger module": [[34, "module-NuRadioMC.simulation.time_logger"]], "NuRadioMC.utilities package": [[35, "module-NuRadioMC.utilities"]], "NuRadioMC.utilities.Veff module": [[36, "module-NuRadioMC.utilities.Veff"]], "NuRadioMC.utilities.attenuation module": [[37, "module-NuRadioMC.utilities.attenuation"]], "NuRadioMC.utilities.cross_sections module": [[38, "module-NuRadioMC.utilities.cross_sections"]], "NuRadioMC.utilities.dump_hdf5 module": [[39, "module-NuRadioMC.utilities.dump_hdf5"]], "NuRadioMC.utilities.earth_attenuation module": [[40, "module-NuRadioMC.utilities.earth_attenuation"]], "NuRadioMC.utilities.fluxes module": [[41, "module-NuRadioMC.utilities.fluxes"]], "NuRadioMC.utilities.inelasticities module": [[42, "module-NuRadioMC.utilities.inelasticities"]], "NuRadioMC.utilities.medium module": [[43, "module-NuRadioMC.utilities.medium"]], "NuRadioMC.utilities.medium_base module": [[44, "module-NuRadioMC.utilities.medium_base"]], "NuRadioMC.utilities.merge_hdf5 module": [[45, "module-NuRadioMC.utilities.merge_hdf5"]], "NuRadioMC.utilities.muon_flux module": [[46, "module-NuRadioMC.utilities.muon_flux"]], "NuRadioMC.utilities.plotting module": [[47, "module-NuRadioMC.utilities.plotting"]], "NuRadioMC.utilities.runner module": [[48, "module-NuRadioMC.utilities.runner"]], "NuRadioMC.utilities.runner_example module": [[49, "module-NuRadioMC.utilities.runner_example"]], "NuRadioMC.utilities.split_hdf5 module": [[50, "module-NuRadioMC.utilities.split_hdf5"]], "HDF5 output structure": [[51, "hdf5-output-structure"]], "Opening the HDF5 file": [[51, "opening-the-hdf5-file"], [52, "opening-the-hdf5-file"]], "What\u2019s behind the HDF5 files": [[51, "what-s-behind-the-hdf5-files"], [52, "what-s-behind-the-hdf5-files"]], "HDF5 structure": [[51, "hdf5-structure"], [52, "hdf5-structure"]], "HDF5 file attributes": [[51, "hdf5-file-attributes"], [52, "hdf5-file-attributes"]], "HDF5 attributes": [[51, "id1"]], "HDF5 station attributes": [[51, "id2"]], "HDF5 file contents": [[51, "hdf5-file-contents"], [52, "hdf5-file-contents"]], "HDF5 items": [[51, "id3"]], "Station data": [[51, "station-data"], [52, "station-data"]], "HDF5 station items": [[51, "id4"]], "HDF5 output structure (v2.2)": [[52, "hdf5-output-structure-v2-2"]], "Event Generation": [[53, "event-generation"]], "Events in a cylindrical volume": [[53, "events-in-a-cylindrical-volume"]], "Input parameters": [[53, "input-parameters"]], "Data sets and attributes": [[53, "data-sets-and-attributes"]], "Particle codes used in NuRadioMC": [[53, "id1"]], "Atmospheric muons generated on a flat surface": [[53, "atmospheric-muons-generated-on-a-flat-surface"]], "NuRadioProposal as a standalone module": [[53, "nuradioproposal-as-a-standalone-module"]], "Example: Multi-station coincidences": [[54, "example-multi-station-coincidences"]], "1. Generation of detector layout": [[54, "generation-of-detector-layout"]], "2. Detector simulation": [[54, "detector-simulation"]], "3. Running the simulation": [[54, "running-the-simulation"]], "4. Analyzing the output": [[54, "analyzing-the-output"]], "Example: Calculating expected sensitivities": [[55, "example-calculating-expected-sensitivities"]], "Ice and attenuation models": [[56, "ice-and-attenuation-models"]], "Ice model implementation": [[56, "ice-model-implementation"]], "The IceModel and IceModel_Simple class": [[56, "the-icemodel-and-icemodel-simple-class"]], "RadioPropaIceWrapper": [[56, "radiopropaicewrapper"]], "Available models in NuRadioMC": [[56, "available-models-in-nuradiomc"]], "Simple ice models": [[56, "simple-ice-models"]], "Simple Ice Models": [[56, "id1"]], "RadioPropa ice models": [[56, "radiopropa-ice-models"]], "Attenuation model": [[56, "attenuation-model"]], "Using specific models": [[56, "using-specific-models"]], "Example script": [[56, "example-script"]], "Birefringence Ice Models": [[56, "birefringence-ice-models"]], "Available Birefringence Ice Models": [[56, "available-birefringence-ice-models"]], "South Pole Birefringence Ice Models": [[56, "id2"]], "Greenland Birefringence Ice Models": [[56, "id3"]], "Ice-Flow Direction": [[56, "ice-flow-direction"]], "Available Birefringence Propagation Options": [[56, "available-birefringence-propagation-options"]], "Using specific birefringence models": [[56, "using-specific-birefringence-models"]], "Running on a cluster": [[57, "running-on-a-cluster"]], "1. Generate input files": [[57, "generate-input-files"]], "2. Generate job *.sh scripts": [[57, "generate-job-sh-scripts"]], "3. Submit jobs to the cluster": [[57, "submit-jobs-to-the-cluster"]], "4. Merge individual hdf5 output files": [[57, "merge-individual-hdf5-output-files"]], "Signal Generation (emitter)": [[58, "signal-generation-emitter"]], "SPice Pulser": [[58, "spice-pulser"]], "Signal Generation (from in-ice showers)": [[59, "signal-generation-from-in-ice-showers"]], "Frequency-domain parameterisations": [[59, "frequency-domain-parameterisations"]], "ARZ - semi-analytical model": [[59, "arz-semi-analytical-model"]], "Validity of the parameterisations and the ARZ model": [[59, "validity-of-the-parameterisations-and-the-arz-model"]], "Timing": [[59, "timing"]], "Using the same shower. Random seed": [[59, "using-the-same-shower-random-seed"]], "FFT normalisation": [[59, "fft-normalisation"]], "Signal Propagation": [[60, "signal-propagation"]], "Propagation module": [[60, "propagation-module"]], "Ray tracing": [[60, "ray-tracing"]], "Analytical ray tracer": [[60, "analytical-ray-tracer"]], "GSL speed-boost": [[60, "gsl-speed-boost"]], "RadioPropa numerical ray tracer (in development)": [[60, "radiopropa-numerical-ray-tracer-in-development"]], "Example scripts": [[60, "example-scripts"]], "How to calculate an analytic ray path": [[60, "how-to-calculate-an-analytic-ray-path"]], "How to calculate an radiopropa ray path": [[60, "how-to-calculate-an-radiopropa-ray-path"]], "Simulation and configuration": [[61, "simulation-and-configuration"]], "Steering files": [[61, "steering-files"]], "Config files": [[61, "config-files"]], "Detector description": [[61, "detector-description"]], "Detector simulation": [[61, "detector-simulation"]], "Example: Calculating effective volume": [[62, "example-calculating-effective-volume"]], "Run an effective volume simulation": [[62, "run-an-effective-volume-simulation"]], "Generating the input event list": [[62, "generating-the-input-event-list"]], "Running the simulation": [[62, "running-the-simulation"]], "More details: the detector description": [[62, "more-details-the-detector-description"]], "More details: the config file": [[62, "more-details-the-config-file"]], "Visualization of results": [[62, "visualization-of-results"]], "Code Documentation": [[63, "code-documentation"], [231, "code-documentation"]], "Manuals": [[64, "manuals"], [240, "manuals"]], "NuRadioMC Documentation": [[65, "nuradiomc-documentation"]], "NuRadioReco.detector package": [[66, "module-NuRadioReco.detector"]], "NuRadioReco.detector.ARA package": [[67, "module-NuRadioReco.detector.ARA"]], "NuRadioReco.detector.ARA.analog_components module": [[68, "module-NuRadioReco.detector.ARA.analog_components"]], "NuRadioReco.detector.ARIANNA package": [[69, "module-NuRadioReco.detector.ARIANNA"]], "NuRadioReco.detector.ARIANNA.analog_components module": [[70, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module": [[71, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "NuRadioReco.detector.LOFAR package": [[72, "module-NuRadioReco.detector.LOFAR"]], "NuRadioReco.detector.RNO_G package": [[73, "module-NuRadioReco.detector.RNO_G"]], "NuRadioReco.detector.RNO_G.analog_components module": [[74, "module-NuRadioReco.detector.RNO_G.analog_components"]], "NuRadioReco.detector.RNO_G.db_mongo_read module": [[75, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "NuRadioReco.detector.RNO_G.db_mongo_write module": [[76, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "NuRadioReco.detector.RNO_G.rnog_detector module": [[77, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "NuRadioReco.detector.amp module": [[78, "module-NuRadioReco.detector.amp"]], "NuRadioReco.detector.antennapattern module": [[79, "module-NuRadioReco.detector.antennapattern"]], "NuRadioReco.detector.detector module": [[80, "module-NuRadioReco.detector.detector"]], "NuRadioReco.detector.detector_base module": [[81, "module-NuRadioReco.detector.detector_base"]], "NuRadioReco.detector.detector_sql module": [[82, "module-NuRadioReco.detector.detector_sql"]], "NuRadioReco.detector.detector_sys_uncertainties module": [[83, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "NuRadioReco.detector.filterresponse module": [[84, "module-NuRadioReco.detector.filterresponse"]], "NuRadioReco.detector.generic_detector module": [[85, "module-NuRadioReco.detector.generic_detector"]], "NuRadioReco.detector.response module": [[86, "module-NuRadioReco.detector.response"]], "NuRadioReco.detector.sql_to_json module": [[87, "module-NuRadioReco.detector.sql_to_json"]], "NuRadioReco.detector.test_detector_db module": [[88, "module-NuRadioReco.detector.test_detector_db"]], "NuRadioReco.detector.visualize_detector module": [[89, "module-NuRadioReco.detector.visualize_detector"]], "NuRadioReco.framework package": [[90, "module-NuRadioReco.framework"]], "NuRadioReco.framework.base_shower module": [[91, "module-NuRadioReco.framework.base_shower"]], "NuRadioReco.framework.base_station module": [[92, "module-NuRadioReco.framework.base_station"]], "NuRadioReco.framework.base_trace module": [[93, "module-NuRadioReco.framework.base_trace"]], "NuRadioReco.framework.channel module": [[94, "module-NuRadioReco.framework.channel"]], "NuRadioReco.framework.electric_field module": [[95, "module-NuRadioReco.framework.electric_field"]], "NuRadioReco.framework.emitter module": [[96, "module-NuRadioReco.framework.emitter"]], "NuRadioReco.framework.event module": [[97, "module-NuRadioReco.framework.event"]], "NuRadioReco.framework.hybrid_information module": [[98, "module-NuRadioReco.framework.hybrid_information"]], "NuRadioReco.framework.hybrid_shower module": [[99, "module-NuRadioReco.framework.hybrid_shower"]], "NuRadioReco.framework.parameter_serialization module": [[100, "module-NuRadioReco.framework.parameter_serialization"]], "NuRadioReco.framework.parameters module": [[101, "module-NuRadioReco.framework.parameters"]], "NuRadioReco.framework.particle module": [[102, "module-NuRadioReco.framework.particle"]], "NuRadioReco.framework.radio_shower module": [[103, "module-NuRadioReco.framework.radio_shower"]], "NuRadioReco.framework.sim_channel module": [[104, "module-NuRadioReco.framework.sim_channel"]], "NuRadioReco.framework.sim_emitter module": [[105, "module-NuRadioReco.framework.sim_emitter"]], "NuRadioReco.framework.sim_station module": [[106, "module-NuRadioReco.framework.sim_station"]], "NuRadioReco.framework.station module": [[107, "module-NuRadioReco.framework.station"]], "NuRadioReco.framework.trigger module": [[108, "module-NuRadioReco.framework.trigger"]], "NuRadioReco.modules package": [[109, "module-NuRadioReco.modules"]], "NuRadioReco.modules.ARA package": [[110, "module-NuRadioReco.modules.ARA"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator module": [[111, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.triggerSimulator module": [[112, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "NuRadioReco.modules.ARIANNA package": [[113, "module-NuRadioReco.modules.ARIANNA"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module": [[114, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "NuRadioReco.modules.LOFAR package": [[115, "module-NuRadioReco.modules.LOFAR"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module": [[116, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "NuRadioReco.modules.LOFAR.beamforming_utilities module": [[117, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module": [[118, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationPulseFinder module": [[119, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationRFIFilter module": [[120, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "NuRadioReco.modules.RNO_G package": [[121, "module-NuRadioReco.modules.RNO_G"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module": [[122, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module": [[123, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse module": [[124, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"]], "NuRadioReco.modules.analogToDigitalConverter module": [[125, "module-NuRadioReco.modules.analogToDigitalConverter"]], "NuRadioReco.modules.base package": [[126, "module-NuRadioReco.modules.base"]], "NuRadioReco.modules.base.module module": [[127, "module-NuRadioReco.modules.base.module"]], "NuRadioReco.modules.beamFormingDirectionFitter module": [[128, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "NuRadioReco.modules.channelAddCableDelay module": [[129, "module-NuRadioReco.modules.channelAddCableDelay"]], "NuRadioReco.modules.channelAntennaDedispersion module": [[130, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "NuRadioReco.modules.channelBandPassFilter module": [[131, "module-NuRadioReco.modules.channelBandPassFilter"]], "NuRadioReco.modules.channelCWNotchFilter module": [[132, "module-NuRadioReco.modules.channelCWNotchFilter"]], "NuRadioReco.modules.channelGalacticNoiseAdder module": [[133, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder module": [[134, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "NuRadioReco.modules.channelLengthAdjuster module": [[135, "module-NuRadioReco.modules.channelLengthAdjuster"]], "NuRadioReco.modules.channelResampler module": [[136, "module-NuRadioReco.modules.channelResampler"]], "NuRadioReco.modules.channelSignalReconstructor module": [[137, "module-NuRadioReco.modules.channelSignalReconstructor"]], "NuRadioReco.modules.channelStopFilter module": [[138, "module-NuRadioReco.modules.channelStopFilter"]], "NuRadioReco.modules.channelTemplateCorrelation module": [[139, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "NuRadioReco.modules.channelTimeOffsetCalculator module": [[140, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeWindow module": [[141, "module-NuRadioReco.modules.channelTimeWindow"]], "NuRadioReco.modules.correlationDirectionFitter module": [[142, "module-NuRadioReco.modules.correlationDirectionFitter"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor module": [[143, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.custom package": [[144, "module-NuRadioReco.modules.custom"]], "NuRadioReco.modules.custom.deltaT package": [[145, "module-NuRadioReco.modules.custom.deltaT"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module": [[146, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.efieldAirToIcePropagator module": [[147, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction module": [[148, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "NuRadioReco.modules.efieldTimeDirectionFitter module": [[149, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldToVoltageConverter module": [[150, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield module": [[151, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.electricFieldBandPassFilter module": [[152, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldResampler module": [[153, "module-NuRadioReco.modules.electricFieldResampler"]], "NuRadioReco.modules.electricFieldSignalReconstructor module": [[154, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "NuRadioReco.modules.eventTypeIdentifier module": [[155, "module-NuRadioReco.modules.eventTypeIdentifier"]], "NuRadioReco.modules.iftElectricFieldReconstructor package": [[156, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module": [[157, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators module": [[158, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "NuRadioReco.modules.io package": [[159, "module-NuRadioReco.modules.io"]], "NuRadioReco.modules.io.LOFAR package": [[160, "module-NuRadioReco.modules.io.LOFAR"]], "NuRadioReco.modules.io.LOFAR.rawTBBio module": [[161, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module": [[162, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module": [[163, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "NuRadioReco.modules.io.LOFAR.readLOFARData module": [[164, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "NuRadioReco.modules.io.NuRadioRecoio module": [[165, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "NuRadioReco.modules.io.RNO_G package": [[166, "module-NuRadioReco.modules.io.RNO_G"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module": [[167, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "NuRadioReco.modules.io.coreas package": [[168, "module-NuRadioReco.modules.io.coreas"]], "NuRadioReco.modules.io.coreas.coreas module": [[169, "module-NuRadioReco.modules.io.coreas.coreas"]], "NuRadioReco.modules.io.coreas.readCoREAS module": [[170, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASShower module": [[171, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASStation module": [[172, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid module": [[173, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "NuRadioReco.modules.io.coreas.simulationSelector module": [[174, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "NuRadioReco.modules.io.eventReader module": [[175, "module-NuRadioReco.modules.io.eventReader"]], "NuRadioReco.modules.io.eventWriter module": [[176, "module-NuRadioReco.modules.io.eventWriter"]], "NuRadioReco.modules.io.event_parser_factory module": [[177, "module-NuRadioReco.modules.io.event_parser_factory"]], "NuRadioReco.modules.io.snowshovel package": [[178, "module-NuRadioReco.modules.io.snowshovel"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData module": [[179, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module": [[180, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "NuRadioReco.modules.measured_noise package": [[181, "module-NuRadioReco.modules.measured_noise"]], "NuRadioReco.modules.measured_noise.ARIANNA package": [[182, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module": [[183, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.RNO_G package": [[184, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module": [[185, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module": [[186, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "NuRadioReco.modules.neutrinoDirectionReconstructor package": [[187, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module": [[188, "nuradioreco-modules-neutrinodirectionreconstructor-voltagetoefieldanalyticconverterforneutrinos-module"]], "NuRadioReco.modules.neutrinoVertexReconstructor package": [[189, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module": [[190, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module": [[191, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module": [[192, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "NuRadioReco.modules.phasedarray package": [[193, "module-NuRadioReco.modules.phasedarray"]], "NuRadioReco.modules.phasedarray.triggerSimulator module": [[194, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "NuRadioReco.modules.sphericalWaveFitter module": [[195, "module-NuRadioReco.modules.sphericalWaveFitter"]], "NuRadioReco.modules.templateDirectionFitter module": [[196, "module-NuRadioReco.modules.templateDirectionFitter"]], "NuRadioReco.modules.trigger package": [[197, "module-NuRadioReco.modules.trigger"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module": [[198, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "NuRadioReco.modules.trigger.envelopeTrigger module": [[199, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "NuRadioReco.modules.trigger.highLowThreshold module": [[200, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "NuRadioReco.modules.trigger.multiHighLowThreshold module": [[201, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "NuRadioReco.modules.trigger.powerIntegration module": [[202, "module-NuRadioReco.modules.trigger.powerIntegration"]], "NuRadioReco.modules.trigger.rnog_surface_trigger module": [[203, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "NuRadioReco.modules.trigger.simpleThreshold module": [[204, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "NuRadioReco.modules.triggerTimeAdjuster module": [[205, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter module": [[206, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter module": [[207, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel module": [[208, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "NuRadioReco.utilities package": [[209, "module-NuRadioReco.utilities"]], "NuRadioReco.utilities.analytic_pulse module": [[210, "module-NuRadioReco.utilities.analytic_pulse"]], "NuRadioReco.utilities.bandpass_filter module": [[211, "module-NuRadioReco.utilities.bandpass_filter"]], "NuRadioReco.utilities.cr_flux module": [[212, "module-NuRadioReco.utilities.cr_flux"]], "NuRadioReco.utilities.dataservers module": [[213, "module-NuRadioReco.utilities.dataservers"]], "NuRadioReco.utilities.diodeSimulator module": [[214, "module-NuRadioReco.utilities.diodeSimulator"]], "NuRadioReco.utilities.fft module": [[215, "module-NuRadioReco.utilities.fft"]], "NuRadioReco.utilities.geometryUtilities module": [[216, "module-NuRadioReco.utilities.geometryUtilities"]], "NuRadioReco.utilities.ice module": [[217, "module-NuRadioReco.utilities.ice"]], "NuRadioReco.utilities.interferometry module": [[218, "module-NuRadioReco.utilities.interferometry"]], "NuRadioReco.utilities.io_utilities module": [[219, "module-NuRadioReco.utilities.io_utilities"]], "NuRadioReco.utilities.logging module": [[220, "module-NuRadioReco.utilities.logging"]], "NuRadioReco.utilities.metaclasses module": [[221, "module-NuRadioReco.utilities.metaclasses"]], "NuRadioReco.utilities.noise module": [[222, "module-NuRadioReco.utilities.noise"]], "NuRadioReco.utilities.particle_names module": [[223, "module-NuRadioReco.utilities.particle_names"]], "NuRadioReco.utilities.signal_processing module": [[224, "module-NuRadioReco.utilities.signal_processing"]], "NuRadioReco.utilities.templates module": [[225, "module-NuRadioReco.utilities.templates"]], "NuRadioReco.utilities.timing module": [[226, "module-NuRadioReco.utilities.timing"]], "NuRadioReco.utilities.traceWindows module": [[227, "module-NuRadioReco.utilities.traceWindows"]], "NuRadioReco.utilities.trace_utilities module": [[228, "module-NuRadioReco.utilities.trace_utilities"]], "NuRadioReco.utilities.units module": [[229, "module-NuRadioReco.utilities.units"]], "standard system of units": [[229, "standard-system-of-units"]], "The base units are:": [[229, "the-base-units-are"]], "NuRadioReco.utilities.version module": [[230, "module-NuRadioReco.utilities.version"]], "Antenna Models": [[232, "antenna-models"]], "Implemetation of Antenna Models": [[232, "implemetation-of-antenna-models"]], "Overview of available Antenna Models": [[232, "overview-of-available-antenna-models"]], "bicone_v8_InfAir": [[232, "bicone-v8-infair"]], "bicone_v8_InfFirn": [[232, "bicone-v8-inffirn"]], "bicone_v8_inf_n1.32": [[232, "bicone-v8-inf-n1-32"]], "bicone_v8_inf_n1.4": [[232, "bicone-v8-inf-n1-4"]], "bicone_v8_inf_n1.78": [[232, "bicone-v8-inf-n1-78"]], "createLPDA_100MHz_InfFirn": [[232, "createlpda-100mhz-inffirn"]], "createLPDA_InfFirn_n1.4": [[232, "createlpda-inffirn-n1-4"]], "createLPDA_100MHz_z1cm_InFirn_RG": [[232, "createlpda-100mhz-z1cm-infirn-rg"]], "createLPDA_100MHz_z1cm_InFirn_BoresightToBoundary": [[232, "createlpda-100mhz-z1cm-infirn-boresighttoboundary"]], "createLPDA_100MHz_z10cm_InFirn_RG": [[232, "createlpda-100mhz-z10cm-infirn-rg"]], "createLPDA_100MHz_z1m_InFirn_RG": [[232, "createlpda-100mhz-z1m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_RG": [[232, "createlpda-100mhz-z2m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_Backlobe_NoRG": [[232, "createlpda-100mhz-z2m-infirn-backlobe-norg"]], "createLPDA_100MHz_z3m_InAir_RG": [[232, "createlpda-100mhz-z3m-inair-rg"]], "createLPDA_100MHz_z3m_InFirn_BoresightToBoundary": [[232, "createlpda-100mhz-z3m-infirn-boresighttoboundary"]], "createLPDA_100MHz_z3mAndLPDALen_InFirn_BoresightToBoundary": [[232, "createlpda-100mhz-z3mandlpdalen-infirn-boresighttoboundary"]], "createLPDA_100MHz_z5m_InFirn_RG": [[232, "createlpda-100mhz-z5m-infirn-rg"]], "createLPDA_100MHz_z10m_InFirn_RG": [[232, "createlpda-100mhz-z10m-infirn-rg"]], "createLPDA_100MHz_z100m_InFirn_RG": [[232, "createlpda-100mhz-z100m-infirn-rg"]], "createLPDA_100MHz_z200m_InFirn_RG": [[232, "createlpda-100mhz-z200m-infirn-rg"]], "createLPDA_100MHz_InfAir": [[232, "createlpda-100mhz-infair"]], "createLPDA_100MHz_z1cm_InAir_RG": [[232, "createlpda-100mhz-z1cm-inair-rg"]], "createLPDA_100MHz_z1m_InFirn_RG_v2": [[232, "createlpda-100mhz-z1m-infirn-rg-v2"]], "dip7cm_hpol_infFirn": [[232, "dip7cm-hpol-inffirn"]], "dip7cm_z260mm_InFirn_RG": [[232, "dip7cm-z260mm-infirn-rg"]], "dip7cm_z1m_InFirn_RG": [[232, "dip7cm-z1m-infirn-rg"]], "dip7cm_z2m_InFirn_RG": [[232, "dip7cm-z2m-infirn-rg"]], "dip7cm_z3m_InFirn_RG_NearHorizontalHD": [[232, "dip7cm-z3m-infirn-rg-nearhorizontalhd"]], "dip7cm_z5m_InFirn_RG": [[232, "dip7cm-z5m-infirn-rg"]], "dip7cm_z10m_InFirn_RG": [[232, "dip7cm-z10m-infirn-rg"]], "dip7cm_z200m_InFirn_RG": [[232, "dip7cm-z200m-infirn-rg"]], "dip7cm_z100m_InFirn_RG": [[232, "dip7cm-z100m-infirn-rg"]], "dip7cm_infAir_s12": [[232, "dip7cm-infair-s12"]], "dip7cm_z270mm_InAir": [[232, "dip7cm-z270mm-inair"]], "dip7cm_z1m_InAir": [[232, "dip7cm-z1m-inair"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD": [[232, "dip7cm-z1m-inair-rg-nearhorizontalhd"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD2": [[232, "dip7cm-z1m-inair-rg-nearhorizontalhd2"]], "dip7cm_z2m_InAir": [[232, "dip7cm-z2m-inair"]], "dip7cm_z5m_InAir": [[232, "dip7cm-z5m-inair"]], "RNOG_vpol_4inch_center_n1.73": [[232, "rnog-vpol-4inch-center-n1-73"]], "RNOG_vpol_4inch_half_n1.73": [[232, "rnog-vpol-4inch-half-n1-73"]], "RNOG_vpol_4inch_wall_n1.73": [[232, "rnog-vpol-4inch-wall-n1-73"]], "RNOG_vpol_v2_5inch_center_n1.75": [[232, "rnog-vpol-v2-5inch-center-n1-75"]], "RNOG_quadslot_v1_n1.74": [[232, "rnog-quadslot-v1-n1-74"]], "RNOG_quadslot_v2_n1.74": [[232, "rnog-quadslot-v2-n1-74"]], "RNOG_quadslot_v2_rescaled_fineFreq": [[232, "rnog-quadslot-v2-rescaled-finefreq"]], "RNOG_quadslot_v3_air_rescaled_to_n1.74": [[232, "rnog-quadslot-v3-air-rescaled-to-n1-74"]], "SKALA_InfFirn": [[232, "skala-inffirn"]], "Additional Models": [[232, "additional-models"]], "RNOG_vpol_v1_n1.4": [[232, "rnog-vpol-v1-n1-4"]], "RNOG_vpol_v1_n1.73": [[232, "rnog-vpol-v1-n1-73"]], "fourslot_InfFirn": [[232, "fourslot-inffirn"]], "greenland_vpol_InfFirn": [[232, "greenland-vpol-inffirn"]], "trislot_RNOG": [[232, "trislot-rnog"]], "dipole_ARA_bicone_infinitefirn": [[232, "dipole-ara-bicone-infinitefirn"]], "XFDTD_Hpol_150mmHole_n1.78": [[232, "xfdtd-hpol-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78": [[232, "xfdtd-vpol-crossfeed-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78_InfFirn": [[232, "xfdtd-vpol-crossfeed-150mmhole-n1-78-inffirn"]], "Detector Description": [[233, "detector-description"], [236, "detector-description"]], "The Detector Class": [[233, "the-detector-class"]], "Detector Description Formats": [[233, "detector-description-formats"]], "DataBase": [[233, "database"]], "JSON": [[233, "json"]], "Dictionary": [[233, "dictionary"]], "Signal Chain Responses": [[233, "signal-chain-responses"]], "GenericDetector": [[233, "genericdetector"]], "Event-Specific Changes": [[233, "event-specific-changes"]], "Detector Description in Event Files": [[233, "detector-description-in-event-files"]], "Writing the Detector": [[233, "writing-the-detector"]], "Reading the Detector": [[233, "reading-the-detector"]], "Detector Viewer": [[233, "detector-viewer"]], "Properties of Detector Description": [[234, "properties-of-detector-description"]], "Antenna Table": [[234, "antenna-table"]], "Further Discussion on Antenna Coordinates": [[234, "further-discussion-on-antenna-coordinates"]], "ADC Table": [[234, "adc-table"]], "The RNO-G detector class and database interface": [[235, "the-rno-g-detector-class-and-database-interface"]], "Detector time and database time": [[235, "detector-time-and-database-time"]], "Database structure": [[235, "database-structure"]], "Signal Chain": [[235, "signal-chain"]], "Response class": [[235, "response-class"]], "Detector class": [[235, "detector-class"]], "Event Display": [[237, "event-display"]], "Data Structure": [[238, "data-structure"]], ".nur Files and How to Use Them": [[238, "nur-files-and-how-to-use-them"]], "Philosophy and Basic Structure": [[238, "philosophy-and-basic-structure"]], "Reading and Writing .nur Files": [[238, "reading-and-writing-nur-files"]], "Parameter Storage": [[238, "parameter-storage"]], "For Developers": [[238, null]], "List of Data Classes": [[238, "list-of-data-classes"]], "Event": [[238, "event"]], "Radio Shower": [[238, "radio-shower"]], "SimShower": [[238, "simshower"]], "SimEmitter": [[238, "simemitter"]], "Particle": [[238, "particle"]], "Station": [[238, "station"]], "Trigger": [[238, "trigger"]], "SimStation": [[238, "simstation"]], "BaseTrace": [[238, "basetrace"]], "Electric Field": [[238, "electric-field"]], "Channel": [[238, "channel"]], "Hybrid Information": [[238, "hybrid-information"]], "Hybrid Shower": [[238, "hybrid-shower"]], "Hybrid Detector": [[238, "hybrid-detector"]], "Use the Vertex Reconstruction Modules": [[239, "use-the-vertex-reconstruction-modules"]], "Creating Lookup Tables": [[239, "creating-lookup-tables"]], "Creating Electric Field Templates": [[239, "creating-electric-field-templates"]], "2D vs. 3D Vertex Reconstructor": [[239, "d-vs-3d-vertex-reconstructor"]], "Modules": [[241, "modules"]], "Basic Module Structure": [[241, "basic-module-structure"]], "Logging": [[241, "logging"]], "overview of times": [[242, "overview-of-times"]], "ARIANNA specific details:": [[242, "arianna-specific-details"]], "Station time": [[242, "station-time"]], "Trace start times in channels": [[242, "trace-start-times-in-channels"]], "Trace start times in E-fields": [[242, "trace-start-times-in-e-fields"]], "overview of modules that alter time": [[242, "overview-of-modules-that-alter-time"]], "Utilities": [[243, "utilities"]], "Unit System": [[243, "unit-system"]], "Fourier Transformation": [[243, "fourier-transformation"]], "Metaclasses": [[243, "metaclasses"]], "Singleton": [[243, "singleton"]], "NuRadioReco Documentation": [[244, "nuradioreco-documentation"]], "Welcome to NuRadio\u2019s documentation!": [[245, "welcome-to-nuradio-s-documentation"]], "Contents:": [[245, null]], "Indices and tables": [[245, "indices-and-tables"]]}, "indexentries": {"nuradiomc.evtgen": [[5, "module-NuRadioMC.EvtGen"]], "module": [[5, "module-NuRadioMC.EvtGen"], [6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"], [7, "module-NuRadioMC.EvtGen.NuRadioProposal"], [8, "module-NuRadioMC.EvtGen.create_tau_tab"], [9, "module-NuRadioMC.EvtGen.generate_cylinder"], [10, "module-NuRadioMC.EvtGen.generate_unforced"], [11, "module-NuRadioMC.EvtGen.generator"], [12, "module-NuRadioMC.EvtGen.generator_ASCII"], [13, "module-NuRadioMC.EvtGen.generator_skeleton"], [14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"], [15, "module-NuRadioMC.EvtGen.proposal_table_manager"], [16, "module-NuRadioMC.EvtGen.readARAEventList"], [17, "module-NuRadioMC.EvtGen.readEventList_ASCII"], [18, "module-NuRadioMC.SignalGen"], [19, "module-NuRadioMC.SignalGen.ARZ"], [20, "module-NuRadioMC.SignalGen.ARZ.ARZ"], [21, "module-NuRadioMC.SignalGen.HCRB2017"], [22, "module-NuRadioMC.SignalGen.askaryan"], [23, "module-NuRadioMC.SignalGen.emitter"], [24, "module-NuRadioMC.SignalGen.parametrizations"], [25, "module-NuRadioMC.SignalProp"], [26, "module-NuRadioMC.SignalProp.analyticraytracing"], [27, "module-NuRadioMC.SignalProp.directRayTracing"], [28, "module-NuRadioMC.SignalProp.propagation"], [29, "module-NuRadioMC.SignalProp.propagation_base_class"], [30, "module-NuRadioMC.SignalProp.radioproparaytracing"], [31, "module-NuRadioMC.simulation"], [32, "module-NuRadioMC.simulation.output_writer_hdf5"], [33, "module-NuRadioMC.simulation.simulation"], [34, "module-NuRadioMC.simulation.time_logger"], [35, "module-NuRadioMC.utilities"], [36, "module-NuRadioMC.utilities.Veff"], [37, "module-NuRadioMC.utilities.attenuation"], [38, "module-NuRadioMC.utilities.cross_sections"], [39, "module-NuRadioMC.utilities.dump_hdf5"], [40, "module-NuRadioMC.utilities.earth_attenuation"], [41, "module-NuRadioMC.utilities.fluxes"], [42, "module-NuRadioMC.utilities.inelasticities"], [43, "module-NuRadioMC.utilities.medium"], [44, "module-NuRadioMC.utilities.medium_base"], [45, "module-NuRadioMC.utilities.merge_hdf5"], [46, "module-NuRadioMC.utilities.muon_flux"], [47, "module-NuRadioMC.utilities.plotting"], [48, "module-NuRadioMC.utilities.runner"], [49, "module-NuRadioMC.utilities.runner_example"], [50, "module-NuRadioMC.utilities.split_hdf5"], [66, "module-NuRadioReco.detector"], [67, "module-NuRadioReco.detector.ARA"], [68, "module-NuRadioReco.detector.ARA.analog_components"], [69, "module-NuRadioReco.detector.ARIANNA"], [70, "module-NuRadioReco.detector.ARIANNA.analog_components"], [71, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"], [72, "module-NuRadioReco.detector.LOFAR"], [73, "module-NuRadioReco.detector.RNO_G"], [74, "module-NuRadioReco.detector.RNO_G.analog_components"], [75, "module-NuRadioReco.detector.RNO_G.db_mongo_read"], [76, "module-NuRadioReco.detector.RNO_G.db_mongo_write"], [77, "module-NuRadioReco.detector.RNO_G.rnog_detector"], [78, "module-NuRadioReco.detector.amp"], [79, "module-NuRadioReco.detector.antennapattern"], [80, "module-NuRadioReco.detector.detector"], [81, "module-NuRadioReco.detector.detector_base"], [82, "module-NuRadioReco.detector.detector_sql"], [83, "module-NuRadioReco.detector.detector_sys_uncertainties"], [84, "module-NuRadioReco.detector.filterresponse"], [85, "module-NuRadioReco.detector.generic_detector"], [86, "module-NuRadioReco.detector.response"], [87, "module-NuRadioReco.detector.sql_to_json"], [88, "module-NuRadioReco.detector.test_detector_db"], [89, "module-NuRadioReco.detector.visualize_detector"], [90, "module-NuRadioReco.framework"], [91, "module-NuRadioReco.framework.base_shower"], [92, "module-NuRadioReco.framework.base_station"], [93, "module-NuRadioReco.framework.base_trace"], [94, "module-NuRadioReco.framework.channel"], [95, "module-NuRadioReco.framework.electric_field"], [96, "module-NuRadioReco.framework.emitter"], [97, "module-NuRadioReco.framework.event"], [98, "module-NuRadioReco.framework.hybrid_information"], [99, "module-NuRadioReco.framework.hybrid_shower"], [100, "module-NuRadioReco.framework.parameter_serialization"], [101, "module-NuRadioReco.framework.parameters"], [102, "module-NuRadioReco.framework.particle"], [103, "module-NuRadioReco.framework.radio_shower"], [104, "module-NuRadioReco.framework.sim_channel"], [105, "module-NuRadioReco.framework.sim_emitter"], [106, "module-NuRadioReco.framework.sim_station"], [107, "module-NuRadioReco.framework.station"], [108, "module-NuRadioReco.framework.trigger"], [109, "module-NuRadioReco.modules"], [110, "module-NuRadioReco.modules.ARA"], [111, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"], [112, "module-NuRadioReco.modules.ARA.triggerSimulator"], [113, "module-NuRadioReco.modules.ARIANNA"], [114, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"], [115, "module-NuRadioReco.modules.LOFAR"], [116, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"], [117, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"], [118, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"], [119, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"], [120, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"], [121, "module-NuRadioReco.modules.RNO_G"], [122, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"], [123, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"], [124, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"], [125, "module-NuRadioReco.modules.analogToDigitalConverter"], [126, "module-NuRadioReco.modules.base"], [127, "module-NuRadioReco.modules.base.module"], [128, "module-NuRadioReco.modules.beamFormingDirectionFitter"], [129, "module-NuRadioReco.modules.channelAddCableDelay"], [130, "module-NuRadioReco.modules.channelAntennaDedispersion"], [131, "module-NuRadioReco.modules.channelBandPassFilter"], [132, "module-NuRadioReco.modules.channelCWNotchFilter"], [133, "module-NuRadioReco.modules.channelGalacticNoiseAdder"], [134, "module-NuRadioReco.modules.channelGenericNoiseAdder"], [135, "module-NuRadioReco.modules.channelLengthAdjuster"], [136, "module-NuRadioReco.modules.channelResampler"], [137, "module-NuRadioReco.modules.channelSignalReconstructor"], [138, "module-NuRadioReco.modules.channelStopFilter"], [139, "module-NuRadioReco.modules.channelTemplateCorrelation"], [140, "module-NuRadioReco.modules.channelTimeOffsetCalculator"], [141, "module-NuRadioReco.modules.channelTimeWindow"], [142, "module-NuRadioReco.modules.correlationDirectionFitter"], [143, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"], [144, "module-NuRadioReco.modules.custom"], [145, "module-NuRadioReco.modules.custom.deltaT"], [146, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"], [147, "module-NuRadioReco.modules.efieldAirToIcePropagator"], [148, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"], [149, "module-NuRadioReco.modules.efieldTimeDirectionFitter"], [150, "module-NuRadioReco.modules.efieldToVoltageConverter"], [151, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"], [152, "module-NuRadioReco.modules.electricFieldBandPassFilter"], [153, "module-NuRadioReco.modules.electricFieldResampler"], [154, "module-NuRadioReco.modules.electricFieldSignalReconstructor"], [155, "module-NuRadioReco.modules.eventTypeIdentifier"], [156, "module-NuRadioReco.modules.iftElectricFieldReconstructor"], [157, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"], [158, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"], [159, "module-NuRadioReco.modules.io"], [160, "module-NuRadioReco.modules.io.LOFAR"], [161, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"], [162, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"], [163, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"], [164, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"], [165, "module-NuRadioReco.modules.io.NuRadioRecoio"], [166, "module-NuRadioReco.modules.io.RNO_G"], [167, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"], [168, "module-NuRadioReco.modules.io.coreas"], [169, "module-NuRadioReco.modules.io.coreas.coreas"], [170, "module-NuRadioReco.modules.io.coreas.readCoREAS"], [171, "module-NuRadioReco.modules.io.coreas.readCoREASShower"], [172, "module-NuRadioReco.modules.io.coreas.readCoREASStation"], [173, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"], [174, "module-NuRadioReco.modules.io.coreas.simulationSelector"], [175, "module-NuRadioReco.modules.io.eventReader"], [176, "module-NuRadioReco.modules.io.eventWriter"], [177, "module-NuRadioReco.modules.io.event_parser_factory"], [178, "module-NuRadioReco.modules.io.snowshovel"], [179, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"], [180, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"], [181, "module-NuRadioReco.modules.measured_noise"], [182, "module-NuRadioReco.modules.measured_noise.ARIANNA"], [183, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"], [184, "module-NuRadioReco.modules.measured_noise.RNO_G"], [185, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"], [186, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"], [187, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"], [189, "module-NuRadioReco.modules.neutrinoVertexReconstructor"], [190, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"], [191, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"], [192, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"], [193, "module-NuRadioReco.modules.phasedarray"], [194, "module-NuRadioReco.modules.phasedarray.triggerSimulator"], [195, "module-NuRadioReco.modules.sphericalWaveFitter"], [196, "module-NuRadioReco.modules.templateDirectionFitter"], [197, "module-NuRadioReco.modules.trigger"], [198, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"], [199, "module-NuRadioReco.modules.trigger.envelopeTrigger"], [200, "module-NuRadioReco.modules.trigger.highLowThreshold"], [201, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"], [202, "module-NuRadioReco.modules.trigger.powerIntegration"], [203, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"], [204, "module-NuRadioReco.modules.trigger.simpleThreshold"], [205, "module-NuRadioReco.modules.triggerTimeAdjuster"], [206, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"], [207, "module-NuRadioReco.modules.voltageToEfieldConverter"], [208, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"], [209, "module-NuRadioReco.utilities"], [210, "module-NuRadioReco.utilities.analytic_pulse"], [211, "module-NuRadioReco.utilities.bandpass_filter"], [212, "module-NuRadioReco.utilities.cr_flux"], [213, "module-NuRadioReco.utilities.dataservers"], [214, "module-NuRadioReco.utilities.diodeSimulator"], [215, "module-NuRadioReco.utilities.fft"], [216, "module-NuRadioReco.utilities.geometryUtilities"], [217, "module-NuRadioReco.utilities.ice"], [218, "module-NuRadioReco.utilities.interferometry"], [219, "module-NuRadioReco.utilities.io_utilities"], [220, "module-NuRadioReco.utilities.logging"], [221, "module-NuRadioReco.utilities.metaclasses"], [222, "module-NuRadioReco.utilities.noise"], [223, "module-NuRadioReco.utilities.particle_names"], [224, "module-NuRadioReco.utilities.signal_processing"], [225, "module-NuRadioReco.utilities.templates"], [226, "module-NuRadioReco.utilities.timing"], [227, "module-NuRadioReco.utilities.traceWindows"], [228, "module-NuRadioReco.utilities.trace_utilities"], [229, "module-NuRadioReco.utilities.units"], [230, "module-NuRadioReco.utilities.version"]], "nuradiomc.evtgen.nuradiomctoarasim": [[6, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "nuradiomc.evtgen.nuradioproposal": [[7, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "proposalfunctions (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions"]], "secondaryproperties (class in nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.SecondaryProperties"]], "get_decays() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_decays"]], "get_secondaries_array() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_secondaries_array"]], "is_em_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_em_primary"]], "is_had_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_had_primary"]], "is_shower_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.is_shower_primary"]], "particle_code() (in module nuradiomc.evtgen.nuradioproposal)": [[7, "NuRadioMC.EvtGen.NuRadioProposal.particle_code"]], "nuradiomc.evtgen.create_tau_tab": [[8, "module-NuRadioMC.EvtGen.create_tau_tab"]], "nuradiomc.evtgen.generate_cylinder": [[9, "module-NuRadioMC.EvtGen.generate_cylinder"]], "nuradiomc.evtgen.generate_unforced": [[10, "module-NuRadioMC.EvtGen.generate_unforced"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generate_unforced)": [[10, "NuRadioMC.EvtGen.generate_unforced.generate_eventlist_cylinder"]], "nuradiomc.evtgen.generator": [[11, "module-NuRadioMC.EvtGen.generator"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_eventlist_cylinder"]], "generate_surface_muons() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_surface_muons"]], "generate_vertex_positions() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.generate_vertex_positions"]], "get_energies() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energies"]], "get_energy_from_flux() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_energy_from_flux"]], "get_intersection_volume_neutrino() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_intersection_volume_neutrino"]], "get_product_position_time() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_product_position_time"]], "get_tau_95_length() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.get_tau_95_length"]], "ice_cube_nu_fit() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit"]], "ice_cube_nu_fit_2022() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit_2022"]], "intersection_box_ray() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.intersection_box_ray"]], "is_in_fiducial_volume() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.is_in_fiducial_volume"]], "load_input_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.load_input_hdf5"]], "mask_arrival_azimuth() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.mask_arrival_azimuth"]], "primary_energy_from_deposited() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.primary_energy_from_deposited"]], "set_volume_attributes() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.set_volume_attributes"]], "write_events_to_hdf5() (in module nuradiomc.evtgen.generator)": [[11, "NuRadioMC.EvtGen.generator.write_events_to_hdf5"]], "nuradiomc.evtgen.generator_ascii": [[12, "module-NuRadioMC.EvtGen.generator_ASCII"]], "generate_eventlist() (in module nuradiomc.evtgen.generator_ascii)": [[12, "NuRadioMC.EvtGen.generator_ASCII.generate_eventlist"]], "nuradiomc.evtgen.generator_skeleton": [[13, "module-NuRadioMC.EvtGen.generator_skeleton"]], "generate_my_events() (in module nuradiomc.evtgen.generator_skeleton)": [[13, "NuRadioMC.EvtGen.generator_skeleton.generate_my_events"]], "nuradiomc.evtgen.hdf5_to_ascii": [[14, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "nuradiomc.evtgen.proposal_table_manager": [[15, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "download_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.download_proposal_tables"]], "get_compiler() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.get_compiler"]], "produce_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables"]], "produce_proposal_tables_tarball() (in module nuradiomc.evtgen.proposal_table_manager)": [[15, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables_tarball"]], "nuradiomc.evtgen.readaraeventlist": [[16, "module-NuRadioMC.EvtGen.readARAEventList"]], "convert_to_hdf5() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.convert_to_hdf5"]], "read_ara_eventlist() (in module nuradiomc.evtgen.readaraeventlist)": [[16, "NuRadioMC.EvtGen.readARAEventList.read_ARA_eventlist"]], "nuradiomc.evtgen.readeventlist_ascii": [[17, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "read_eventlist() (in module nuradiomc.evtgen.readeventlist_ascii)": [[17, "NuRadioMC.EvtGen.readEventList_ASCII.read_eventlist"]], "nuradiomc.signalgen": [[18, "module-NuRadioMC.SignalGen"]], "nuradiomc.signalgen.arz": [[19, "module-NuRadioMC.SignalGen.ARZ"]], "arz (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ"]], "arz_tabulated (class in nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated"]], "nuradiomc.signalgen.arz.arz": [[20, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "em_fraction() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.em_fraction"]], "get_last_shower_profile_id() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_last_shower_profile_id"]], "get_shower_profile() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_shower_profile"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_time_trace"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.get_time_trace"]], "get_vector_potential() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential"]], "get_vector_potential() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential"]], "get_vector_potential_fast() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential_fast"]], "get_vector_potential_numba() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential_numba"]], "set_interpolation_factor() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor"]], "set_interpolation_factor2() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor2"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_seed"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.set_seed"]], "theta_to_thetaprime() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.theta_to_thetaprime"]], "thetaprime_to_theta() (in module nuradiomc.signalgen.arz.arz)": [[20, "NuRadioMC.SignalGen.ARZ.ARZ.thetaprime_to_theta"]], "nuradiomc.signalgen.hcrb2017": [[21, "module-NuRadioMC.SignalGen.HCRB2017"]], "gauss() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.gauss"]], "get_n_askdeptha() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_N_AskDepthA"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.hcrb2017)": [[21, "NuRadioMC.SignalGen.HCRB2017.get_time_trace"]], "nuradiomc.signalgen.askaryan": [[22, "module-NuRadioMC.SignalGen.askaryan"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.askaryan)": [[22, "NuRadioMC.SignalGen.askaryan.get_time_trace"]], "nuradiomc.signalgen.emitter": [[23, "module-NuRadioMC.SignalGen.emitter"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.emitter)": [[23, "NuRadioMC.SignalGen.emitter.get_time_trace"]], "nuradiomc.signalgen.parametrizations": [[24, "module-NuRadioMC.SignalGen.parametrizations"]], "get_parametrizations() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_parametrizations"]], "get_time_trace() (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.get_time_trace"]], "logger (in module nuradiomc.signalgen.parametrizations)": [[24, "NuRadioMC.SignalGen.parametrizations.logger"]], "nuradiomc.signalprop": [[25, "module-NuRadioMC.SignalProp"]], "nuradiomc.signalprop.analyticraytracing": [[26, "module-NuRadioMC.SignalProp.analyticraytracing"]], "angular_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.angular_diff"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.apply_propagation_effects"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.apply_propagation_effects"]], "determine_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.determine_solution_type"]], "ds() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.ds"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.find_solutions"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.find_solutions"]], "get_c0_from_log() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_C0_from_log"]], "get_c_0_from_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_0_from_angle"]], "get_c_1() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_1"]], "get_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle"]], "get_angle_from_c_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_C_0"]], "get_angle_from_logc_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_logC_0"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_attenuation"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation"]], "get_attenuation_along_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation_along_path"]], "get_c() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_c"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_config"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_config"]], "get_delta_y() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_delta_y"]], "get_effective_index_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_effective_index_birefringence"]], "get_focusing() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_focusing"]], "get_gamma() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_gamma"]], "get_launch_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_angle"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_launch_vector"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_vector"]], "get_n_steps() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_n_steps"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_output_parameters"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_output_parameters"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_length"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length"]], "get_path_length_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length_analytic"]], "get_path_properties_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_properties_birefringence"]], "get_path_reflections() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_reflections"]], "get_path_segments() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_segments"]], "get_polarization_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_polarization_birefringence"]], "get_polarization_birefringence_simple() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_polarization_birefringence_simple"]], "get_pulse_propagation_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_pulse_propagation_birefringence"]], "get_ray_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_ray_path"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_raytracing_output"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_raytracing_output"]], "get_receive_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_angle"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_receive_vector"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_reflection_angle"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_angle"]], "get_reflection_point() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_reflection_point"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_results"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_results"]], "get_segments() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_segments"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_solution_type"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_solution_type"]], "get_surf_skim_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surf_skim_angle"]], "get_surface_pulse() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surface_pulse"]], "get_tof_for_straight_line() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_tof_for_straight_line"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_travel_time"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time"]], "get_travel_time_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time_analytic"]], "get_turning_point() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_turning_point"]], "get_y() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_y"]], "get_y_diff() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_y_diff"]], "get_y_turn() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_y_turn"]], "get_y_with_z_mirror() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_y_with_z_mirror"]], "get_z_deep() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_z_deep"]], "get_z_from_n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_from_n"]], "get_z_mirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_mirrored"]], "get_z_unmirrored() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.get_z_unmirrored"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.has_solution"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.has_solution"]], "is_in_refraction_zone() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.is_in_refraction_zone"]], "n() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.n"]], "obj_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y"]], "obj_delta_y_square() (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.obj_delta_y_square"]], "on_sky_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.on_sky_birefringence"]], "plot_result() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.plot_result"]], "ray_tracing (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing"]], "ray_tracing_2d (class in nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.reset_solutions"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.reset_solutions"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_config"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_config"]], "set_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_solution"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_start_and_end_point"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_start_and_end_point"]], "speed_of_light (in module nuradiomc.signalprop.analyticraytracing)": [[26, "NuRadioMC.SignalProp.analyticraytracing.speed_of_light"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.use_optional_function"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[26, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.use_optional_function"]], "nuradiomc.signalprop.directraytracing": [[27, "module-NuRadioMC.SignalProp.directRayTracing"]], "apply_propagation_effects() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.apply_propagation_effects"]], "direct_ray_tracing (class in nuradiomc.signalprop.directraytracing)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing"]], "find_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_config"]], "get_launch_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path"]], "get_path_length() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.has_solution"]], "reset_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[27, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.use_optional_function"]], "nuradiomc.signalprop.propagation": [[28, "module-NuRadioMC.SignalProp.propagation"]], "get_propagation_module() (in module nuradiomc.signalprop.propagation)": [[28, "NuRadioMC.SignalProp.propagation.get_propagation_module"]], "nuradiomc.signalprop.propagation_base_class": [[29, "module-NuRadioMC.SignalProp.propagation_base_class"]], "apply_propagation_effects() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.apply_propagation_effects"]], "find_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_attenuation"]], "get_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_config"]], "get_launch_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_output_parameters"]], "get_path() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path"]], "get_path_length() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_results"]], "get_solution_type() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_travel_time"]], "has_solution() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.has_solution"]], "ray_tracing_base (class in nuradiomc.signalprop.propagation_base_class)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base"]], "reset_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.reset_solutions"]], "set_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[29, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.use_optional_function"]], "nuradiomc.signalprop.radioproparaytracing": [[30, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "activate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.activate_auto_step_size"]], "apply_propagation_effects() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.apply_propagation_effects"]], "deactivate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.deactivate_auto_step_size"]], "delta_theta_bottom() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_bottom"]], "delta_theta_direct() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_direct"]], "delta_theta_reflective() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_reflective"]], "find_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_config"]], "get_correction_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_path_length"]], "get_correction_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_travel_time"]], "get_focusing() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_focusing"]], "get_frequencies_for_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_frequencies_for_attenuation"]], "get_launch_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector"]], "get_launch_vector_analytic() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector_analytic"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path"]], "get_path_candidate() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_candidate"]], "get_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.has_solution"]], "radiopropa_ray_tracing (class in nuradiomc.signalprop.radioproparaytracing)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing"]], "raytracer_birefringence() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_birefringence"]], "raytracer_iterative() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_iterative"]], "raytracer_minimizer() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_minimizer"]], "reset_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_config"]], "set_cut_viewing_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_cut_viewing_angle"]], "set_iterative_sphere_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_sphere_sizes"]], "set_iterative_step_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_step_sizes"]], "set_maximum_trajectory_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_maximum_trajectory_length"]], "set_minimizer_tolerance() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_minimizer_tolerance"]], "set_shower_axis() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_shower_axis"]], "set_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_solutions"]], "set_start_and_end_point() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[30, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.use_optional_function"]], "nuradiomc.simulation": [[31, "module-NuRadioMC.simulation"]], "nuradiomc.simulation.output_writer_hdf5": [[32, "module-NuRadioMC.simulation.output_writer_hdf5"]], "add_event_group() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[32, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.add_event_group"]], "calculate_veff() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[32, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.calculate_Veff"]], "outputwriterhdf5 (class in nuradiomc.simulation.output_writer_hdf5)": [[32, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5"]], "write_empty_output_file() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[32, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.write_empty_output_file"]], "write_output_file() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[32, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.write_output_file"]], "nuradiomc.simulation.simulation": [[33, "module-NuRadioMC.simulation.simulation"]], "apply_det_response() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.apply_det_response"]], "apply_det_response_sim() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.apply_det_response_sim"]], "build_nuradioevents_from_hdf5() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.build_NuRadioEvents_from_hdf5"]], "build_dummy_event() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.build_dummy_event"]], "calculate_particle_weight() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.calculate_particle_weight"]], "calculate_polarization_vector() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.calculate_polarization_vector"]], "calculate_sim_efield() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.calculate_sim_efield"]], "calculate_sim_efield_for_emitter() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.calculate_sim_efield_for_emitter"]], "get_vrms() (nuradiomc.simulation.simulation.simulation method)": [[33, "NuRadioMC.simulation.simulation.simulation.get_Vrms"]], "get_bandwidth() (nuradiomc.simulation.simulation.simulation method)": [[33, "NuRadioMC.simulation.simulation.simulation.get_bandwidth"]], "get_config() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.get_config"]], "get_sampling_rate() (nuradiomc.simulation.simulation.simulation method)": [[33, "NuRadioMC.simulation.simulation.simulation.get_sampling_rate"]], "group_into_events() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.group_into_events"]], "increase_signal() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.increase_signal"]], "integrated_channel_response (nuradiomc.simulation.simulation.simulation property)": [[33, "NuRadioMC.simulation.simulation.simulation.integrated_channel_response"]], "merge_config() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.merge_config"]], "read_input_hdf5() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.read_input_hdf5"]], "remove_all_traces() (in module nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.remove_all_traces"]], "run() (nuradiomc.simulation.simulation.simulation method)": [[33, "NuRadioMC.simulation.simulation.simulation.run"]], "simulation (class in nuradiomc.simulation.simulation)": [[33, "NuRadioMC.simulation.simulation.simulation"]], "nuradiomc.simulation.time_logger": [[34, "module-NuRadioMC.simulation.time_logger"]], "pretty_time_delta() (in module nuradiomc.simulation.time_logger)": [[34, "NuRadioMC.simulation.time_logger.pretty_time_delta"]], "reset_times() (nuradiomc.simulation.time_logger.timelogger method)": [[34, "NuRadioMC.simulation.time_logger.timeLogger.reset_times"]], "show_time() (nuradiomc.simulation.time_logger.timelogger method)": [[34, "NuRadioMC.simulation.time_logger.timeLogger.show_time"]], "start_time() (nuradiomc.simulation.time_logger.timelogger method)": [[34, "NuRadioMC.simulation.time_logger.timeLogger.start_time"]], "stop_time() (nuradiomc.simulation.time_logger.timelogger method)": [[34, "NuRadioMC.simulation.time_logger.timeLogger.stop_time"]], "timelogger (class in nuradiomc.simulation.time_logger)": [[34, "NuRadioMC.simulation.time_logger.timeLogger"]], "nuradiomc.utilities": [[35, "module-NuRadioMC.utilities"]], "fc_limits() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.FC_limits"]], "nuradiomc.utilities.veff": [[36, "module-NuRadioMC.utilities.Veff"]], "export() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.export"]], "get_veff_aeff() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_Veff_Aeff"]], "get_veff_aeff_array() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_Veff_Aeff_array"]], "get_veff_aeff_single() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single"]], "get_veff_aeff_single_wrapper() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single_wrapper"]], "get_veff_water_equivalent() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_Veff_water_equivalent"]], "get_index() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_index"]], "get_veff_output() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.get_veff_output"]], "remove_duplicate_triggers() (in module nuradiomc.utilities.veff)": [[36, "NuRadioMC.utilities.Veff.remove_duplicate_triggers"]], "nuradiomc.utilities.attenuation": [[37, "module-NuRadioMC.utilities.attenuation"]], "fit_gl1() (in module nuradiomc.utilities.attenuation)": [[37, "NuRadioMC.utilities.attenuation.fit_GL1"]], "get_attenuation_length() (in module nuradiomc.utilities.attenuation)": [[37, "NuRadioMC.utilities.attenuation.get_attenuation_length"]], "get_temperature() (in module nuradiomc.utilities.attenuation)": [[37, "NuRadioMC.utilities.attenuation.get_temperature"]], "nuradiomc.utilities.cross_sections": [[38, "module-NuRadioMC.utilities.cross_sections"]], "csms() (in module nuradiomc.utilities.cross_sections)": [[38, "NuRadioMC.utilities.cross_sections.csms"]], "get_interaction_length() (in module nuradiomc.utilities.cross_sections)": [[38, "NuRadioMC.utilities.cross_sections.get_interaction_length"]], "get_nu_cross_section() (in module nuradiomc.utilities.cross_sections)": [[38, "NuRadioMC.utilities.cross_sections.get_nu_cross_section"]], "param() (in module nuradiomc.utilities.cross_sections)": [[38, "NuRadioMC.utilities.cross_sections.param"]], "nuradiomc.utilities.dump_hdf5": [[39, "module-NuRadioMC.utilities.dump_hdf5"]], "dump() (in module nuradiomc.utilities.dump_hdf5)": [[39, "NuRadioMC.utilities.dump_hdf5.dump"]], "coremantlecrustmodel (class in nuradiomc.utilities.earth_attenuation)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel"]], "nuradiomc.utilities.earth_attenuation": [[40, "module-NuRadioMC.utilities.earth_attenuation"]], "prem (class in nuradiomc.utilities.earth_attenuation)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM"]], "densities (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.densities"]], "densities (nuradiomc.utilities.earth_attenuation.prem attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM.densities"]], "density() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.density"]], "density() (nuradiomc.utilities.earth_attenuation.prem method)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM.density"]], "earth_radius (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.earth_radius"]], "earth_radius (nuradiomc.utilities.earth_attenuation.prem attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM.earth_radius"]], "get_core_mantle_crust_weight() (in module nuradiomc.utilities.earth_attenuation)": [[40, "NuRadioMC.utilities.earth_attenuation.get_core_mantle_crust_weight"]], "get_simple_weight() (in module nuradiomc.utilities.earth_attenuation)": [[40, "NuRadioMC.utilities.earth_attenuation.get_simple_weight"]], "get_weight() (in module nuradiomc.utilities.earth_attenuation)": [[40, "NuRadioMC.utilities.earth_attenuation.get_weight"]], "radii (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.radii"]], "radii (nuradiomc.utilities.earth_attenuation.prem attribute)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM.radii"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[40, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.slant_depth"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.prem method)": [[40, "NuRadioMC.utilities.earth_attenuation.PREM.slant_depth"]], "nuradiomc.utilities.fluxes": [[41, "module-NuRadioMC.utilities.fluxes"]], "get_exposure() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_exposure"]], "get_fluence_limit() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_fluence_limit"]], "get_integrated_exposure() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_integrated_exposure"]], "get_limit_e1_flux() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_limit_e1_flux"]], "get_limit_e2_flux() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_limit_e2_flux"]], "get_limit_flux() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_limit_flux"]], "get_limit_from_aeff() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_limit_from_aeff"]], "get_number_of_events_for_flux() (in module nuradiomc.utilities.fluxes)": [[41, "NuRadioMC.utilities.fluxes.get_number_of_events_for_flux"]], "nuradiomc.utilities.inelasticities": [[42, "module-NuRadioMC.utilities.inelasticities"]], "get_ccnc() (in module nuradiomc.utilities.inelasticities)": [[42, "NuRadioMC.utilities.inelasticities.get_ccnc"]], "get_neutrino_inelasticity() (in module nuradiomc.utilities.inelasticities)": [[42, "NuRadioMC.utilities.inelasticities.get_neutrino_inelasticity"]], "inelasticity_tau_decay() (in module nuradiomc.utilities.inelasticities)": [[42, "NuRadioMC.utilities.inelasticities.inelasticity_tau_decay"]], "random_tau_branch() (in module nuradiomc.utilities.inelasticities)": [[42, "NuRadioMC.utilities.inelasticities.random_tau_branch"]], "rejection_sampling() (in module nuradiomc.utilities.inelasticities)": [[42, "NuRadioMC.utilities.inelasticities.rejection_sampling"]], "ara_2022 (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.ARA_2022"]], "arasim_southpole (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole"]], "nuradiomc.utilities.medium": [[43, "module-NuRadioMC.utilities.medium"]], "add_reflective_bottom() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.add_reflective_bottom"]], "birefringence_medium (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.birefringence_medium"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.get_average_index_of_refraction"]], "get_birefringence_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.get_birefringence_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.get_gradient_of_index_of_refraction"]], "get_ice_model() (in module nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.get_ice_model"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.get_index_of_refraction"]], "greenland_firn (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.greenland_firn"]], "greenland_perturbation (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation"]], "greenland_simple (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.greenland_simple"]], "mooresbay_simple (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple"]], "mooresbay_simple_2 (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.ara_2022 method)": [[43, "NuRadioMC.utilities.medium.ARA_2022.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[43, "NuRadioMC.utilities.medium.ARAsim_southpole.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.birefringence_medium method)": [[43, "NuRadioMC.utilities.medium.birefringence_medium.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[43, "NuRadioMC.utilities.medium.greenland_firn.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[43, "NuRadioMC.utilities.medium.greenland_perturbation.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[43, "NuRadioMC.utilities.medium.greenland_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[43, "NuRadioMC.utilities.medium.mooresbay_simple_2.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[43, "NuRadioMC.utilities.medium.southpole_2015.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[43, "NuRadioMC.utilities.medium.southpole_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[43, "NuRadioMC.utilities.medium.uniform_ice.set_ice_model_radiopropa"]], "southpole_2015 (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.southpole_2015"]], "southpole_simple (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.southpole_simple"]], "uniform_ice (class in nuradiomc.utilities.medium)": [[43, "NuRadioMC.utilities.medium.uniform_ice"]], "icemodel (class in nuradiomc.utilities.medium_base)": [[44, "NuRadioMC.utilities.medium_base.IceModel"]], "icemodelbirefringence (class in nuradiomc.utilities.medium_base)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence"]], "icemodelsimple (class in nuradiomc.utilities.medium_base)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple"]], "nuradiomc.utilities.medium_base": [[44, "module-NuRadioMC.utilities.medium_base"]], "radiopropaicewrapper (class in nuradiomc.utilities.medium_base)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper"]], "scalarfieldbuilder (class in nuradiomc.utilities.medium_base)": [[44, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder"]], "add_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.add_module"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.add_reflective_bottom"]], "getgradient() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[44, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getGradient"]], "getvalue() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[44, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getValue"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.get_average_index_of_refraction"]], "get_birefringence_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_birefringence_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.get_gradient_of_index_of_refraction"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.get_index_of_refraction"]], "get_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_module"]], "get_modules() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_modules"]], "get_scalar_field() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_scalar_field"]], "remove_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.remove_module"]], "replace_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[44, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.replace_module"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[44, "NuRadioMC.utilities.medium_base.IceModel.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[44, "NuRadioMC.utilities.medium_base.IceModelBirefringence.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[44, "NuRadioMC.utilities.medium_base.IceModelSimple.set_ice_model_radiopropa"]], "nuradiomc.utilities.merge_hdf5": [[45, "module-NuRadioMC.utilities.merge_hdf5"]], "merge2() (in module nuradiomc.utilities.merge_hdf5)": [[45, "NuRadioMC.utilities.merge_hdf5.merge2"]], "muonflux (class in nuradiomc.utilities.muon_flux)": [[46, "NuRadioMC.utilities.muon_flux.MuonFlux"]], "nuradiomc.utilities.muon_flux": [[46, "module-NuRadioMC.utilities.muon_flux"]], "get_e_grid() (nuradiomc.utilities.muon_flux.muonflux method)": [[46, "NuRadioMC.utilities.muon_flux.MuonFlux.get_e_grid"]], "get_int_angle_mu_flux_buffered() (nuradiomc.utilities.muon_flux.muonflux method)": [[46, "NuRadioMC.utilities.muon_flux.MuonFlux.get_int_angle_mu_flux_buffered"]], "get_interp_angle_mu_flux() (nuradiomc.utilities.muon_flux.muonflux method)": [[46, "NuRadioMC.utilities.muon_flux.MuonFlux.get_interp_angle_mu_flux"]], "get_mu_flux() (nuradiomc.utilities.muon_flux.muonflux method)": [[46, "NuRadioMC.utilities.muon_flux.MuonFlux.get_mu_flux"]], "nuradiomc.utilities.plotting": [[47, "module-NuRadioMC.utilities.plotting"]], "plot_vertex_distribution() (in module nuradiomc.utilities.plotting)": [[47, "NuRadioMC.utilities.plotting.plot_vertex_distribution"]], "nuradiomc.utilities.runner": [[48, "module-NuRadioMC.utilities.runner"]], "nuradiomcrunner (class in nuradiomc.utilities.runner)": [[48, "NuRadioMC.utilities.runner.NuRadioMCRunner"]], "get_outputfilename() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[48, "NuRadioMC.utilities.runner.NuRadioMCRunner.get_outputfilename"]], "run() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[48, "NuRadioMC.utilities.runner.NuRadioMCRunner.run"]], "nuradiomc.utilities.runner_example": [[49, "module-NuRadioMC.utilities.runner_example"]], "task() (in module nuradiomc.utilities.runner_example)": [[49, "NuRadioMC.utilities.runner_example.task"]], "nuradiomc.utilities.split_hdf5": [[50, "module-NuRadioMC.utilities.split_hdf5"]], "split_hdf5_input_file() (in module nuradiomc.utilities.split_hdf5)": [[50, "NuRadioMC.utilities.split_hdf5.split_hdf5_input_file"]], "nuradioreco.detector": [[66, "module-NuRadioReco.detector"]], "nuradioreco.detector.ara": [[67, "module-NuRadioReco.detector.ARA"]], "nuradioreco.detector.ara.analog_components": [[68, "module-NuRadioReco.detector.ARA.analog_components"]], "get_system_response() (in module nuradioreco.detector.ara.analog_components)": [[68, "NuRadioReco.detector.ARA.analog_components.get_system_response"]], "load_system_response() (in module nuradioreco.detector.ara.analog_components)": [[68, "NuRadioReco.detector.ARA.analog_components.load_system_response"]], "nuradioreco.detector.arianna": [[69, "module-NuRadioReco.detector.ARIANNA"]], "nuradioreco.detector.arianna.analog_components": [[70, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "get_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.get_amplifier_response"]], "get_available_amplifiers() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.get_available_amplifiers"]], "get_cable_response() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response"]], "get_cable_response_parametrized() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response_parametrized"]], "load_amp_measurement() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.load_amp_measurement"]], "load_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[70, "NuRadioReco.detector.ARIANNA.analog_components.load_amplifier_response"]], "nuradioreco.detector.arianna.preprocessampresponses": [[71, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "preprocess_300amp() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[71, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.preprocess_300Amp"]], "save_preprocessed_amps() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[71, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.save_preprocessed_Amps"]], "nuradioreco.detector.lofar": [[72, "module-NuRadioReco.detector.LOFAR"]], "nuradioreco.detector.rno_g": [[73, "module-NuRadioReco.detector.RNO_G"]], "nuradioreco.detector.rno_g.analog_components": [[74, "module-NuRadioReco.detector.RNO_G.analog_components"]], "get_available_amplifiers() (in module nuradioreco.detector.rno_g.analog_components)": [[74, "NuRadioReco.detector.RNO_G.analog_components.get_available_amplifiers"]], "load_amp_response() (in module nuradioreco.detector.rno_g.analog_components)": [[74, "NuRadioReco.detector.RNO_G.analog_components.load_amp_response"]], "database (class in nuradioreco.detector.rno_g.db_mongo_read)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database"]], "nuradioreco.detector.rno_g.db_mongo_read": [[75, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "dictionarize_nested_lists() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists"]], "dictionarize_nested_lists_as_tuples() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists_as_tuples"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.query_modification_timestamps_per_station"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[75, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_detector_time"]], "database (class in nuradioreco.detector.rno_g.db_mongo_write)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database"]], "nuradioreco.detector.rno_g.db_mongo_write": [[76, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "add_entry_to_database() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_entry_to_database"]], "add_general_channel_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_channel_info_to_station"]], "add_general_device_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_device_info_to_station"]], "add_general_station_info() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_station_info"]], "add_measurement_protocol() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_measurement_protocol"]], "change_primary_antenna_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_antenna_measurement"]], "change_primary_cable_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_cable_measurement"]], "change_primary_downhole_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_downhole_measurement"]], "change_primary_drab_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_drab_measurement"]], "change_primary_iglu_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_iglu_measurement"]], "change_primary_surface_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_surface_measurement"]], "clone_collection_to_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.clone_collection_to_collection"]], "create_empty_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.create_empty_collection"]], "decommission_a_channel() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_channel"]], "decommission_a_device() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_device"]], "decommission_a_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_station"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.query_modification_timestamps_per_station"]], "rename_database_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.rename_database_collection"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_detector_time"]], "set_not_working() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_not_working"]], "update_current_primary() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[76, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.update_current_primary"]], "detector (class in nuradioreco.detector.rno_g.rnog_detector)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector"]], "nuradioreco.detector.rno_g.rnog_detector": [[77, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "export() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export"]], "export_as_string() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export_as_string"]], "get_absolute_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_absolute_position"]], "get_amplifier_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_amplifier_response"]], "get_antenna_model() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_cable_delay"]], "get_channel() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel"]], "get_channel_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_ids"]], "get_channel_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_orientation"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_signal_chain"]], "get_detector_time() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_detector_time"]], "get_devices() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_devices"]], "get_noise_temperature() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position"]], "get_relative_position_device() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position_device"]], "get_sampling_frequency() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_sampling_frequency"]], "get_signal_chain_components() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_components"]], "get_signal_chain_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_response"]], "get_site() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site"]], "get_site_coordinates() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site_coordinates"]], "get_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station"]], "get_station_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station_ids"]], "get_time_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_time_delay"]], "has_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.is_channel_noiseless"]], "update() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[77, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.update"]], "nuradioreco.detector.amp": [[78, "module-NuRadioReco.detector.amp"]], "get_amp_response() (in module nuradioreco.detector.amp)": [[78, "NuRadioReco.detector.amp.get_amp_response"]], "antennapattern (class in nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.AntennaPattern"]], "antennapatternanalytic (class in nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic"]], "antennapatternbase (class in nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternBase"]], "antennapatternprovider (class in nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternProvider"]], "nuradioreco.detector.antennapattern": [[79, "module-NuRadioReco.detector.antennapattern"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapattern method)": [[79, "NuRadioReco.detector.antennapattern.AntennaPattern.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternbase method)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternBase.get_antenna_response_vectorized"]], "get_group_delay() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.get_group_delay"]], "get_pickle_antenna_response() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.get_pickle_antenna_response"]], "interpolate_linear() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.interpolate_linear"]], "interpolate_linear_vectorized() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.interpolate_linear_vectorized"]], "load_antenna_pattern() (nuradioreco.detector.antennapattern.antennapatternprovider method)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternProvider.load_antenna_pattern"]], "parametric_phase() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[79, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.parametric_phase"]], "parse_aera_xml_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_AERA_XML_file"]], "parse_ara_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_ARA_file"]], "parse_hfss_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_HFSS_file"]], "parse_lofar_txt_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_LOFAR_txt_file"]], "parse_rnog_xfdtd_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_RNOG_XFDTD_file"]], "parse_wipld_file() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.parse_WIPLD_file"]], "preprocess_aera() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_AERA"]], "preprocess_ara() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_ARA"]], "preprocess_hfss() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_HFSS"]], "preprocess_lofar_txt() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_LOFAR_txt"]], "preprocess_rnog_xfdtd() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_RNOG_XFDTD"]], "preprocess_wipld() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_WIPLD"]], "preprocess_wipld_old() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_WIPLD_old"]], "preprocess_xfdtd() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.preprocess_XFDTD"]], "save_preprocessed_wipld() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD"]], "save_preprocessed_wipld_forara() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_forARA"]], "save_preprocessed_wipld_old() (in module nuradioreco.detector.antennapattern)": [[79, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_old"]], "detector() (in module nuradioreco.detector.detector)": [[80, "NuRadioReco.detector.detector.Detector"]], "nuradioreco.detector.detector": [[80, "module-NuRadioReco.detector.detector"]], "datetimeserializer (class in nuradioreco.detector.detector_base)": [[81, "NuRadioReco.detector.detector_base.DateTimeSerializer"]], "detectorbase (class in nuradioreco.detector.detector_base)": [[81, "NuRadioReco.detector.detector_base.DetectorBase"]], "nuradioreco.detector.detector_base": [[81, "module-NuRadioReco.detector.detector_base"]], "obj_class (nuradioreco.detector.detector_base.datetimeserializer attribute)": [[81, "NuRadioReco.detector.detector_base.DateTimeSerializer.OBJ_CLASS"]], "antenna_by_depth (nuradioreco.detector.detector_base.detectorbase property)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.antenna_by_depth"]], "assume_inf (nuradioreco.detector.detector_base.detectorbase property)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.assume_inf"]], "buffer_db() (in module nuradioreco.detector.detector_base)": [[81, "NuRadioReco.detector.detector_base.buffer_db"]], "decode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[81, "NuRadioReco.detector.detector_base.DateTimeSerializer.decode"]], "encode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[81, "NuRadioReco.detector.detector_base.DateTimeSerializer.encode"]], "get_absolute_position() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_detector_time"]], "get_device() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_device"]], "get_device_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_station"]], "get_station_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.is_channel_noiseless"]], "update() (nuradioreco.detector.detector_base.detectorbase method)": [[81, "NuRadioReco.detector.detector_base.DetectorBase.update"]], "detector (class in nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.Detector"]], "nuradioreco.detector.detector_sql": [[82, "module-NuRadioReco.detector.detector_sql"]], "get_absolute_position_site() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_absolute_position_site"]], "get_amplifier_type() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_amplifier_type"]], "get_amplifier_type() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_antenna_model"]], "get_antenna_model_file() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_antenna_model_file"]], "get_antenna_orientation() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_antenna_type"]], "get_antenna_type() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_cable_delay"]], "get_cable_delays() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_cable_delays"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_cable_type_and_length"]], "get_everything() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_everything"]], "get_everything_channels() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_everything_channels"]], "get_everything_positions() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_everything_positions"]], "get_everything_stations() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_everything_stations"]], "get_number_of_channels() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_number_of_channels"]], "get_number_of_channels() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_relative_position"]], "get_relative_position() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_relative_position"]], "get_relative_positions() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_relative_positions"]], "get_relative_positions() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_relative_positions"]], "get_sampling_frequency() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.get_site"]], "get_station_type() (in module nuradioreco.detector.detector_sql)": [[82, "NuRadioReco.detector.detector_sql.get_station_type"]], "update() (nuradioreco.detector.detector_sql.detector method)": [[82, "NuRadioReco.detector.detector_sql.Detector.update"]], "detectorsysuncertainties (class in nuradioreco.detector.detector_sys_uncertainties)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties"]], "nuradioreco.detector.detector_sys_uncertainties": [[83, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "antenna_by_depth (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties property)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.antenna_by_depth"]], "assume_inf (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties property)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.assume_inf"]], "get_absolute_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_detector_time"]], "get_device() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device"]], "get_device_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station"]], "get_station_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.is_channel_noiseless"]], "reset_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_orientation_offsets"]], "reset_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_position_offsets"]], "set_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_orientation_offsets"]], "set_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_position_offsets"]], "update() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[83, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.update"]], "nuradioreco.detector.filterresponse": [[84, "module-NuRadioReco.detector.filterresponse"]], "get_filter_response() (in module nuradioreco.detector.filterresponse)": [[84, "NuRadioReco.detector.filterresponse.get_filter_response"]], "get_filter_response_mini_circuits() (in module nuradioreco.detector.filterresponse)": [[84, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits"]], "get_filter_response_mini_circuits2() (in module nuradioreco.detector.filterresponse)": [[84, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits2"]], "genericdetector (class in nuradioreco.detector.generic_detector)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector"]], "nuradioreco.detector.generic_detector": [[85, "module-NuRadioReco.detector.generic_detector"]], "add_generic_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.add_generic_station"]], "add_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.add_station_properties_for_event"]], "antenna_by_depth (nuradioreco.detector.generic_detector.genericdetector property)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.antenna_by_depth"]], "assume_inf (nuradioreco.detector.generic_detector.genericdetector property)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.assume_inf"]], "get_absolute_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel"]], "get_channel_group_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_ids"]], "get_default_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel"]], "get_default_channel_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel_id"]], "get_default_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station"]], "get_default_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station_id"]], "get_detector_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_detector_time"]], "get_device() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_device"]], "get_device_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_parallel_channels"]], "get_raw_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_channel"]], "get_raw_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_station"]], "get_reference_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station"]], "get_reference_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_id"]], "get_reference_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_ids"]], "get_reference_stations() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_stations"]], "get_relative_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_site"]], "get_site_coordinates() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_site_coordinates"]], "get_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_station"]], "get_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_ids"]], "get_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_properties_for_event"]], "get_unique_time_periods() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.get_unique_time_periods"]], "has_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.is_channel_noiseless"]], "set_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.set_event"]], "update() (nuradioreco.detector.generic_detector.genericdetector method)": [[85, "NuRadioReco.detector.generic_detector.GenericDetector.update"]], "nuradioreco.detector.response": [[86, "module-NuRadioReco.detector.response"]], "response (class in nuradioreco.detector.response)": [[86, "NuRadioReco.detector.response.Response"]], "get_names() (nuradioreco.detector.response.response method)": [[86, "NuRadioReco.detector.response.Response.get_names"]], "get_time_delay() (nuradioreco.detector.response.response method)": [[86, "NuRadioReco.detector.response.Response.get_time_delay"]], "plot() (nuradioreco.detector.response.response method)": [[86, "NuRadioReco.detector.response.Response.plot"]], "remove() (nuradioreco.detector.response.response method)": [[86, "NuRadioReco.detector.response.Response.remove"]], "subtract_time_delay_from_response() (in module nuradioreco.detector.response)": [[86, "NuRadioReco.detector.response.subtract_time_delay_from_response"]], "nuradioreco.detector.sql_to_json": [[87, "module-NuRadioReco.detector.sql_to_json"]], "nuradioreco.detector.test_detector_db": [[88, "module-NuRadioReco.detector.test_detector_db"]], "nuradioreco.detector.visualize_detector": [[89, "module-NuRadioReco.detector.visualize_detector"]], "nuradioreco.framework": [[90, "module-NuRadioReco.framework"]], "baseshower (class in nuradioreco.framework.base_shower)": [[91, "NuRadioReco.framework.base_shower.BaseShower"]], "nuradioreco.framework.base_shower": [[91, "module-NuRadioReco.framework.base_shower"]], "deserialize() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.deserialize"]], "get_axis() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.get_id"]], "get_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.get_parameter"]], "get_parameters() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.get_parameters"]], "has_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.has_parameter"]], "serialize() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.serialize"]], "set_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[91, "NuRadioReco.framework.base_shower.BaseShower.set_parameter"]], "basestation (class in nuradioreco.framework.base_station)": [[92, "NuRadioReco.framework.base_station.BaseStation"]], "nuradioreco.framework.base_station": [[92, "module-NuRadioReco.framework.base_station"]], "add_electric_field() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.add_electric_field"]], "deserialize() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameters"]], "get_electric_field_ids() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_first_trigger"]], "get_id() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_id"]], "get_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_primary_trigger"]], "get_station_time() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_trigger"]], "get_triggers() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.has_parameter"]], "has_trigger() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.has_trigger"]], "has_triggered() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.is_neutrino"]], "remove_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.remove_triggers"]], "serialize() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_parameter_error"]], "set_station_time() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_station_time"]], "set_trigger() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_trigger"]], "set_triggered() (nuradioreco.framework.base_station.basestation method)": [[92, "NuRadioReco.framework.base_station.BaseStation.set_triggered"]], "basetrace (class in nuradioreco.framework.base_trace)": [[93, "NuRadioReco.framework.base_trace.BaseTrace"]], "nuradioreco.framework.base_trace": [[93, "module-NuRadioReco.framework.base_trace"]], "add_to_trace() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.apply_time_shift"]], "deserialize() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.deserialize"]], "get_filtered_trace() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_frequencies"]], "get_frequencies() (in module nuradioreco.framework.base_trace)": [[93, "NuRadioReco.framework.base_trace.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_number_of_samples"]], "get_sampling_rate() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_sampling_rate"]], "get_times() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_times"]], "get_trace() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_trace"]], "get_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.get_trace_start_time"]], "resample() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.resample"]], "serialize() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.set_frequency_spectrum"]], "set_trace() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.set_trace"]], "set_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[93, "NuRadioReco.framework.base_trace.BaseTrace.set_trace_start_time"]], "channel (class in nuradioreco.framework.channel)": [[94, "NuRadioReco.framework.channel.Channel"]], "nuradioreco.framework.channel": [[94, "module-NuRadioReco.framework.channel"]], "add_to_trace() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.apply_time_shift"]], "deserialize() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_id"]], "get_number_of_samples() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_parameter"]], "get_parameters() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_parameters"]], "get_sampling_rate() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_sampling_rate"]], "get_times() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_times"]], "get_trace() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.get_trace_start_time"]], "has_parameter() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.has_parameter"]], "resample() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.resample"]], "serialize() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.set_parameter"]], "set_trace() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.channel.channel method)": [[94, "NuRadioReco.framework.channel.Channel.set_trace_start_time"]], "electricfield (class in nuradioreco.framework.electric_field)": [[95, "NuRadioReco.framework.electric_field.ElectricField"]], "nuradioreco.framework.electric_field": [[95, "module-NuRadioReco.framework.electric_field"]], "add_to_trace() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.apply_time_shift"]], "deserialize() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.deserialize"]], "get_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_channel_ids"]], "get_filtered_trace() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_parameter"]], "get_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_parameter_error"]], "get_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_parameters"]], "get_position() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_position"]], "get_ray_tracing_solution_id() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_shower_id"]], "get_stokes_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_stokes_parameters"]], "get_times() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_times"]], "get_trace() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_trace"]], "get_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.get_unique_identifier"]], "has_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.has_channel_ids"]], "has_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.has_parameter"]], "has_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.has_parameter_error"]], "resample() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.resample"]], "serialize() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.serialize"]], "set_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_channel_ids"]], "set_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_parameter"]], "set_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_parameter_error"]], "set_position() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_position"]], "set_trace() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_trace"]], "set_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[95, "NuRadioReco.framework.electric_field.ElectricField.set_trace_start_time"]], "emitter (class in nuradioreco.framework.emitter)": [[96, "NuRadioReco.framework.emitter.Emitter"]], "nuradioreco.framework.emitter": [[96, "module-NuRadioReco.framework.emitter"]], "deserialize() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.deserialize"]], "get_id() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.get_id"]], "get_parameter() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.get_parameter"]], "get_parameters() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.get_parameters"]], "get_station_ids() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.get_station_ids"]], "has_parameter() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.has_parameter"]], "has_station_ids() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.has_station_ids"]], "serialize() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.serialize"]], "set_parameter() (nuradioreco.framework.emitter.emitter method)": [[96, "NuRadioReco.framework.emitter.Emitter.set_parameter"]], "event (class in nuradioreco.framework.event)": [[97, "NuRadioReco.framework.event.Event"]], "nuradioreco.framework.event": [[97, "module-NuRadioReco.framework.event"]], "add_particle() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.add_particle"]], "add_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.add_shower"]], "add_sim_emitter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.add_sim_emitter"]], "add_sim_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.add_sim_shower"]], "deserialize() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.deserialize"]], "get_event_time() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_event_time"]], "get_first_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_first_shower"]], "get_first_sim_emitter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_first_sim_emitter"]], "get_first_sim_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_first_sim_shower"]], "get_generator_info() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_generator_info"]], "get_hybrid_information() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_hybrid_information"]], "get_id() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_id"]], "get_interaction_products() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_interaction_products"]], "get_parameter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_parameter"]], "get_parent() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_parent"]], "get_particle() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_particle"]], "get_particles() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_particles"]], "get_primary() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_primary"]], "get_run_number() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_run_number"]], "get_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_shower"]], "get_showers() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_showers"]], "get_sim_emitter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_sim_emitter"]], "get_sim_emitters() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_sim_emitters"]], "get_sim_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_sim_shower"]], "get_sim_showers() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_sim_showers"]], "get_station() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_station"]], "get_station_ids() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_station_ids"]], "get_stations() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.get_stations"]], "has_generator_info() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_generator_info"]], "has_parameter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_parameter"]], "has_particle() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_particle"]], "has_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_shower"]], "has_sim_emitter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_sim_emitter"]], "has_sim_shower() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_sim_shower"]], "has_triggered() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.has_triggered"]], "iter_modules() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.iter_modules"]], "register_module_event() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.register_module_event"]], "register_module_station() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.register_module_station"]], "serialize() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.serialize"]], "set_event_time() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.set_event_time"]], "set_generator_info() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.set_generator_info"]], "set_id() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.set_id"]], "set_parameter() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.set_parameter"]], "set_station() (nuradioreco.framework.event.event method)": [[97, "NuRadioReco.framework.event.Event.set_station"]], "hybridinformation (class in nuradioreco.framework.hybrid_information)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation"]], "nuradioreco.framework.hybrid_information": [[98, "module-NuRadioReco.framework.hybrid_information"]], "add_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation.add_hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation.deserialize"]], "get_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_shower"]], "get_hybrid_showers() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_showers"]], "serialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[98, "NuRadioReco.framework.hybrid_information.HybridInformation.serialize"]], "hybridshower (class in nuradioreco.framework.hybrid_shower)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower"]], "nuradioreco.framework.hybrid_shower": [[99, "module-NuRadioReco.framework.hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.deserialize"]], "get_axis() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_coordinatesystem"]], "get_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_hybrid_detector"]], "get_id() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_id"]], "get_name() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_name"]], "get_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameter"]], "get_parameters() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameters"]], "has_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.has_parameter"]], "serialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.serialize"]], "set_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.set_hybrid_detector"]], "set_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[99, "NuRadioReco.framework.hybrid_shower.HybridShower.set_parameter"]], "nuradioreco.framework.parameter_serialization": [[100, "module-NuRadioReco.framework.parameter_serialization"]], "deserialize() (in module nuradioreco.framework.parameter_serialization)": [[100, "NuRadioReco.framework.parameter_serialization.deserialize"]], "deserialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[100, "NuRadioReco.framework.parameter_serialization.deserialize_covariances"]], "serialize() (in module nuradioreco.framework.parameter_serialization)": [[100, "NuRadioReco.framework.parameter_serialization.serialize"]], "serialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[100, "NuRadioReco.framework.parameter_serialization.serialize_covariances"]], "ariannaparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters"]], "emax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.Emax"]], "emin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.Emin"]], "nuradiomc_evtgen_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version"]], "nuradiomc_evtgen_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version_hash"]], "nuradiomc_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version"]], "nuradiomc_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version_hash"]], "nuradioreco.framework.parameters": [[101, "module-NuRadioReco.framework.parameters"]], "p2p_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.P2P_amplitude"]], "snr (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.SNR"]], "tnoise (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.Tnoise"]], "vrms (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.Vrms"]], "vrms_nuradiomc_simulation (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.Vrms_NuRadioMC_simulation"]], "amplitude (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.amplitude"]], "antenna_type (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.antenna_type"]], "area (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.area"]], "atmospheric_model (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.atmospheric_model"]], "azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.azimuth"]], "bandwidth (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.bandwidth"]], "bandwidth_nuradiomc_simulation (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.bandwidth_NuRadioMC_simulation"]], "block_offsets (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.block_offsets"]], "ccnc (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.ccnc"]], "channelparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.channelParameters"]], "channels_max_amplitude (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.channels_max_amplitude"]], "charge_excess_profile_id (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.charge_excess_profile_id"]], "chi2_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.chi2_efield_time_direction_fit"]], "comm_duration (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_duration"]], "comm_period (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_period"]], "core (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.core"]], "cr_azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.cr_azimuth"]], "cr_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_azimuth"]], "cr_dominant_polarisation (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_dominant_polarisation"]], "cr_energy (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.cr_energy"]], "cr_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_energy"]], "cr_energy_em (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.cr_energy_em"]], "cr_energy_em (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_energy_em"]], "cr_spectrum_quadratic_term (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_quadratic_term"]], "cr_spectrum_slope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_slope"]], "cr_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.cr_xcorrelations"]], "cr_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_xcorrelations"]], "cr_xmax (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_xmax"]], "cr_zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.cr_zenith"]], "cr_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.cr_zenith"]], "deposited (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.deposited"]], "dirty_fft_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.dirty_fft_channels"]], "distance_correlations (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.distance_correlations"]], "distance_shower_maximum_geometric (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_geometric"]], "distance_shower_maximum_grammage (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_grammage"]], "dt (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.dt"]], "electricfieldparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters"]], "electromagnetic_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_energy"]], "electromagnetic_radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_radiation_energy"]], "emitterparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.emitterParameters"]], "energy (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.energy"]], "energy (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.energy"]], "energy_fluence_ratios (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.energy_fluence_ratios"]], "eventparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.eventParameters"]], "fiducial_rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmax"]], "fiducial_rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmin"]], "fiducial_xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmax"]], "fiducial_xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmin"]], "fiducial_ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymax"]], "fiducial_ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymin"]], "fiducial_zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmax"]], "fiducial_zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmin"]], "flagged_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.flagged_channels"]], "flavor (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.flavor"]], "flavor (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.flavor"]], "flavors (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.flavors"]], "frequency (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.frequency"]], "generatorattributes (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.generatorAttributes"]], "half_width (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.half_width"]], "hash_nuradiomc (nuradioreco.framework.parameters.eventparameters attribute)": [[101, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioMC"]], "hash_nuradioreco (nuradioreco.framework.parameters.eventparameters attribute)": [[101, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioReco"]], "inelasticity (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.inelasticity"]], "inelasticity (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.inelasticity"]], "interaction_type (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.interaction_type"]], "interaction_type (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.interaction_type"]], "interferometric_core (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.interferometric_core"]], "interferometric_shower_axis (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_axis"]], "interferometric_shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_maximum"]], "internal_clock_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.internal_clock_time"]], "k_l (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.k_L"]], "l1_supression_value (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.l1_supression_value"]], "launch_vector (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.launch_vector"]], "magnetic_field_rotation (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_rotation"]], "magnetic_field_vector (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_vector"]], "max_amp_antenna (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna"]], "max_amp_antenna_envelope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna_envelope"]], "maximum_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude"]], "maximum_amplitude_envelope (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude_envelope"]], "model (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.model"]], "n_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.n_events"]], "n_interaction (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.n_interaction"]], "n_interaction (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.n_interaction"]], "n_samples (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.n_samples"]], "ndf_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.ndf_efield_time_direction_fit"]], "noise_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.noise_regions"]], "noise_rms (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.noise_rms"]], "nu_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_azimuth"]], "nu_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_energy"]], "nu_flavor (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_flavor"]], "nu_inttype (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_inttype"]], "nu_vertex (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_vertex"]], "nu_vertex_distance (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_distance"]], "nu_vertex_propagation_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_propagation_time"]], "nu_viewing_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.nu_viewing_angle"]], "nu_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.nu_xcorrelations"]], "nu_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_xcorrelations"]], "nu_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.nu_zenith"]], "observation_level (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.observation_level"]], "orientation_phi (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.orientation_phi"]], "orientation_theta (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.orientation_theta"]], "parent_id (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.parent_id"]], "parent_id (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.parent_id"]], "particleparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.particleParameters"]], "phimax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.phimax"]], "phimin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.phimin"]], "polarization (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.polarization"]], "polarization_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle"]], "polarization_angle_expectation (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle_expectation"]], "position (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.position"]], "primary_particle (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.primary_particle"]], "radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.radiation_energy"]], "ray_path_type (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.ray_path_type"]], "raytracing_solution (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.raytracing_solution"]], "realization_id (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.realization_id"]], "reflection_coefficient_phi (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_phi"]], "reflection_coefficient_theta (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_theta"]], "refractive_index_at_ground (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.refractive_index_at_ground"]], "rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.rmax"]], "rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.rmin"]], "rotation_phi (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.rotation_phi"]], "rotation_theta (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.rotation_theta"]], "seq_num (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_num"]], "seq_start_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_start_time"]], "seq_stop_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_stop_time"]], "showerparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.showerParameters"]], "shower_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.shower_energy"]], "shower_id (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.shower_id"]], "shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.shower_maximum"]], "signal_energy_fluence (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.signal_energy_fluence"]], "signal_ray_type (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_ray_type"]], "signal_receiving_azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_azimuth"]], "signal_receiving_zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_zenith"]], "signal_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_regions"]], "signal_time (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_time"]], "signal_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.signal_time"]], "signal_time_offset (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.signal_time_offset"]], "sim_config (nuradioreco.framework.parameters.eventparameters attribute)": [[101, "NuRadioReco.framework.parameters.eventParameters.sim_config"]], "start_event_id (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.start_event_id"]], "stationparameters (class in nuradioreco.framework.parameters)": [[101, "NuRadioReco.framework.parameters.stationParameters"]], "station_time (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.station_time"]], "thetamax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.thetamax"]], "thetamin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.thetamin"]], "time (nuradioreco.framework.parameters.emitterparameters attribute)": [[101, "NuRadioReco.framework.parameters.emitterParameters.time"]], "total_number_of_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.total_number_of_events"]], "trigger_thresholds (nuradioreco.framework.parameters.ariannaparameters attribute)": [[101, "NuRadioReco.framework.parameters.ARIANNAParameters.trigger_thresholds"]], "triggered (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.triggered"]], "type (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.type"]], "vertex (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.vertex"]], "vertex (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.vertex"]], "vertex_2d_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.vertex_2D_fit"]], "vertex_time (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.vertex_time"]], "vertex_time (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.vertex_time"]], "viewing_angles (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.viewing_angles"]], "volume (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.volume"]], "weight (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.weight"]], "xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.xmax"]], "xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.xmin"]], "ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.ymax"]], "ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.ymin"]], "zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[101, "NuRadioReco.framework.parameters.channelParameters.zenith"]], "zenith (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[101, "NuRadioReco.framework.parameters.electricFieldParameters.zenith"]], "zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[101, "NuRadioReco.framework.parameters.particleParameters.zenith"]], "zenith (nuradioreco.framework.parameters.showerparameters attribute)": [[101, "NuRadioReco.framework.parameters.showerParameters.zenith"]], "zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.zenith"]], "zenith_cr_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.zenith_cr_templatefit"]], "zenith_nu_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[101, "NuRadioReco.framework.parameters.stationParameters.zenith_nu_templatefit"]], "zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.zmax"]], "zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[101, "NuRadioReco.framework.parameters.generatorAttributes.zmin"]], "nuradioreco.framework.particle": [[102, "module-NuRadioReco.framework.particle"]], "particle (class in nuradioreco.framework.particle)": [[102, "NuRadioReco.framework.particle.Particle"]], "as_hdf5_dict() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.as_hdf5_dict"]], "deserialize() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.deserialize"]], "get_id() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.get_id"]], "get_parameter() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.get_parameter"]], "get_parameters() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.get_parameters"]], "has_parameter() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.has_parameter"]], "serialize() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.serialize"]], "set_parameter() (nuradioreco.framework.particle.particle method)": [[102, "NuRadioReco.framework.particle.Particle.set_parameter"]], "nuradioreco.framework.radio_shower": [[103, "module-NuRadioReco.framework.radio_shower"]], "radioshower (class in nuradioreco.framework.radio_shower)": [[103, "NuRadioReco.framework.radio_shower.RadioShower"]], "deserialize() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.deserialize"]], "get_axis() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_id"]], "get_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_parameter"]], "get_parameters() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_parameters"]], "get_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.get_station_ids"]], "has_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.has_parameter"]], "has_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.has_station_ids"]], "serialize() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.serialize"]], "set_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[103, "NuRadioReco.framework.radio_shower.RadioShower.set_parameter"]], "nuradioreco.framework.sim_channel": [[104, "module-NuRadioReco.framework.sim_channel"]], "simchannel (class in nuradioreco.framework.sim_channel)": [[104, "NuRadioReco.framework.sim_channel.SimChannel"]], "add_to_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.apply_time_shift"]], "deserialize() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_id"]], "get_number_of_samples() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_parameters"]], "get_ray_tracing_solution_id() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_shower_id"]], "get_times() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_times"]], "get_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.get_unique_identifier"]], "has_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.has_parameter"]], "resample() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.resample"]], "serialize() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.set_parameter"]], "set_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[104, "NuRadioReco.framework.sim_channel.SimChannel.set_trace_start_time"]], "nuradioreco.framework.sim_emitter": [[105, "module-NuRadioReco.framework.sim_emitter"]], "simemitter (class in nuradioreco.framework.sim_emitter)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter"]], "deserialize() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.deserialize"]], "get_id() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.get_id"]], "get_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.get_parameters"]], "get_station_ids() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.get_station_ids"]], "has_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.has_parameter"]], "has_station_ids() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.has_station_ids"]], "serialize() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.serialize"]], "set_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[105, "NuRadioReco.framework.sim_emitter.SimEmitter.set_parameter"]], "nuradioreco.framework.sim_station": [[106, "module-NuRadioReco.framework.sim_station"]], "simstation (class in nuradioreco.framework.sim_station)": [[106, "NuRadioReco.framework.sim_station.SimStation"]], "add_channel() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.add_channel"]], "add_electric_field() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.add_electric_field"]], "deserialize() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_channel"]], "get_channel_ids() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_channel_ids"]], "get_channels_by_channel_id() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_channel_id"]], "get_channels_by_ray_tracing_id() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_ray_tracing_id"]], "get_channels_by_shower_id() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_shower_id"]], "get_electric_field_ids() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_first_trigger"]], "get_id() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_magnetic_field_vector"]], "get_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_primary_trigger"]], "get_ray_tracing_ids() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_ray_tracing_ids"]], "get_shower_ids() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_shower_ids"]], "get_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_simulation_weight"]], "get_station_time() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_trigger"]], "get_triggers() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.has_parameter"]], "has_trigger() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.has_trigger"]], "has_triggered() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.has_triggered"]], "is_candidate() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.is_candidate"]], "is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.is_neutrino"]], "iter_channels() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.iter_channels"]], "remove_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.remove_triggers"]], "serialize() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_ARIANNA_parameter"]], "set_candidate() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_candidate"]], "set_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_is_neutrino"]], "set_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_magnetic_field_vector"]], "set_parameter() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_parameter_error"]], "set_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_simulation_weight"]], "set_station_time() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_station_time"]], "set_trigger() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_trigger"]], "set_triggered() (nuradioreco.framework.sim_station.simstation method)": [[106, "NuRadioReco.framework.sim_station.SimStation.set_triggered"]], "nuradioreco.framework.station": [[107, "module-NuRadioReco.framework.station"]], "station (class in nuradioreco.framework.station)": [[107, "NuRadioReco.framework.station.Station"]], "add_channel() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.add_channel"]], "add_electric_field() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.add_electric_field"]], "add_sim_station() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.add_sim_station"]], "deserialize() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_channel"]], "get_channel_ids() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_channel_ids"]], "get_electric_field_ids() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_first_trigger"]], "get_id() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_magnetic_field_vector"]], "get_number_of_channels() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_number_of_channels"]], "get_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_parameter"]], "get_parameter_error() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_parameter_error"]], "get_parameters() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_primary_trigger"]], "get_reference_direction() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_reference_direction"]], "get_reference_reconstruction() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_reference_reconstruction"]], "get_sim_station() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_sim_station"]], "get_station_time() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_trigger"]], "get_triggers() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_ARIANNA_parameter"]], "has_channel() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_channel"]], "has_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_parameter"]], "has_sim_station() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_sim_station"]], "has_trigger() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_trigger"]], "has_triggered() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.is_neutrino"]], "iter_channel_group() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.iter_channel_group"]], "iter_channels() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.iter_channels"]], "remove_channel() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.remove_channel"]], "remove_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.remove_parameter"]], "remove_triggers() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.remove_triggers"]], "serialize() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.serialize"]], "set_arianna_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_parameter"]], "set_parameter_error() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_parameter_error"]], "set_reference_reconstruction() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_reference_reconstruction"]], "set_sim_station() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_sim_station"]], "set_station_time() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_station_time"]], "set_trigger() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_trigger"]], "set_triggered() (nuradioreco.framework.station.station method)": [[107, "NuRadioReco.framework.station.Station.set_triggered"]], "envelopephasedtrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger"]], "envelopetrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger"]], "highlowtrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger"]], "integratedpowertrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger"]], "nuradioreco.framework.trigger": [[108, "module-NuRadioReco.framework.trigger"]], "rnogsurfacetrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger"]], "simplephasedtrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger"]], "simplethresholdtrigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger"]], "trigger (class in nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.Trigger"]], "deserialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.deserialize"]], "deserialize() (in module nuradioreco.framework.trigger)": [[108, "NuRadioReco.framework.trigger.deserialize"]], "get_name() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_name"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_time_channel"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_times"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_trigger_settings"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_trigger_time"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_trigger_times"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_triggered_channels"]], "get_type() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.get_type"]], "has_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.has_triggered"]], "is_primary() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.is_primary"]], "serialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.serialize"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_pre_trigger_times"]], "set_primary() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_primary"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_trigger_time"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_trigger_times"]], "set_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_triggered"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[108, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[108, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[108, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[108, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[108, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[108, "NuRadioReco.framework.trigger.Trigger.set_triggered_channels"]], "units (nuradioreco.framework.trigger.rnogsurfacetrigger attribute)": [[108, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.units"]], "nuradioreco.modules": [[109, "module-NuRadioReco.modules"]], "nuradioreco.modules.ara": [[110, "module-NuRadioReco.modules.ARA"]], "nuradioreco.modules.ara.hardwareresponseincorporator": [[111, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "hardwareresponseincorporator (class in nuradioreco.modules.ara.hardwareresponseincorporator)": [[111, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[111, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.ara.triggersimulator": [[112, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "end() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[112, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.end"]], "has_triggered() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[112, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.has_triggered"]], "run() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[112, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.ara.triggersimulator)": [[112, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.arianna": [[113, "module-NuRadioReco.modules.ARIANNA"]], "nuradioreco.modules.arianna.hardwareresponseincorporator": [[114, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.arianna.hardwareresponseincorporator)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[114, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.lofar": [[115, "module-NuRadioReco.modules.LOFAR"]], "nuradioreco.modules.lofar.beamformingdirectionfitter_lofar": [[116, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "beamformingdirectionfitter (class in nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[116, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter"]], "begin() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[116, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.begin"]], "end() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[116, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.end"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[116, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.geometric_delays"]], "run() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[116, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.run"]], "geometricdelayfarfield() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[117, "NuRadioReco.modules.LOFAR.beamforming_utilities.GeometricDelayFarField"]], "nuradioreco.modules.lofar.beamforming_utilities": [[117, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[117, "NuRadioReco.modules.LOFAR.beamforming_utilities.beamformer"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[117, "NuRadioReco.modules.LOFAR.beamforming_utilities.geometric_delays"]], "mini_beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[117, "NuRadioReco.modules.LOFAR.beamforming_utilities.mini_beamformer"]], "nuradioreco.modules.lofar.stationgalacticcalibrator": [[118, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "begin() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[118, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.begin"]], "end() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[118, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.end"]], "fourier_series() (in module nuradioreco.modules.lofar.stationgalacticcalibrator)": [[118, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.fourier_series"]], "run() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[118, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.run"]], "stationgalacticcalibrator (class in nuradioreco.modules.lofar.stationgalacticcalibrator)": [[118, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator"]], "nuradioreco.modules.lofar.stationpulsefinder": [[119, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "begin() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[119, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.begin"]], "end() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[119, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.end"]], "find_snr_of_timeseries() (in module nuradioreco.modules.lofar.stationpulsefinder)": [[119, "NuRadioReco.modules.LOFAR.stationPulseFinder.find_snr_of_timeseries"]], "run() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[119, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.run"]], "stationpulsefinder (class in nuradioreco.modules.lofar.stationpulsefinder)": [[119, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder"]], "findrfi_lofar() (in module nuradioreco.modules.lofar.stationrfifilter)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.FindRFI_LOFAR"]], "nuradioreco.modules.lofar.stationrfifilter": [[120, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "begin() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.begin"]], "end() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.end"]], "median_sorted_by_power() (in module nuradioreco.modules.lofar.stationrfifilter)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.median_sorted_by_power"]], "metadata_dir (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.metadata_dir"]], "num_double_zeros() (in module nuradioreco.modules.lofar.stationrfifilter)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.num_double_zeros"]], "run() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.run"]], "stationrfifilter (class in nuradioreco.modules.lofar.stationrfifilter)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter"]], "station_list (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[120, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.station_list"]], "nuradioreco.modules.rno_g": [[121, "module-NuRadioReco.modules.RNO_G"]], "nuradioreco.modules.rno_g.channelblockoffsetfitter": [[122, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "add_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[122, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.add_offsets"]], "channelblockoffsets (class in nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[122, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets"]], "fit_block_offsets() (in module nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[122, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.fit_block_offsets"]], "remove_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[122, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.remove_offsets"]], "nuradioreco.modules.rno_g.hardwareresponseincorporator": [[123, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.rno_g.hardwareresponseincorporator)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[123, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.rno_g.triggerboardresponse": [[124, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"]], "apply_adc_gain() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.apply_adc_gain"]], "apply_trigger_filter() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.apply_trigger_filter"]], "begin() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.begin"]], "digitize_trace() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.digitize_trace"]], "end() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.end"]], "get_avg_vrms() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.get_avg_vrms"]], "get_trigger_values() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.get_trigger_values"]], "run() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.run"]], "triggerboardresponse (class in nuradioreco.modules.rno_g.triggerboardresponse)": [[124, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse"]], "nuradioreco.modules.analogtodigitalconverter": [[125, "module-NuRadioReco.modules.analogToDigitalConverter"]], "analogtodigitalconverter (class in nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter"]], "apply_saturation() (in module nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.apply_saturation"]], "end() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[125, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.end"]], "get_digital_trace() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[125, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.get_digital_trace"]], "perfect_ceiling_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.perfect_ceiling_comparator"]], "perfect_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.perfect_comparator"]], "perfect_floor_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.perfect_floor_comparator"]], "round_to_int() (in module nuradioreco.modules.analogtodigitalconverter)": [[125, "NuRadioReco.modules.analogToDigitalConverter.round_to_int"]], "run() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[125, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.run"]], "nuradioreco.modules.base": [[126, "module-NuRadioReco.modules.base"]], "nuradioreco.modules.base.module": [[127, "module-NuRadioReco.modules.base.module"]], "register_run() (in module nuradioreco.modules.base.module)": [[127, "NuRadioReco.modules.base.module.register_run"]], "setup_logger() (in module nuradioreco.modules.base.module)": [[127, "NuRadioReco.modules.base.module.setup_logger"]], "nuradioreco.modules.beamformingdirectionfitter": [[128, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "beamformingdirectionfitter (class in nuradioreco.modules.beamformingdirectionfitter)": [[128, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter"]], "begin() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[128, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.begin"]], "end() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[128, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.end"]], "get_array_of_channels() (in module nuradioreco.modules.beamformingdirectionfitter)": [[128, "NuRadioReco.modules.beamFormingDirectionFitter.get_array_of_channels"]], "run() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[128, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.run"]], "nuradioreco.modules.channeladdcabledelay": [[129, "module-NuRadioReco.modules.channelAddCableDelay"]], "channeladdcabledelay (class in nuradioreco.modules.channeladdcabledelay)": [[129, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay"]], "run() (nuradioreco.modules.channeladdcabledelay.channeladdcabledelay method)": [[129, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay.run"]], "nuradioreco.modules.channelantennadedispersion": [[130, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "channelantennadedispersion (class in nuradioreco.modules.channelantennadedispersion)": [[130, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion"]], "end() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[130, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.end"]], "run() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[130, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.run"]], "nuradioreco.modules.channelbandpassfilter": [[131, "module-NuRadioReco.modules.channelBandPassFilter"]], "begin() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.begin"]], "channelbandpassfilter (class in nuradioreco.modules.channelbandpassfilter)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter"]], "end() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.end"]], "get_filter() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter"]], "get_filter_arguments() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter static method)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter_arguments"]], "run() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[131, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.run"]], "test_equality() (in module nuradioreco.modules.channelbandpassfilter)": [[131, "NuRadioReco.modules.channelBandPassFilter.test_equality"]], "nuradioreco.modules.channelcwnotchfilter": [[132, "module-NuRadioReco.modules.channelCWNotchFilter"]], "begin() (nuradioreco.modules.channelcwnotchfilter.channelcwnotchfilter method)": [[132, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter.begin"]], "channelcwnotchfilter (class in nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter"]], "filter_cws() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.filter_cws"]], "find_frequency_peaks() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.find_frequency_peaks"]], "find_frequency_peaks_from_trace() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.find_frequency_peaks_from_trace"]], "get_filter() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.get_filter"]], "plot_ft() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.plot_ft"]], "plot_trace() (in module nuradioreco.modules.channelcwnotchfilter)": [[132, "NuRadioReco.modules.channelCWNotchFilter.plot_trace"]], "run() (nuradioreco.modules.channelcwnotchfilter.channelcwnotchfilter method)": [[132, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter.run"]], "nuradioreco.modules.channelgalacticnoiseadder": [[133, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "begin() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[133, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.begin"]], "channelgalacticnoiseadder (class in nuradioreco.modules.channelgalacticnoiseadder)": [[133, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder"]], "run() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[133, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.run"]], "nuradioreco.modules.channelgenericnoiseadder": [[134, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "add_random_phases() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.add_random_phases"]], "bandlimited_noise() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise"]], "bandlimited_noise_from_precalculated_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_precalculated_parameters"]], "bandlimited_noise_from_spectrum() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_spectrum"]], "begin() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.begin"]], "channelgenericnoiseadder (class in nuradioreco.modules.channelgenericnoiseadder)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder"]], "end() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.end"]], "fftnoise_fullfft() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.fftnoise_fullfft"]], "precalculate_bandlimited_noise_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.precalculate_bandlimited_noise_parameters"]], "run() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[134, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.run"]], "nuradioreco.modules.channellengthadjuster": [[135, "module-NuRadioReco.modules.channelLengthAdjuster"]], "begin() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[135, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.begin"]], "channellengthadjuster (class in nuradioreco.modules.channellengthadjuster)": [[135, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster"]], "end() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[135, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.end"]], "run() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[135, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.run"]], "nuradioreco.modules.channelresampler": [[136, "module-NuRadioReco.modules.channelResampler"]], "begin() (nuradioreco.modules.channelresampler.channelresampler method)": [[136, "NuRadioReco.modules.channelResampler.channelResampler.begin"]], "channelresampler (class in nuradioreco.modules.channelresampler)": [[136, "NuRadioReco.modules.channelResampler.channelResampler"]], "end() (nuradioreco.modules.channelresampler.channelresampler method)": [[136, "NuRadioReco.modules.channelResampler.channelResampler.end"]], "run() (nuradioreco.modules.channelresampler.channelresampler method)": [[136, "NuRadioReco.modules.channelResampler.channelResampler.run"]], "nuradioreco.modules.channelsignalreconstructor": [[137, "module-NuRadioReco.modules.channelSignalReconstructor"]], "begin() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[137, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.begin"]], "channelsignalreconstructor (class in nuradioreco.modules.channelsignalreconstructor)": [[137, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor"]], "end() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[137, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.end"]], "get_snr() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[137, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.get_SNR"]], "run() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[137, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.run"]], "nuradioreco.modules.channelstopfilter": [[138, "module-NuRadioReco.modules.channelStopFilter"]], "begin() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[138, "NuRadioReco.modules.channelStopFilter.channelStopFilter.begin"]], "channelstopfilter (class in nuradioreco.modules.channelstopfilter)": [[138, "NuRadioReco.modules.channelStopFilter.channelStopFilter"]], "end() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[138, "NuRadioReco.modules.channelStopFilter.channelStopFilter.end"]], "run() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[138, "NuRadioReco.modules.channelStopFilter.channelStopFilter.run"]], "nuradioreco.modules.channeltemplatecorrelation": [[139, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "begin() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[139, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.begin"]], "channeltemplatecorrelation (class in nuradioreco.modules.channeltemplatecorrelation)": [[139, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation"]], "end() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[139, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.end"]], "match_sampling() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[139, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.match_sampling"]], "run() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[139, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.run"]], "nuradioreco.modules.channeltimeoffsetcalculator": [[140, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "begin() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[140, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.begin"]], "channeltimeoffsetcalculator (class in nuradioreco.modules.channeltimeoffsetcalculator)": [[140, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator"]], "run() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[140, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.run"]], "nuradioreco.modules.channeltimewindow": [[141, "module-NuRadioReco.modules.channelTimeWindow"]], "begin() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[141, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.begin"]], "channeltimewindow (class in nuradioreco.modules.channeltimewindow)": [[141, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow"]], "end() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[141, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.end"]], "run() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[141, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.run"]], "nuradioreco.modules.correlationdirectionfitter": [[142, "module-NuRadioReco.modules.correlationDirectionFitter"]], "begin() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[142, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.begin"]], "correlationdirectionfitter (class in nuradioreco.modules.correlationdirectionfitter)": [[142, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter"]], "end() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[142, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.end"]], "run() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[142, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.run"]], "nuradioreco.modules.cosmicrayenergyreconstructor": [[143, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "begin() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[143, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.begin"]], "cosmicrayenergyreconstructor (class in nuradioreco.modules.cosmicrayenergyreconstructor)": [[143, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor"]], "run() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[143, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.run"]], "nuradioreco.modules.custom": [[144, "module-NuRadioReco.modules.custom"]], "nuradioreco.modules.custom.deltat": [[145, "module-NuRadioReco.modules.custom.deltaT"]], "nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution": [[146, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "begin() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[146, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.begin"]], "calculateamplitudeperraysolution (class in nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution)": [[146, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution"]], "end() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[146, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.end"]], "run() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[146, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.run"]], "nuradioreco.modules.efieldairtoicepropagator": [[147, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "begin() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[147, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.begin"]], "efieldairtoicepropagator (class in nuradioreco.modules.efieldairtoicepropagator)": [[147, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator"]], "end() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[147, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.end"]], "run() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[147, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.run"]], "nuradioreco.modules.efieldradiointerferometricreconstruction": [[148, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.begin"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.begin"]], "efieldinterferometricaxisreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco"]], "efieldinterferometricdepthreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.end"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.end"]], "find_maximum_in_plane() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.find_maximum_in_plane"]], "get_geometry_and_transformation() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_geometry_and_transformation"]], "get_station_data() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_station_data"]], "logger (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.logger"]], "plot_lateral_cross_section() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.plot_lateral_cross_section"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_interferometric_depth"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.reconstruct_interferometric_depth"]], "reconstruct_shower_axis() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_shower_axis"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.run"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.run"]], "sample_lateral_cross_section() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_lateral_cross_section"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_longitudinal_profile"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.sample_longitudinal_profile"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.update_atmospheric_model_and_refractivity_table"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[148, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.update_atmospheric_model_and_refractivity_table"]], "nuradioreco.modules.efieldtimedirectionfitter": [[149, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "begin() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[149, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.begin"]], "efieldtimedirectionfitter (class in nuradioreco.modules.efieldtimedirectionfitter)": [[149, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter"]], "end() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[149, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.end"]], "run() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[149, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.run"]], "nuradioreco.modules.efieldtovoltageconverter": [[150, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "begin() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[150, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.begin"]], "efieldtovoltageconverter (class in nuradioreco.modules.efieldtovoltageconverter)": [[150, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter"]], "end() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[150, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.end"]], "run() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[150, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.run"]], "nuradioreco.modules.efieldtovoltageconverterperefield": [[151, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "efieldtovoltageconverterperefield (class in nuradioreco.modules.efieldtovoltageconverterperefield)": [[151, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield"]], "end() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[151, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.end"]], "run() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[151, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.run"]], "nuradioreco.modules.electricfieldbandpassfilter": [[152, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "begin() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[152, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.begin"]], "electricfieldbandpassfilter (class in nuradioreco.modules.electricfieldbandpassfilter)": [[152, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter"]], "end() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[152, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.end"]], "run() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[152, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.run"]], "nuradioreco.modules.electricfieldresampler": [[153, "module-NuRadioReco.modules.electricFieldResampler"]], "begin() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[153, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.begin"]], "electricfieldresampler (class in nuradioreco.modules.electricfieldresampler)": [[153, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler"]], "end() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[153, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.end"]], "run() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[153, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.run"]], "nuradioreco.modules.electricfieldsignalreconstructor": [[154, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "begin() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[154, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.begin"]], "electricfieldsignalreconstructor (class in nuradioreco.modules.electricfieldsignalreconstructor)": [[154, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor"]], "end() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[154, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.end"]], "run() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[154, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.run"]], "nuradioreco.modules.eventtypeidentifier": [[155, "module-NuRadioReco.modules.eventTypeIdentifier"]], "begin() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[155, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.begin"]], "eventtypeidentifier (class in nuradioreco.modules.eventtypeidentifier)": [[155, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier"]], "run() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[155, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.run"]], "nuradioreco.modules.iftelectricfieldreconstructor": [[156, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "iftelectricfieldreconstructor (class in nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor)": [[157, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor"]], "nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor": [[157, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "begin() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[157, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.begin"]], "make_priors_plot() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[157, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.make_priors_plot"]], "run() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[157, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.run"]], "domainflipper (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper"]], "inserter (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter"]], "linearslopeoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator"]], "nuradioreco.modules.iftelectricfieldreconstructor.operators": [[158, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "slopespectrumoperator() (in module nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SlopeSpectrumOperator"]], "symmetrizingoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.domainflipper method)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.inserter method)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.linearslopeoperator method)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.symmetrizingoperator method)": [[158, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator.apply"]], "nuradioreco.modules.io": [[159, "module-NuRadioReco.modules.io"]], "nuradioreco.modules.io.lofar": [[160, "module-NuRadioReco.modules.io.LOFAR"]], "multifile_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1"]], "nuradioreco.modules.io.lofar.rawtbbio": [[161, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "tbbdata_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.close_file"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.close_file"]], "decode_if_needed() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.decode_if_needed"]], "find_and_set_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.find_and_set_polarization_delay"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_ITRF_antenna_positions"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_ITRF_antenna_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_LOFAR_centered_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_LOFAR_centered_positions"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_all_sample_numbers"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_all_sample_numbers"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_names"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_names"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_set"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_set"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_data"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_data"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_filter_selection"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_filter_selection"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_full_data_lengths"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_full_data_lengths"]], "get_geometric_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_geometric_delays"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_data_lengths"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_data_lengths"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_sample_number"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_sample_number"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_sample_frequency"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_sample_frequency"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_ID"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_ID"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_name"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_name"]], "get_time_from_second() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_time_from_second"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timestamp"]], "get_timestamp_as_datetime() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp_as_datetime"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_phases"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_phases"]], "get_total_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_total_delays"]], "has_antenna() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.has_antenna"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.needs_metadata"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.needs_metadata"]], "read_antenna_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_delays"]], "read_antenna_pol_flips() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_pol_flips"]], "read_bad_antennas() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_bad_antennas"]], "read_station_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_station_delays"]], "set_odd_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_odd_polarization_delay"]], "set_polarization_flips() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_polarization_flips"]], "set_station_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[161, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_station_delay"]], "nuradioreco.modules.io.lofar.rawtbbio_metadata": [[162, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "convertitrftolocal() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertITRFToLocal"]], "convertphase_to_timing() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertPhase_to_Timing"]], "getclockcorrectionfromparsetaddition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrectionFromParsetAddition"]], "getclockcorrections() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrections"]], "getitrfantennaposition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getItrfAntennaPosition"]], "getstationphasecalibration() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPhaseCalibration"]], "getstationpositions() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPositions"]], "make_antennaid_filter() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.make_antennaID_filter"]], "mapantennasetkeyword() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[162, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.mapAntennasetKeyword"]], "nuradioreco.modules.io.lofar.rawtbbio_utilities": [[163, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "antname_is_even() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[163, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.antName_is_even"]], "even_antname_to_odd() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[163, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.even_antName_to_odd"]], "nuradioreco.modules.io.lofar.readlofardata": [[164, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "begin() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.begin"]], "check_trace_quality() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.check_trace_quality"]], "close_file() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.close_file"]], "end() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.end"]], "getlofartraces (class in nuradioreco.modules.io.lofar.readlofardata)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces"]], "get_metadata() (in module nuradioreco.modules.io.lofar.readlofardata)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.get_metadata"]], "get_stations() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.get_stations"]], "get_trace() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.get_trace"]], "lora_timestamp_to_blocknumber() (in module nuradioreco.modules.io.lofar.readlofardata)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.lora_timestamp_to_blocknumber"]], "readlofardata (class in nuradioreco.modules.io.lofar.readlofardata)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData"]], "run() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.run"]], "setup_trace_loading() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.setup_trace_loading"]], "tbb_filetag_from_utc() (in module nuradioreco.modules.io.lofar.readlofardata)": [[164, "NuRadioReco.modules.io.LOFAR.readLOFARData.tbb_filetag_from_utc"]], "nuradioreco.modules.io.nuradiorecoio": [[165, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "nuradiorecoio (class in nuradioreco.modules.io.nuradiorecoio)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio"]], "close_files() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.close_files"]], "get_detector() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_detector"]], "get_event() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event"]], "get_event_i() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_i"]], "get_event_ids() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_ids"]], "get_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_events"]], "get_filenames() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_filenames"]], "get_header() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_header"]], "get_n_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_n_events"]], "openfile() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[165, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.openFile"]], "nuradioreco.modules.io.rno_g": [[166, "module-NuRadioReco.modules.io.RNO_G"]], "nuradioreco.modules.io.rno_g.readrnogdatamattak": [[167, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "add_selectors() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.add_selectors"]], "begin() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.begin"]], "end() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.end"]], "get_event() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event"]], "get_event_by_index() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event_by_index"]], "get_events_information() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_events_information"]], "get_time_offset() (in module nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.get_time_offset"]], "get_waveforms() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_waveforms"]], "readrnogdata (class in nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData"]], "run() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[167, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.run"]], "nuradioreco.modules.io.coreas": [[168, "module-NuRadioReco.modules.io.coreas"]], "nuradioreco.modules.io.coreas.coreas": [[169, "module-NuRadioReco.modules.io.coreas.coreas"]], "calculate_simulation_weights() (in module nuradioreco.modules.io.coreas.coreas)": [[169, "NuRadioReco.modules.io.coreas.coreas.calculate_simulation_weights"]], "get_angles() (in module nuradioreco.modules.io.coreas.coreas)": [[169, "NuRadioReco.modules.io.coreas.coreas.get_angles"]], "make_sim_shower() (in module nuradioreco.modules.io.coreas.coreas)": [[169, "NuRadioReco.modules.io.coreas.coreas.make_sim_shower"]], "make_sim_station() (in module nuradioreco.modules.io.coreas.coreas)": [[169, "NuRadioReco.modules.io.coreas.coreas.make_sim_station"]], "nuradioreco.modules.io.coreas.readcoreas": [[170, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "begin() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[170, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[170, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreas)": [[170, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[170, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.run"]], "nuradioreco.modules.io.coreas.readcoreasshower": [[171, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "antenna_id() (in module nuradioreco.modules.io.coreas.readcoreasshower)": [[171, "NuRadioReco.modules.io.coreas.readCoREASShower.antenna_id"]], "begin() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[171, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[171, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.end"]], "readcoreasshower (class in nuradioreco.modules.io.coreas.readcoreasshower)": [[171, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower"]], "run() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[171, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.run"]], "nuradioreco.modules.io.coreas.readcoreasstation": [[172, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[172, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[172, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.end"]], "readcoreasstation (class in nuradioreco.modules.io.coreas.readcoreasstation)": [[172, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation"]], "run() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[172, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.run"]], "nuradioreco.modules.io.coreas.readcoreasstationgrid": [[173, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreasstationgrid)": [[173, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.run"]], "nuradioreco.modules.io.coreas.simulationselector": [[174, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "begin() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[174, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.begin"]], "end() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[174, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.end"]], "run() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[174, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.run"]], "simulationselector (class in nuradioreco.modules.io.coreas.simulationselector)": [[174, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector"]], "nuradioreco.modules.io.eventreader": [[175, "module-NuRadioReco.modules.io.eventReader"]], "begin() (nuradioreco.modules.io.eventreader.eventreader method)": [[175, "NuRadioReco.modules.io.eventReader.eventReader.begin"]], "end() (nuradioreco.modules.io.eventreader.eventreader method)": [[175, "NuRadioReco.modules.io.eventReader.eventReader.end"]], "eventreader (class in nuradioreco.modules.io.eventreader)": [[175, "NuRadioReco.modules.io.eventReader.eventReader"]], "get_detector() (nuradioreco.modules.io.eventreader.eventreader method)": [[175, "NuRadioReco.modules.io.eventReader.eventReader.get_detector"]], "get_header() (nuradioreco.modules.io.eventreader.eventreader method)": [[175, "NuRadioReco.modules.io.eventReader.eventReader.get_header"]], "run() (nuradioreco.modules.io.eventreader.eventreader method)": [[175, "NuRadioReco.modules.io.eventReader.eventReader.run"]], "nuradioreco.modules.io.eventwriter": [[176, "module-NuRadioReco.modules.io.eventWriter"]], "begin() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[176, "NuRadioReco.modules.io.eventWriter.eventWriter.begin"]], "end() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[176, "NuRadioReco.modules.io.eventWriter.eventWriter.end"]], "eventwriter (class in nuradioreco.modules.io.eventwriter)": [[176, "NuRadioReco.modules.io.eventWriter.eventWriter"]], "get_header() (in module nuradioreco.modules.io.eventwriter)": [[176, "NuRadioReco.modules.io.eventWriter.get_header"]], "run() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[176, "NuRadioReco.modules.io.eventWriter.eventWriter.run"]], "nuradioreco.modules.io.event_parser_factory": [[177, "module-NuRadioReco.modules.io.event_parser_factory"]], "iter_events_function() (in module nuradioreco.modules.io.event_parser_factory)": [[177, "NuRadioReco.modules.io.event_parser_factory.iter_events_function"]], "scan_files_function() (in module nuradioreco.modules.io.event_parser_factory)": [[177, "NuRadioReco.modules.io.event_parser_factory.scan_files_function"]], "nuradioreco.modules.io.snowshovel": [[178, "module-NuRadioReco.modules.io.snowshovel"]], "nuradioreco.modules.io.snowshovel.readariannadata": [[179, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[179, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[179, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadata)": [[179, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[179, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.run"]], "nuradioreco.modules.io.snowshovel.readariannadatacalib": [[180, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[180, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[180, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadatacalib)": [[180, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[180, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.run"]], "nuradioreco.modules.measured_noise": [[181, "module-NuRadioReco.modules.measured_noise"]], "nuradioreco.modules.measured_noise.arianna": [[182, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "nuradioreco.modules.measured_noise.arianna.noiseimporterroot": [[183, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "begin() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[183, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[183, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.arianna.noiseimporterroot)": [[183, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[183, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.run"]], "nuradioreco.modules.measured_noise.rno_g": [[184, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "nuradioreco.modules.measured_noise.rno_g.noiseimporter": [[185, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "begin() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[185, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[185, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.rno_g.noiseimporter)": [[185, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[185, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.run"]], "nuradioreco.modules.measured_noise.channelmeasurednoiseadder": [[186, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "begin() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[186, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.begin"]], "channelmeasurednoiseadder (class in nuradioreco.modules.measured_noise.channelmeasurednoiseadder)": [[186, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder"]], "end() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[186, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.end"]], "get_noise_station() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[186, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.get_noise_station"]], "run() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[186, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.run"]], "nuradioreco.modules.neutrinodirectionreconstructor": [[187, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "nuradioreco.modules.neutrinovertexreconstructor": [[189, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "nuradioreco.modules.neutrinovertexreconstructor.create_lookup_table": [[190, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor": [[191, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.begin"]], "find_ray_type() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_ray_type"]], "find_receiving_zenith() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_receiving_zenith"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_signal_travel_time"]], "neutrino2dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[191, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.run"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor": [[192, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.begin"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_array_3d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_3d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_signal_travel_time"]], "neutrino3dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[192, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.run"]], "nuradioreco.modules.phasedarray": [[193, "module-NuRadioReco.modules.phasedarray"]], "nuradioreco.modules.phasedarray.triggersimulator": [[194, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "begin() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.begin"]], "calculate_time_delays() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.calculate_time_delays"]], "check_vertical_string() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.check_vertical_string"]], "end() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.end"]], "get_antenna_positions() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_antenna_positions"]], "get_channel_trace_start_time() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_channel_trace_start_time"]], "phase_signals() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phase_signals"]], "phased_trigger() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phased_trigger"]], "power_sum() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.power_sum"]], "run() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.phasedarray.triggersimulator)": [[194, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.sphericalwavefitter": [[195, "module-NuRadioReco.modules.sphericalWaveFitter"]], "begin() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[195, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.begin"]], "end() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[195, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.end"]], "run() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[195, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.run"]], "sphericalwavefitter (class in nuradioreco.modules.sphericalwavefitter)": [[195, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter"]], "nuradioreco.modules.templatedirectionfitter": [[196, "module-NuRadioReco.modules.templateDirectionFitter"]], "begin() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[196, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.begin"]], "end() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[196, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.end"]], "run() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[196, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.run"]], "templatedirectionfitter (class in nuradioreco.modules.templatedirectionfitter)": [[196, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter"]], "nuradioreco.modules.trigger": [[197, "module-NuRadioReco.modules.trigger"]], "nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[198, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "linear_fit() (in module nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger)": [[198, "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.linear_fit"]], "nuradioreco.modules.trigger.envelopetrigger": [[199, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "begin() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.end"]], "get_envelope_triggers() (in module nuradioreco.modules.trigger.envelopetrigger)": [[199, "NuRadioReco.modules.trigger.envelopeTrigger.get_envelope_triggers"]], "run() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[199, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.envelopetrigger)": [[199, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator"]], "nuradioreco.modules.trigger.highlowthreshold": [[200, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "begin() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.end"]], "get_high_low_triggers() (in module nuradioreco.modules.trigger.highlowthreshold)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.get_high_low_triggers"]], "get_majority_logic() (in module nuradioreco.modules.trigger.highlowthreshold)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.get_majority_logic"]], "run() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.highlowthreshold)": [[200, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.multihighlowthreshold": [[201, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "begin() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.end"]], "get_high_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_high_triggers"]], "get_low_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_low_triggers"]], "get_multiple_high_low_trigger() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_multiple_high_low_trigger"]], "run() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.multihighlowthreshold)": [[201, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.powerintegration": [[202, "module-NuRadioReco.modules.trigger.powerIntegration"]], "begin() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.end"]], "get_power_int_triggers() (in module nuradioreco.modules.trigger.powerintegration)": [[202, "NuRadioReco.modules.trigger.powerIntegration.get_power_int_triggers"]], "run() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.powerintegration)": [[202, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator"]], "nuradioreco.modules.trigger.rnog_surface_trigger": [[203, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "begin() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.end"]], "run() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.run"]], "schottky_diode() (in module nuradioreco.modules.trigger.rnog_surface_trigger)": [[203, "NuRadioReco.modules.trigger.rnog_surface_trigger.schottky_diode"]], "triggersimulator (class in nuradioreco.modules.trigger.rnog_surface_trigger)": [[203, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator"]], "nuradioreco.modules.trigger.simplethreshold": [[204, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "begin() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.end"]], "get_threshold_triggers() (in module nuradioreco.modules.trigger.simplethreshold)": [[204, "NuRadioReco.modules.trigger.simpleThreshold.get_threshold_triggers"]], "run() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.simplethreshold)": [[204, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator"]], "nuradioreco.modules.triggertimeadjuster": [[205, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "begin() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[205, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.begin"]], "get_pre_trigger_time() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[205, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.get_pre_trigger_time"]], "run() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[205, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.run"]], "triggertimeadjuster (class in nuradioreco.modules.triggertimeadjuster)": [[205, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster"]], "nuradioreco.modules.voltagetoanalyticefieldconverter": [[206, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.begin"]], "covariance() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.covariance"]], "end() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.end"]], "run() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.stacked_lstsq"]], "voltagetoanalyticefieldconverter (class in nuradioreco.modules.voltagetoanalyticefieldconverter)": [[206, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverter": [[207, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.end"]], "get_array_of_channels() (in module nuradioreco.modules.voltagetoefieldconverter)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.get_array_of_channels"]], "run() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoefieldconverter)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.stacked_lstsq"]], "voltagetoefieldconverter (class in nuradioreco.modules.voltagetoefieldconverter)": [[207, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverterperchannel": [[208, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "begin() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[208, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[208, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.end"]], "run() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[208, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.run"]], "voltagetoefieldconverterperchannel (class in nuradioreco.modules.voltagetoefieldconverterperchannel)": [[208, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel"]], "nuradioreco.utilities": [[209, "module-NuRadioReco.utilities"]], "nuradioreco.utilities.analytic_pulse": [[210, "module-NuRadioReco.utilities.analytic_pulse"]], "amp_from_energy() (in module nuradioreco.utilities.analytic_pulse)": [[210, "NuRadioReco.utilities.analytic_pulse.amp_from_energy"]], "get_analytic_pulse() (in module nuradioreco.utilities.analytic_pulse)": [[210, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse"]], "get_analytic_pulse_freq() (in module nuradioreco.utilities.analytic_pulse)": [[210, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse_freq"]], "nuradioreco.utilities.bandpass_filter": [[211, "module-NuRadioReco.utilities.bandpass_filter"]], "get_filter_response() (in module nuradioreco.utilities.bandpass_filter)": [[211, "NuRadioReco.utilities.bandpass_filter.get_filter_response"]], "nuradioreco.utilities.cr_flux": [[212, "module-NuRadioReco.utilities.cr_flux"]], "get_analytic_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.get_analytic_cr_flux"]], "get_cr_event_rate() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.get_cr_event_rate"]], "get_flux_per_energy_bin() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.get_flux_per_energy_bin"]], "get_interpolated_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.get_interpolated_cr_flux"]], "get_measured_data() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.get_measured_data"]], "plot_measured_spectrum() (in module nuradioreco.utilities.cr_flux)": [[212, "NuRadioReco.utilities.cr_flux.plot_measured_spectrum"]], "nuradioreco.utilities.dataservers": [[213, "module-NuRadioReco.utilities.dataservers"]], "download_from_dataserver() (in module nuradioreco.utilities.dataservers)": [[213, "NuRadioReco.utilities.dataservers.download_from_dataserver"]], "get_available_dataservers_by_responsetime() (in module nuradioreco.utilities.dataservers)": [[213, "NuRadioReco.utilities.dataservers.get_available_dataservers_by_responsetime"]], "nuradioreco.utilities.diodesimulator": [[214, "module-NuRadioReco.utilities.diodeSimulator"]], "calculate_noise_parameters() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[214, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.calculate_noise_parameters"]], "diodesimulator (class in nuradioreco.utilities.diodesimulator)": [[214, "NuRadioReco.utilities.diodeSimulator.diodeSimulator"]], "end() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[214, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.end"]], "tunnel_diode() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[214, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.tunnel_diode"]], "nuradioreco.utilities.fft": [[215, "module-NuRadioReco.utilities.fft"]], "freq2time() (in module nuradioreco.utilities.fft)": [[215, "NuRadioReco.utilities.fft.freq2time"]], "freqs() (in module nuradioreco.utilities.fft)": [[215, "NuRadioReco.utilities.fft.freqs"]], "time2freq() (in module nuradioreco.utilities.fft)": [[215, "NuRadioReco.utilities.fft.time2freq"]], "nuradioreco.utilities.geometryutilities": [[216, "module-NuRadioReco.utilities.geometryUtilities"]], "get_efield_in_spherical_coords() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_efield_in_spherical_coords"]], "get_fresnel_angle() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_fresnel_angle"]], "get_fresnel_r_p() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_p"]], "get_fresnel_r_s() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_s"]], "get_fresnel_t_p() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_p"]], "get_fresnel_t_s() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_s"]], "get_time_delay_from_direction() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.get_time_delay_from_direction"]], "rot_x() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.rot_x"]], "rot_y() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.rot_y"]], "rot_z() (in module nuradioreco.utilities.geometryutilities)": [[216, "NuRadioReco.utilities.geometryUtilities.rot_z"]], "nuradioreco.utilities.ice": [[217, "module-NuRadioReco.utilities.ice"]], "get_refractive_index() (in module nuradioreco.utilities.ice)": [[217, "NuRadioReco.utilities.ice.get_refractive_index"]], "nuradioreco.utilities.interferometry": [[218, "module-NuRadioReco.utilities.interferometry"]], "fit_axis() (in module nuradioreco.utilities.interferometry)": [[218, "NuRadioReco.utilities.interferometry.fit_axis"]], "get_intersection_between_line_and_plane() (in module nuradioreco.utilities.interferometry)": [[218, "NuRadioReco.utilities.interferometry.get_intersection_between_line_and_plane"]], "get_signal() (in module nuradioreco.utilities.interferometry)": [[218, "NuRadioReco.utilities.interferometry.get_signal"]], "get_time_shifts() (in module nuradioreco.utilities.interferometry)": [[218, "NuRadioReco.utilities.interferometry.get_time_shifts"]], "interfere_traces_interpolation() (in module nuradioreco.utilities.interferometry)": [[218, "NuRadioReco.utilities.interferometry.interfere_traces_interpolation"]], "nuradioreco.utilities.io_utilities": [[219, "module-NuRadioReco.utilities.io_utilities"]], "read_pickle() (in module nuradioreco.utilities.io_utilities)": [[219, "NuRadioReco.utilities.io_utilities.read_pickle"]], "nuradiologger (class in nuradioreco.utilities.logging)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger"]], "nuradioreco.utilities.logging": [[220, "module-NuRadioReco.utilities.logging"]], "addfilter() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.addFilter"]], "addhandler() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.addHandler"]], "addlogginglevel() (in module nuradioreco.utilities.logging)": [[220, "NuRadioReco.utilities.logging.addLoggingLevel"]], "callhandlers() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.callHandlers"]], "critical() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.critical"]], "debug() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.debug"]], "error() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.error"]], "exception() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.exception"]], "fatal() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.fatal"]], "filter() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.filter"]], "findcaller() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.findCaller"]], "getchild() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.getChild"]], "geteffectivelevel() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.getEffectiveLevel"]], "get_fancy_formatter() (in module nuradioreco.utilities.logging)": [[220, "NuRadioReco.utilities.logging.get_fancy_formatter"]], "handle() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.handle"]], "hashandlers() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.hasHandlers"]], "info() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.info"]], "isenabledfor() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.isEnabledFor"]], "log() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.log"]], "makerecord() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.makeRecord"]], "manager (nuradioreco.utilities.logging.nuradiologger attribute)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.manager"]], "removefilter() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.removeFilter"]], "removehandler() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.removeHandler"]], "root (nuradioreco.utilities.logging.nuradiologger attribute)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.root"]], "setlevel() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.setLevel"]], "set_general_log_level() (in module nuradioreco.utilities.logging)": [[220, "NuRadioReco.utilities.logging.set_general_log_level"]], "status() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.status"]], "warn() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.warn"]], "warning() (nuradioreco.utilities.logging.nuradiologger method)": [[220, "NuRadioReco.utilities.logging.NuRadioLogger.warning"]], "nuradioreco.utilities.metaclasses": [[221, "module-NuRadioReco.utilities.metaclasses"]], "singleton (class in nuradioreco.utilities.metaclasses)": [[221, "NuRadioReco.utilities.metaclasses.Singleton"]], "mro() (nuradioreco.utilities.metaclasses.singleton method)": [[221, "NuRadioReco.utilities.metaclasses.Singleton.mro"]], "nuradioreco.utilities.noise": [[222, "module-NuRadioReco.utilities.noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegenerator method)": [[222, "NuRadioReco.utilities.noise.thermalNoiseGenerator.generate_noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[222, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise"]], "generate_noise2() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[222, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise2"]], "rolled_sum_roll() (in module nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.rolled_sum_roll"]], "rolled_sum_slicing() (in module nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.rolled_sum_slicing"]], "rolled_sum_take() (in module nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.rolled_sum_take"]], "rolling_indices() (in module nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.rolling_indices"]], "thermalnoisegenerator (class in nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.thermalNoiseGenerator"]], "thermalnoisegeneratorphasedarray (class in nuradioreco.utilities.noise)": [[222, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray"]], "nuradioreco.utilities.particle_names": [[223, "module-NuRadioReco.utilities.particle_names"]], "particle_id() (in module nuradioreco.utilities.particle_names)": [[223, "NuRadioReco.utilities.particle_names.particle_id"]], "particle_name() (in module nuradioreco.utilities.particle_names)": [[223, "NuRadioReco.utilities.particle_names.particle_name"]], "nuradioreco.utilities.signal_processing": [[224, "module-NuRadioReco.utilities.signal_processing"]], "half_hann_window() (in module nuradioreco.utilities.signal_processing)": [[224, "NuRadioReco.utilities.signal_processing.half_hann_window"]], "nuradioreco.utilities.templates": [[225, "module-NuRadioReco.utilities.templates"]], "templates (class in nuradioreco.utilities.templates)": [[225, "NuRadioReco.utilities.templates.Templates"]], "get_cr_ref_template() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_cr_ref_template"]], "get_cr_ref_templates() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_cr_ref_templates"]], "get_nu_ref_template() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_nu_ref_template"]], "get_nu_ref_templates() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_nu_ref_templates"]], "get_set_of_cr_templates() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates"]], "get_set_of_cr_templates_full() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates_full"]], "get_set_of_nu_templates() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.get_set_of_nu_templates"]], "set_template_directory() (nuradioreco.utilities.templates.templates method)": [[225, "NuRadioReco.utilities.templates.Templates.set_template_directory"]], "nuradioreco.utilities.timing": [[226, "module-NuRadioReco.utilities.timing"]], "analyze_timing() (in module nuradioreco.utilities.timing)": [[226, "NuRadioReco.utilities.timing.analyze_timing"]], "nuradioreco.utilities.tracewindows": [[227, "module-NuRadioReco.utilities.traceWindows"]], "get_window_around_maximum() (in module nuradioreco.utilities.tracewindows)": [[227, "NuRadioReco.utilities.traceWindows.get_window_around_maximum"]], "nuradioreco.utilities.trace_utilities": [[228, "module-NuRadioReco.utilities.trace_utilities"]], "apply_butterworth() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.apply_butterworth"]], "butterworth_filter_trace() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.butterworth_filter_trace"]], "delay_trace() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.delay_trace"]], "get_channel_voltage_from_efield() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.get_channel_voltage_from_efield"]], "get_efield_antenna_factor() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.get_efield_antenna_factor"]], "get_electric_field_energy_fluence() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.get_electric_field_energy_fluence"]], "get_stokes() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.get_stokes"]], "upsampling_fir() (in module nuradioreco.utilities.trace_utilities)": [[228, "NuRadioReco.utilities.trace_utilities.upsampling_fir"]], "nuradioreco.utilities.units": [[229, "module-NuRadioReco.utilities.units"]], "nuradioreco.utilities.version": [[230, "module-NuRadioReco.utilities.version"]], "get_nuradiomc_commit_hash() (in module nuradioreco.utilities.version)": [[230, "NuRadioReco.utilities.version.get_NuRadioMC_commit_hash"]], "get_nuradioreco_commit_hash() (in module nuradioreco.utilities.version)": [[230, "NuRadioReco.utilities.version.get_NuRadioReco_commit_hash"]], "get_git_commit_hash() (in module nuradioreco.utilities.version)": [[230, "NuRadioReco.utilities.version.get_git_commit_hash"]]}})