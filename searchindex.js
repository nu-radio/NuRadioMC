Search.setIndex({"docnames": ["Experiments/lofar/overview", "Experiments/welcome_page", "Introduction/pages/contributing", "Introduction/pages/conventions", "Introduction/pages/installation", "Introduction/pages/introduction", "Introduction/pages/welcome_page", "NuRadioMC/apidoc/NuRadioMC.EvtGen", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII", "NuRadioMC/apidoc/NuRadioMC.SignalGen", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations", "NuRadioMC/apidoc/NuRadioMC.SignalProp", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing", "NuRadioMC/apidoc/NuRadioMC.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.output_writer_hdf5", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation", "NuRadioMC/apidoc/NuRadioMC.simulation.time_logger", "NuRadioMC/apidoc/NuRadioMC.utilities", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities", "NuRadioMC/apidoc/NuRadioMC.utilities.medium", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting", "NuRadioMC/apidoc/NuRadioMC.utilities.runner", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5", "NuRadioMC/pages/HDF5_structure", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2", "NuRadioMC/pages/Manuals/event_generation", "NuRadioMC/pages/Manuals/example-multi_station_coincidences", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial", "NuRadioMC/pages/Manuals/icemodels", "NuRadioMC/pages/Manuals/running_on_a_cluster", "NuRadioMC/pages/Manuals/signal_generation_emitter", "NuRadioMC/pages/Manuals/signal_generation_shower", "NuRadioMC/pages/Manuals/signal_propagation", "NuRadioMC/pages/Manuals/simulation_configuration", "NuRadioMC/pages/Manuals/veff_tutorial", "NuRadioMC/pages/code_documentation", "NuRadioMC/pages/manuals", "NuRadioMC/pages/welcome_page", "NuRadioReco/apidoc/NuRadioReco.detector", "NuRadioReco/apidoc/NuRadioReco.detector.ARA", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector", "NuRadioReco/apidoc/NuRadioReco.detector.amp", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern", "NuRadioReco/apidoc/NuRadioReco.detector.detector", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector", "NuRadioReco/apidoc/NuRadioReco.detector.response", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector", "NuRadioReco/apidoc/NuRadioReco.framework", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower", "NuRadioReco/apidoc/NuRadioReco.framework.base_station", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace", "NuRadioReco/apidoc/NuRadioReco.framework.channel", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field", "NuRadioReco/apidoc/NuRadioReco.framework.emitter", "NuRadioReco/apidoc/NuRadioReco.framework.event", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization", "NuRadioReco/apidoc/NuRadioReco.framework.parameters", "NuRadioReco/apidoc/NuRadioReco.framework.particle", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel", "NuRadioReco/apidoc/NuRadioReco.framework.sim_emitter", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station", "NuRadioReco/apidoc/NuRadioReco.framework.station", "NuRadioReco/apidoc/NuRadioReco.framework.trigger", "NuRadioReco/apidoc/NuRadioReco.modules", "NuRadioReco/apidoc/NuRadioReco.modules.ARA", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.crRNOGTemplateCreator", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.triggerBoardResponse", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter", "NuRadioReco/apidoc/NuRadioReco.modules.base", "NuRadioReco/apidoc/NuRadioReco.modules.base.module", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelCWNotchFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.custom", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators", "NuRadioReco/apidoc/NuRadioReco.modules.io", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter", "NuRadioReco/apidoc/NuRadioReco.modules.trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel", "NuRadioReco/apidoc/NuRadioReco.utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux", "NuRadioReco/apidoc/NuRadioReco.utilities.dataservers", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator", "NuRadioReco/apidoc/NuRadioReco.utilities.fft", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities", "NuRadioReco/apidoc/NuRadioReco.utilities.ice", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.logging", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses", "NuRadioReco/apidoc/NuRadioReco.utilities.noise", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing", "NuRadioReco/apidoc/NuRadioReco.utilities.templates", "NuRadioReco/apidoc/NuRadioReco.utilities.timing", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities", "NuRadioReco/apidoc/NuRadioReco.utilities.units", "NuRadioReco/apidoc/NuRadioReco.utilities.variableWindowSizeCorrelation", "NuRadioReco/apidoc/NuRadioReco.utilities.version", "NuRadioReco/pages/code_documentation", "NuRadioReco/pages/detector/antennamodels", "NuRadioReco/pages/detector/detector", "NuRadioReco/pages/detector/detector_database_fields", "NuRadioReco/pages/detector/rnog", "NuRadioReco/pages/detector_tree", "NuRadioReco/pages/event_display", "NuRadioReco/pages/event_structure", "NuRadioReco/pages/how_to/vertex_reconstruction", "NuRadioReco/pages/howto_documentation", "NuRadioReco/pages/nur_modules", "NuRadioReco/pages/times", "NuRadioReco/pages/utilities", "NuRadioReco/pages/welcome_page", "main"], "filenames": ["Experiments/lofar/overview.rst", "Experiments/welcome_page.rst", "Introduction/pages/contributing.rst", "Introduction/pages/conventions.rst", "Introduction/pages/installation.rst", "Introduction/pages/introduction.rst", "Introduction/pages/welcome_page.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioMCtoAraSim.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.NuRadioProposal.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.create_tau_tab.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_cylinder.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generate_unforced.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.generator_skeleton.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.hdf5_to_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.proposal_table_manager.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readARAEventList.rst", "NuRadioMC/apidoc/NuRadioMC.EvtGen.readEventList_ASCII.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.ARZ.ARZ.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.HCRB2017.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.askaryan.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.emitter.rst", "NuRadioMC/apidoc/NuRadioMC.SignalGen.parametrizations.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.analyticraytracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.directRayTracing.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.propagation_base_class.rst", "NuRadioMC/apidoc/NuRadioMC.SignalProp.radioproparaytracing.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.output_writer_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.simulation.rst", "NuRadioMC/apidoc/NuRadioMC.simulation.time_logger.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.Veff.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.cross_sections.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.dump_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.earth_attenuation.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.fluxes.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.inelasticities.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.medium_base.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.merge_hdf5.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.muon_flux.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.plotting.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.runner_example.rst", "NuRadioMC/apidoc/NuRadioMC.utilities.split_hdf5.rst", "NuRadioMC/pages/HDF5_structure.rst", "NuRadioMC/pages/HDF5_structures_history/HDF5_v2.2.rst", "NuRadioMC/pages/Manuals/event_generation.rst", "NuRadioMC/pages/Manuals/example-multi_station_coincidences.rst", "NuRadioMC/pages/Manuals/expected_sensitivities_tutorial.rst", "NuRadioMC/pages/Manuals/icemodels.rst", "NuRadioMC/pages/Manuals/running_on_a_cluster.rst", "NuRadioMC/pages/Manuals/signal_generation_emitter.rst", "NuRadioMC/pages/Manuals/signal_generation_shower.rst", "NuRadioMC/pages/Manuals/signal_propagation.rst", "NuRadioMC/pages/Manuals/simulation_configuration.rst", "NuRadioMC/pages/Manuals/veff_tutorial.rst", "NuRadioMC/pages/code_documentation.rst", "NuRadioMC/pages/manuals.rst", "NuRadioMC/pages/welcome_page.rst", "NuRadioReco/apidoc/NuRadioReco.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.ARIANNA.preprocessAmpResponses.rst", "NuRadioReco/apidoc/NuRadioReco.detector.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.analog_components.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_read.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.db_mongo_write.rst", "NuRadioReco/apidoc/NuRadioReco.detector.RNO_G.rnog_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.amp.rst", "NuRadioReco/apidoc/NuRadioReco.detector.antennapattern.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_base.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sql.rst", "NuRadioReco/apidoc/NuRadioReco.detector.detector_sys_uncertainties.rst", "NuRadioReco/apidoc/NuRadioReco.detector.filterresponse.rst", "NuRadioReco/apidoc/NuRadioReco.detector.generic_detector.rst", "NuRadioReco/apidoc/NuRadioReco.detector.response.rst", "NuRadioReco/apidoc/NuRadioReco.detector.sql_to_json.rst", "NuRadioReco/apidoc/NuRadioReco.detector.test_detector_db.rst", "NuRadioReco/apidoc/NuRadioReco.detector.visualize_detector.rst", "NuRadioReco/apidoc/NuRadioReco.framework.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.base_trace.rst", "NuRadioReco/apidoc/NuRadioReco.framework.channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.electric_field.rst", "NuRadioReco/apidoc/NuRadioReco.framework.emitter.rst", "NuRadioReco/apidoc/NuRadioReco.framework.event.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_information.rst", "NuRadioReco/apidoc/NuRadioReco.framework.hybrid_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameter_serialization.rst", "NuRadioReco/apidoc/NuRadioReco.framework.parameters.rst", "NuRadioReco/apidoc/NuRadioReco.framework.particle.rst", "NuRadioReco/apidoc/NuRadioReco.framework.radio_shower.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_channel.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_emitter.rst", "NuRadioReco/apidoc/NuRadioReco.framework.sim_station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.station.rst", "NuRadioReco/apidoc/NuRadioReco.framework.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARA.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.beamforming_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationGalacticCalibrator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationPulseFinder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.LOFAR.stationRFIFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.RNO_G.triggerBoardResponse.rst", "NuRadioReco/apidoc/NuRadioReco.modules.analogToDigitalConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.rst", "NuRadioReco/apidoc/NuRadioReco.modules.base.module.rst", "NuRadioReco/apidoc/NuRadioReco.modules.beamFormingDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAddCableDelay.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelAntennaDedispersion.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelCWNotchFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGalacticNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelGenericNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelLengthAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelStopFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTemplateCorrelation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeOffsetCalculator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.channelTimeWindow.rst", "NuRadioReco/apidoc/NuRadioReco.modules.correlationDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.cosmicRayEnergyReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldAirToIcePropagator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldRadioInterferometricReconstruction.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldTimeDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.efieldToVoltageConverterPerEfield.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldBandPassFilter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldResampler.rst", "NuRadioReco/apidoc/NuRadioReco.modules.electricFieldSignalReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.eventTypeIdentifier.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.iftElectricFieldReconstructor.operators.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.LOFAR.readLOFARData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.NuRadioRecoio.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.coreas.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREAS.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASShower.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStation.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.readCoREASStationGrid.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.coreas.simulationSelector.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventReader.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.eventWriter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.event_parser_factory.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNAData.rst", "NuRadioReco/apidoc/NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.rst", "NuRadioReco/apidoc/NuRadioReco.modules.phasedarray.triggerSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.modules.sphericalWaveFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.templateDirectionFitter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.envelopeTrigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.highLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.multiHighLowThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.powerIntegration.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.rnog_surface_trigger.rst", "NuRadioReco/apidoc/NuRadioReco.modules.trigger.simpleThreshold.rst", "NuRadioReco/apidoc/NuRadioReco.modules.triggerTimeAdjuster.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToAnalyticEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverter.rst", "NuRadioReco/apidoc/NuRadioReco.modules.voltageToEfieldConverterPerChannel.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.analytic_pulse.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.bandpass_filter.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.cr_flux.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.dataservers.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.diodeSimulator.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.fft.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.geometryUtilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.ice.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.interferometry.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.io_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.logging.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.metaclasses.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.noise.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.particle_names.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.signal_processing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.templates.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.timing.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.traceWindows.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.trace_utilities.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.units.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.variableWindowSizeCorrelation.rst", "NuRadioReco/apidoc/NuRadioReco.utilities.version.rst", "NuRadioReco/pages/code_documentation.rst", "NuRadioReco/pages/detector/antennamodels.rst", "NuRadioReco/pages/detector/detector.rst", "NuRadioReco/pages/detector/detector_database_fields.rst", "NuRadioReco/pages/detector/rnog.rst", "NuRadioReco/pages/detector_tree.rst", "NuRadioReco/pages/event_display.rst", "NuRadioReco/pages/event_structure.rst", "NuRadioReco/pages/how_to/vertex_reconstruction.rst", "NuRadioReco/pages/howto_documentation.rst", "NuRadioReco/pages/nur_modules.rst", "NuRadioReco/pages/times.rst", "NuRadioReco/pages/utilities.rst", "NuRadioReco/pages/welcome_page.rst", "main.rst"], "titles": ["LOFAR", "Experiment-specific features", "Contributing to NuRadioMC", "Some notes on conventions", "Installing NuRadioMC / NuRadioReco", "Introduction", "Introduction", "NuRadioMC.EvtGen package", "NuRadioMC.EvtGen.NuRadioMCtoAraSim module", "NuRadioMC.EvtGen.NuRadioProposal module", "NuRadioMC.EvtGen.create_tau_tab module", "NuRadioMC.EvtGen.generate_cylinder module", "NuRadioMC.EvtGen.generate_unforced module", "NuRadioMC.EvtGen.generator module", "NuRadioMC.EvtGen.generator_ASCII module", "NuRadioMC.EvtGen.generator_skeleton module", "NuRadioMC.EvtGen.hdf5_to_ASCII module", "NuRadioMC.EvtGen.proposal_table_manager module", "NuRadioMC.EvtGen.readARAEventList module", "NuRadioMC.EvtGen.readEventList_ASCII module", "NuRadioMC.SignalGen package", "NuRadioMC.SignalGen.ARZ package", "NuRadioMC.SignalGen.ARZ.ARZ module", "NuRadioMC.SignalGen.HCRB2017 module", "NuRadioMC.SignalGen.askaryan module", "NuRadioMC.SignalGen.emitter module", "NuRadioMC.SignalGen.parametrizations module", "NuRadioMC.SignalProp package", "NuRadioMC.SignalProp.analyticraytracing module", "NuRadioMC.SignalProp.directRayTracing module", "NuRadioMC.SignalProp.propagation module", "NuRadioMC.SignalProp.propagation_base_class module", "NuRadioMC.SignalProp.radioproparaytracing module", "NuRadioMC.simulation package", "NuRadioMC.simulation.output_writer_hdf5 module", "NuRadioMC.simulation.simulation module", "NuRadioMC.simulation.time_logger module", "NuRadioMC.utilities package", "NuRadioMC.utilities.Veff module", "NuRadioMC.utilities.attenuation module", "NuRadioMC.utilities.cross_sections module", "NuRadioMC.utilities.dump_hdf5 module", "NuRadioMC.utilities.earth_attenuation module", "NuRadioMC.utilities.fluxes module", "NuRadioMC.utilities.inelasticities module", "NuRadioMC.utilities.medium module", "NuRadioMC.utilities.medium_base module", "NuRadioMC.utilities.merge_hdf5 module", "NuRadioMC.utilities.muon_flux module", "NuRadioMC.utilities.plotting module", "NuRadioMC.utilities.runner module", "NuRadioMC.utilities.runner_example module", "NuRadioMC.utilities.split_hdf5 module", "HDF5 output structure", "HDF5 output structure (v2.2)", "Event Generation", "Example: Multi-station coincidences", "Example: Calculating expected sensitivities", "Ice and attenuation models", "Running on a cluster", "Signal Generation (emitter)", "Signal Generation (from in-ice showers)", "Signal Propagation", "Simulation and configuration", "Example: Calculating effective volume", "Code Documentation", "Manuals", "NuRadioMC Documentation", "NuRadioReco.detector package", "NuRadioReco.detector.ARA package", "NuRadioReco.detector.ARA.analog_components module", "NuRadioReco.detector.ARIANNA package", "NuRadioReco.detector.ARIANNA.analog_components module", "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module", "NuRadioReco.detector.LOFAR package", "NuRadioReco.detector.RNO_G package", "NuRadioReco.detector.RNO_G.analog_components module", "NuRadioReco.detector.RNO_G.db_mongo_read module", "NuRadioReco.detector.RNO_G.db_mongo_write module", "NuRadioReco.detector.RNO_G.rnog_detector module", "NuRadioReco.detector.amp module", "NuRadioReco.detector.antennapattern module", "NuRadioReco.detector.detector module", "NuRadioReco.detector.detector_base module", "NuRadioReco.detector.detector_sql module", "NuRadioReco.detector.detector_sys_uncertainties module", "NuRadioReco.detector.filterresponse module", "NuRadioReco.detector.generic_detector module", "NuRadioReco.detector.response module", "NuRadioReco.detector.sql_to_json module", "NuRadioReco.detector.test_detector_db module", "NuRadioReco.detector.visualize_detector module", "NuRadioReco.framework package", "NuRadioReco.framework.base_shower module", "NuRadioReco.framework.base_station module", "NuRadioReco.framework.base_trace module", "NuRadioReco.framework.channel module", "NuRadioReco.framework.electric_field module", "NuRadioReco.framework.emitter module", "NuRadioReco.framework.event module", "NuRadioReco.framework.hybrid_information module", "NuRadioReco.framework.hybrid_shower module", "NuRadioReco.framework.parameter_serialization module", "NuRadioReco.framework.parameters module", "NuRadioReco.framework.particle module", "NuRadioReco.framework.radio_shower module", "NuRadioReco.framework.sim_channel module", "NuRadioReco.framework.sim_emitter module", "NuRadioReco.framework.sim_station module", "NuRadioReco.framework.station module", "NuRadioReco.framework.trigger module", "NuRadioReco.modules package", "NuRadioReco.modules.ARA package", "NuRadioReco.modules.ARA.hardwareResponseIncorporator module", "NuRadioReco.modules.ARA.triggerSimulator module", "NuRadioReco.modules.ARIANNA package", "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module", "NuRadioReco.modules.LOFAR package", "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module", "NuRadioReco.modules.LOFAR.beamforming_utilities module", "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module", "NuRadioReco.modules.LOFAR.stationPulseFinder module", "NuRadioReco.modules.LOFAR.stationRFIFilter module", "NuRadioReco.modules.RNO_G package", "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module", "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator module", "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module", "NuRadioReco.modules.RNO_G.triggerBoardResponse module", "NuRadioReco.modules.analogToDigitalConverter module", "NuRadioReco.modules.base package", "NuRadioReco.modules.base.module module", "NuRadioReco.modules.beamFormingDirectionFitter module", "NuRadioReco.modules.channelAddCableDelay module", "NuRadioReco.modules.channelAntennaDedispersion module", "NuRadioReco.modules.channelBandPassFilter module", "NuRadioReco.modules.channelCWNotchFilter module", "NuRadioReco.modules.channelGalacticNoiseAdder module", "NuRadioReco.modules.channelGenericNoiseAdder module", "NuRadioReco.modules.channelLengthAdjuster module", "NuRadioReco.modules.channelResampler module", "NuRadioReco.modules.channelSignalReconstructor module", "NuRadioReco.modules.channelStopFilter module", "NuRadioReco.modules.channelTemplateCorrelation module", "NuRadioReco.modules.channelTimeOffsetCalculator module", "NuRadioReco.modules.channelTimeWindow module", "NuRadioReco.modules.correlationDirectionFitter module", "NuRadioReco.modules.cosmicRayEnergyReconstructor module", "NuRadioReco.modules.custom package", "NuRadioReco.modules.custom.deltaT package", "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module", "NuRadioReco.modules.efieldAirToIcePropagator module", "NuRadioReco.modules.efieldRadioInterferometricReconstruction module", "NuRadioReco.modules.efieldTimeDirectionFitter module", "NuRadioReco.modules.efieldToVoltageConverter module", "NuRadioReco.modules.efieldToVoltageConverterPerEfield module", "NuRadioReco.modules.electricFieldBandPassFilter module", "NuRadioReco.modules.electricFieldResampler module", "NuRadioReco.modules.electricFieldSignalReconstructor module", "NuRadioReco.modules.eventTypeIdentifier module", "NuRadioReco.modules.iftElectricFieldReconstructor package", "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module", "NuRadioReco.modules.iftElectricFieldReconstructor.operators module", "NuRadioReco.modules.io package", "NuRadioReco.modules.io.LOFAR package", "NuRadioReco.modules.io.LOFAR.rawTBBio module", "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module", "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module", "NuRadioReco.modules.io.LOFAR.readLOFARData module", "NuRadioReco.modules.io.NuRadioRecoio module", "NuRadioReco.modules.io.RNO_G package", "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module", "NuRadioReco.modules.io.coreas package", "NuRadioReco.modules.io.coreas.coreas module", "NuRadioReco.modules.io.coreas.readCoREAS module", "NuRadioReco.modules.io.coreas.readCoREASShower module", "NuRadioReco.modules.io.coreas.readCoREASStation module", "NuRadioReco.modules.io.coreas.readCoREASStationGrid module", "NuRadioReco.modules.io.coreas.simulationSelector module", "NuRadioReco.modules.io.eventReader module", "NuRadioReco.modules.io.eventWriter module", "NuRadioReco.modules.io.event_parser_factory module", "NuRadioReco.modules.io.snowshovel package", "NuRadioReco.modules.io.snowshovel.readARIANNAData module", "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module", "NuRadioReco.modules.measured_noise package", "NuRadioReco.modules.measured_noise.ARIANNA package", "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module", "NuRadioReco.modules.measured_noise.RNO_G package", "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module", "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module", "NuRadioReco.modules.neutrinoDirectionReconstructor package", "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module", "NuRadioReco.modules.neutrinoVertexReconstructor package", "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module", "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module", "NuRadioReco.modules.phasedarray package", "NuRadioReco.modules.phasedarray.triggerSimulator module", "NuRadioReco.modules.sphericalWaveFitter module", "NuRadioReco.modules.templateDirectionFitter module", "NuRadioReco.modules.trigger package", "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module", "NuRadioReco.modules.trigger.envelopeTrigger module", "NuRadioReco.modules.trigger.highLowThreshold module", "NuRadioReco.modules.trigger.multiHighLowThreshold module", "NuRadioReco.modules.trigger.powerIntegration module", "NuRadioReco.modules.trigger.rnog_surface_trigger module", "NuRadioReco.modules.trigger.simpleThreshold module", "NuRadioReco.modules.triggerTimeAdjuster module", "NuRadioReco.modules.voltageToAnalyticEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverter module", "NuRadioReco.modules.voltageToEfieldConverterPerChannel module", "NuRadioReco.utilities package", "NuRadioReco.utilities.analytic_pulse module", "NuRadioReco.utilities.bandpass_filter module", "NuRadioReco.utilities.cr_flux module", "NuRadioReco.utilities.dataservers module", "NuRadioReco.utilities.diodeSimulator module", "NuRadioReco.utilities.fft module", "NuRadioReco.utilities.geometryUtilities module", "NuRadioReco.utilities.ice module", "NuRadioReco.utilities.interferometry module", "NuRadioReco.utilities.io_utilities module", "NuRadioReco.utilities.logging module", "NuRadioReco.utilities.metaclasses module", "NuRadioReco.utilities.noise module", "NuRadioReco.utilities.particle_names module", "NuRadioReco.utilities.signal_processing module", "NuRadioReco.utilities.templates module", "NuRadioReco.utilities.timing module", "NuRadioReco.utilities.traceWindows module", "NuRadioReco.utilities.trace_utilities module", "NuRadioReco.utilities.units module", "NuRadioReco.utilities.variableWindowSizeCorrelation module", "NuRadioReco.utilities.version module", "Code Documentation", "Antenna Models", "Detector Description", "Properties of Detector Description", "The RNO-G detector class and database interface", "Detector Description", "Event Display", "Data Structure", "Use the Vertex Reconstruction Modules", "Manuals", "Modules", "overview of times", "Utilities", "NuRadioReco Documentation", "Welcome to NuRadio\u2019s documentation!"], "terms": {"nuradioreco": [0, 1, 2, 3, 5, 6, 9, 25, 35, 48, 55, 57, 58, 59, 61, 62, 63, 64, 235, 236, 237, 238, 241, 242, 243, 245, 247, 249], "i": [0, 2, 3, 4, 5, 9, 12, 13, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 42, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 99, 101, 103, 105, 106, 108, 109, 110, 114, 116, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 153, 154, 158, 160, 161, 164, 165, 167, 168, 170, 172, 173, 174, 176, 178, 179, 180, 183, 186, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248], "also": [0, 2, 4, 13, 22, 28, 29, 31, 32, 36, 38, 45, 46, 53, 55, 58, 61, 62, 63, 64, 67, 79, 83, 85, 87, 95, 96, 103, 106, 109, 120, 121, 128, 130, 136, 151, 160, 164, 165, 167, 189, 195, 197, 209, 218, 223, 230, 232, 237, 239, 242, 243, 245, 246, 248], "us": [0, 1, 2, 3, 5, 9, 12, 13, 22, 23, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50, 53, 54, 56, 57, 59, 60, 62, 63, 64, 77, 78, 79, 82, 83, 85, 87, 88, 93, 94, 95, 96, 97, 99, 101, 103, 105, 106, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 142, 143, 145, 151, 152, 153, 158, 160, 164, 165, 167, 170, 174, 177, 178, 179, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 219, 220, 222, 223, 225, 230, 231, 232, 233, 236, 237, 238, 239, 241, 244, 245, 246, 247], "analysi": [0, 1, 38, 55, 56, 58, 78, 142, 170, 177, 186, 245], "data": [0, 1, 12, 13, 17, 28, 29, 31, 32, 35, 38, 45, 46, 56, 58, 59, 61, 64, 70, 77, 78, 79, 81, 87, 88, 99, 103, 113, 116, 120, 121, 122, 126, 127, 136, 137, 138, 139, 151, 153, 164, 165, 167, 168, 170, 179, 182, 183, 186, 188, 189, 208, 211, 215, 216, 218, 232, 233, 236, 237, 238, 239, 241, 243, 245, 246, 248, 249], "To": [0, 1, 2, 3, 4, 32, 38, 54, 56, 58, 59, 60, 61, 62, 63, 64, 67, 79, 83, 97, 218, 223, 231, 237, 239, 242, 243, 245, 246, 247, 248], "thi": [0, 1, 2, 4, 9, 12, 13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 45, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 77, 78, 79, 81, 82, 83, 85, 87, 88, 94, 95, 96, 97, 99, 103, 106, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 126, 127, 128, 130, 134, 135, 136, 137, 141, 143, 144, 151, 154, 158, 160, 164, 165, 167, 168, 170, 174, 176, 178, 179, 186, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 222, 223, 225, 227, 230, 231, 232, 236, 237, 238, 239, 242, 243, 245, 246, 247], "end": [0, 13, 28, 29, 31, 32, 35, 50, 59, 63, 78, 103, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 131, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 217, 227, 231, 245, 246], "includ": [0, 1, 2, 3, 4, 5, 28, 29, 31, 32, 35, 43, 45, 46, 53, 54, 61, 62, 64, 79, 83, 85, 87, 97, 99, 124, 127, 134, 137, 151, 160, 164, 165, 189, 191, 194, 245, 246], "some": [0, 2, 4, 5, 6, 28, 53, 54, 55, 58, 61, 62, 64, 79, 122, 134, 137, 143, 151, 164, 167, 170, 220, 231, 237, 239, 243, 245, 246, 247, 249], "specif": [0, 2, 25, 28, 29, 31, 32, 36, 38, 39, 42, 45, 46, 53, 54, 59, 60, 61, 62, 79, 81, 83, 84, 85, 87, 99, 110, 138, 164, 170, 215, 222, 231, 242, 245, 249], "modul": [0, 1, 2, 3, 4, 5, 7, 20, 21, 27, 33, 37, 53, 54, 58, 59, 60, 61, 63, 64, 68, 69, 71, 75, 92, 212, 235, 236, 237, 242, 244, 248, 249], "read": [0, 4, 13, 28, 32, 35, 61, 63, 64, 72, 76, 77, 78, 81, 88, 94, 103, 108, 109, 110, 122, 128, 164, 165, 167, 168, 170, 173, 174, 175, 176, 178, 183, 188, 189, 222, 239, 246], "readlofardata": [0, 103, 122, 162, 163], "For": [0, 2, 4, 9, 13, 26, 28, 45, 46, 53, 55, 56, 58, 60, 61, 62, 63, 64, 77, 78, 79, 82, 83, 87, 97, 151, 164, 165, 167, 173, 176, 186, 220, 231, 232, 236, 237, 238, 239, 243, 245, 246, 247], "reconstruct": [0, 2, 5, 43, 60, 61, 63, 64, 76, 83, 85, 87, 103, 116, 118, 124, 126, 131, 143, 145, 146, 151, 152, 157, 160, 179, 183, 191, 194, 195, 209, 210, 232, 237, 239, 242, 244, 245, 246, 248], "we": [0, 2, 4, 13, 24, 25, 26, 28, 38, 53, 55, 56, 58, 59, 61, 62, 63, 64, 79, 81, 97, 121, 143, 164, 188, 189, 218, 223, 231, 236, 237, 238, 239, 242, 243, 245, 246, 247], "nuradiomc": [1, 3, 5, 6, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 70, 72, 76, 79, 81, 103, 110, 124, 143, 170, 220, 223, 234, 237, 242, 243, 245, 249], "ar": [1, 2, 3, 4, 5, 9, 12, 13, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 40, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 95, 96, 97, 99, 103, 106, 109, 110, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 134, 136, 137, 138, 140, 141, 142, 143, 151, 158, 160, 164, 167, 168, 170, 172, 173, 176, 178, 179, 183, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 218, 220, 223, 225, 231, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247], "sever": [1, 9, 12, 13, 53, 54, 55, 58, 59, 60, 61, 63, 88, 96, 97, 106, 142, 168, 178, 186, 197, 221, 223, 237, 239, 242, 245, 246], "differ": [1, 2, 22, 26, 28, 29, 31, 32, 35, 36, 38, 39, 42, 45, 46, 53, 54, 55, 56, 58, 60, 61, 63, 64, 67, 76, 77, 78, 81, 103, 110, 128, 134, 137, 142, 143, 153, 158, 160, 164, 167, 168, 170, 178, 183, 186, 194, 195, 202, 203, 204, 205, 206, 207, 208, 221, 222, 225, 227, 228, 233, 236, 237, 238, 239, 242, 243, 245, 246, 248], "facilit": [1, 55, 58, 167], "contain": [1, 2, 5, 9, 13, 24, 26, 28, 32, 35, 38, 53, 54, 55, 58, 59, 60, 61, 63, 64, 70, 77, 78, 79, 81, 83, 85, 87, 95, 96, 97, 103, 106, 122, 124, 128, 136, 138, 142, 160, 164, 165, 167, 168, 170, 174, 175, 179, 188, 189, 219, 225, 230, 231, 236, 237, 239, 241, 242, 243], "most": [1, 2, 3, 4, 13, 28, 55, 57, 58, 59, 61, 63, 124, 194, 237, 242, 243, 246, 247], "under": [1, 2, 28, 32, 45, 46, 58, 62, 64, 67, 248], "reader": [1, 122, 167, 170, 242, 246], "raw": [1, 57, 83, 85, 87, 164, 170, 183, 246], "io": [1, 79, 111, 237, 242], "more": [1, 2, 3, 9, 13, 22, 24, 28, 29, 31, 32, 38, 45, 46, 53, 54, 55, 58, 59, 60, 61, 62, 63, 79, 83, 97, 103, 122, 124, 137, 160, 167, 170, 179, 236, 237, 238, 239, 242, 245], "inform": [1, 2, 9, 13, 24, 25, 26, 28, 29, 31, 32, 35, 36, 42, 53, 54, 55, 58, 61, 62, 63, 64, 77, 78, 79, 81, 99, 122, 127, 128, 135, 137, 160, 168, 170, 178, 197, 223, 230, 233, 236, 237, 239, 245], "about": [1, 2, 24, 25, 26, 28, 29, 31, 32, 38, 53, 54, 58, 63, 64, 77, 78, 79, 99, 124, 127, 237, 242, 247], "avail": [1, 2, 4, 9, 13, 24, 25, 26, 28, 35, 45, 55, 56, 60, 61, 62, 63, 67, 77, 78, 86, 103, 128, 165, 170, 183, 238, 240, 248], "each": [1, 2, 5, 9, 22, 24, 25, 26, 28, 29, 31, 32, 35, 38, 42, 53, 54, 55, 56, 59, 60, 61, 63, 77, 78, 79, 97, 103, 110, 120, 122, 124, 127, 130, 137, 143, 149, 151, 154, 164, 165, 170, 173, 175, 176, 191, 194, 197, 206, 209, 210, 211, 217, 221, 225, 237, 238, 239, 242, 243, 245], "page": [1, 2, 53, 54, 57, 59, 63, 79, 238, 239, 242, 249], "below": [1, 2, 3, 4, 9, 13, 23, 28, 35, 42, 53, 55, 57, 58, 61, 62, 63, 79, 85, 128, 134, 160, 164, 170, 197, 202, 206, 207, 214, 220, 236, 238, 239, 245], "lofar": [1, 68, 81, 111, 162, 174, 249], "thank": [2, 61, 242, 243], "you": [2, 4, 5, 13, 28, 53, 54, 58, 62, 64, 76, 77, 78, 79, 83, 85, 87, 94, 95, 96, 97, 99, 106, 108, 109, 151, 165, 177, 232, 236, 239, 241, 243, 245, 247], "consid": [2, 4, 13, 28, 29, 31, 32, 38, 42, 55, 56, 61, 63, 103, 118, 121, 122, 127, 191, 208], "intend": 2, "commun": [2, 61, 103], "base": [2, 3, 9, 13, 22, 24, 26, 28, 29, 31, 32, 34, 35, 36, 42, 45, 46, 48, 50, 59, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 220, 223, 224, 225, 228, 233], "simul": [2, 5, 12, 13, 24, 25, 26, 28, 29, 31, 32, 38, 45, 46, 50, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 67, 79, 81, 83, 85, 87, 88, 97, 99, 103, 106, 108, 113, 114, 116, 124, 126, 127, 128, 136, 143, 153, 154, 172, 173, 174, 175, 176, 177, 189, 191, 197, 202, 203, 204, 205, 207, 208, 209, 210, 236, 237, 239, 242, 245, 246], "softwar": [2, 59, 64, 164, 188, 236], "radio": [2, 4, 5, 13, 23, 24, 26, 32, 53, 55, 57, 58, 60, 61, 62, 64, 79, 93, 99, 101, 103, 105, 136, 146, 151, 160, 170, 175, 209, 231, 237], "neutrino": [2, 3, 5, 12, 13, 23, 24, 26, 32, 35, 40, 42, 43, 53, 55, 56, 59, 60, 61, 63, 64, 94, 97, 103, 108, 109, 142, 158, 191, 228, 242, 243], "detector": [2, 4, 5, 23, 24, 26, 28, 29, 31, 32, 34, 35, 42, 43, 53, 54, 55, 58, 59, 61, 96, 97, 99, 106, 114, 116, 118, 121, 125, 126, 127, 128, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 160, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 189, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 225, 230, 231, 235, 236, 243, 245, 246, 247, 248, 249], "everyon": 2, "invit": 2, "experi": [2, 55, 61, 120, 122, 128, 174, 237, 242, 245, 249], "If": [2, 4, 5, 9, 12, 13, 22, 23, 25, 26, 28, 29, 31, 32, 35, 36, 45, 46, 53, 54, 55, 56, 58, 61, 63, 64, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 110, 114, 116, 122, 124, 125, 126, 127, 128, 134, 137, 138, 139, 140, 143, 151, 154, 160, 164, 165, 167, 168, 170, 173, 174, 176, 178, 179, 188, 189, 194, 197, 203, 208, 209, 210, 217, 222, 223, 225, 227, 230, 231, 236, 237, 238, 241, 242, 245, 246, 247], "significantli": [2, 62], "pleas": [2, 3, 4, 5, 23, 53, 55, 62, 64, 217, 220, 236, 238, 245], "contact": 2, "anel": 2, "cg": 2, "laser": [2, 78], "github": [2, 4, 32, 55, 57, 62, 64, 70, 79, 136, 170], "so": [2, 4, 22, 28, 29, 31, 35, 44, 50, 53, 55, 58, 59, 61, 62, 63, 64, 79, 83, 84, 85, 87, 127, 128, 136, 158, 164, 167, 189, 209, 218, 223, 231, 232, 236, 237, 238, 241, 242, 243, 245, 246, 247], "ongo": 2, "activ": [2, 12, 23, 28, 35, 78, 141, 241, 247], "both": [2, 3, 4, 22, 26, 28, 55, 56, 58, 61, 62, 81, 88, 120, 160, 164, 174, 179, 197, 210, 223, 236, 237, 238, 242, 243, 246], "abl": [2, 4, 45, 46, 59, 61, 167, 237, 245], "provid": [2, 3, 4, 13, 22, 25, 26, 28, 35, 36, 44, 45, 48, 53, 54, 55, 58, 61, 62, 63, 64, 67, 79, 81, 83, 88, 99, 103, 122, 136, 139, 151, 154, 167, 170, 209, 211, 222, 236, 237, 242, 243, 245, 247, 248], "commit": [2, 61, 103, 234], "access": [2, 4, 45, 46, 53, 54, 55, 58, 61, 77, 78, 81, 83, 103, 168, 170, 236, 237, 239, 242], "repositori": [2, 4, 64, 103, 234, 242], "find": [2, 5, 28, 29, 31, 32, 53, 55, 58, 62, 77, 78, 121, 122, 135, 151, 160, 167, 174, 197, 211, 221, 223, 243], "an": [2, 3, 4, 9, 12, 13, 22, 25, 26, 28, 29, 30, 32, 34, 35, 38, 42, 45, 46, 52, 53, 54, 55, 57, 58, 60, 61, 63, 78, 79, 81, 83, 85, 87, 88, 95, 96, 97, 99, 103, 106, 110, 114, 119, 121, 122, 124, 125, 128, 130, 131, 137, 143, 146, 151, 160, 164, 167, 170, 172, 174, 179, 189, 191, 194, 195, 197, 203, 204, 208, 209, 210, 215, 218, 219, 221, 223, 225, 230, 231, 236, 237, 238, 239, 242, 243, 245, 246, 247], "issu": [2, 55, 61, 197, 202, 206, 207], "bug": 2, "creat": [2, 4, 9, 13, 28, 35, 53, 54, 55, 56, 57, 59, 61, 62, 63, 78, 79, 83, 103, 125, 164, 165, 167, 172, 173, 176, 194, 197, 222, 223, 230, 236, 237, 238, 245, 247], "want": [2, 4, 13, 28, 55, 56, 58, 61, 62, 63, 64, 76, 77, 78, 79, 83, 85, 87, 99, 128, 165, 238, 239, 241, 242, 243, 245, 247], "your": [2, 4, 28, 29, 31, 32, 45, 46, 59, 64, 76, 77, 78, 95, 96, 97, 106, 151, 164, 232, 239, 241, 245], "new": [2, 9, 13, 22, 25, 26, 28, 29, 31, 32, 44, 46, 50, 55, 58, 61, 62, 63, 78, 79, 83, 85, 87, 97, 109, 130, 139, 156, 158, 164, 165, 175, 186, 188, 189, 220, 223, 236, 237, 239, 242, 247], "branch": [2, 44, 55, 58, 245], "make": [2, 13, 28, 55, 56, 61, 63, 64, 116, 120, 126, 151, 170, 177, 227, 237, 241, 242, 243, 245, 247], "pull": [2, 55, 81, 167, 170], "request": [2, 22, 26, 45, 46, 55, 61, 63, 77, 78, 79, 81, 87, 127, 128, 173, 176, 197, 214, 216, 236, 237], "loos": 2, "follow": [2, 4, 13, 28, 31, 32, 38, 44, 45, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 78, 81, 82, 99, 122, 128, 146, 179, 188, 209, 236, 237, 238, 245, 246], "git": [2, 4, 103, 234], "flow": [2, 245], "model": [2, 13, 22, 24, 25, 26, 28, 29, 31, 32, 35, 39, 40, 42, 45, 46, 48, 53, 55, 60, 62, 63, 64, 66, 79, 81, 83, 84, 85, 87, 92, 103, 136, 151, 160, 191, 217, 220, 230, 240, 243, 245], "A": [2, 3, 12, 13, 23, 24, 26, 28, 32, 34, 35, 36, 40, 42, 45, 46, 53, 54, 55, 58, 59, 61, 62, 63, 64, 77, 78, 79, 81, 84, 88, 99, 103, 122, 128, 135, 151, 160, 164, 167, 170, 173, 186, 195, 209, 218, 223, 236, 237, 238, 239, 242, 243, 245], "detail": [2, 3, 4, 9, 13, 24, 25, 26, 28, 40, 45, 53, 54, 55, 58, 59, 60, 61, 62, 78, 83, 120, 170, 237, 242], "tutori": [2, 5, 56, 64, 67, 248], "given": [2, 3, 5, 9, 13, 24, 25, 26, 28, 29, 31, 32, 34, 35, 42, 44, 48, 55, 56, 57, 58, 61, 62, 63, 77, 78, 83, 85, 87, 99, 103, 108, 110, 114, 119, 121, 122, 125, 127, 128, 135, 137, 151, 153, 164, 165, 167, 168, 172, 174, 175, 178, 180, 194, 195, 197, 204, 208, 215, 217, 219, 221, 231, 233, 237, 238, 242, 245, 246], "here": [2, 3, 4, 5, 28, 29, 31, 32, 45, 46, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 79, 81, 120, 122, 134, 137, 151, 164, 191, 209, 232, 237, 238, 245, 247], "short": [2, 25, 61, 63, 246], "summari": 2, "The": [2, 3, 4, 9, 12, 13, 22, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 42, 44, 45, 46, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 93, 94, 95, 96, 97, 99, 101, 103, 105, 106, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 145, 151, 152, 153, 154, 164, 165, 167, 170, 172, 174, 183, 186, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 225, 227, 231, 236, 238, 240, 241, 242, 243, 245, 246, 247], "master": [2, 55, 57, 63, 70], "reserv": [2, 50], "stabl": [2, 122], "releas": [2, 4], "user": [2, 4, 9, 13, 24, 25, 26, 28, 35, 45, 46, 55, 59, 61, 62, 63, 83, 85, 87, 122, 128, 164, 174, 176, 220, 236, 238, 245, 247], "can": [2, 4, 5, 9, 13, 24, 25, 26, 28, 29, 31, 32, 35, 38, 45, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 77, 78, 79, 81, 83, 85, 87, 93, 95, 96, 97, 101, 103, 105, 106, 110, 116, 122, 124, 126, 128, 134, 135, 137, 138, 143, 151, 158, 160, 164, 165, 167, 168, 170, 174, 177, 179, 183, 189, 191, 197, 202, 203, 204, 205, 206, 207, 208, 209, 223, 224, 225, 230, 231, 232, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248], "alwai": [2, 26, 45, 46, 58, 61, 164, 220, 237, 242, 247], "check": [2, 5, 9, 28, 29, 31, 32, 35, 53, 54, 55, 56, 58, 59, 79, 83, 85, 86, 87, 94, 99, 108, 109, 114, 135, 167, 189, 194, 197, 223, 237, 242, 247], "out": [2, 5, 32, 55, 56, 59, 63, 72, 76, 77, 78, 110, 124, 143, 164, 165, 170, 217, 231, 237, 242], "get": [2, 4, 13, 22, 26, 28, 32, 35, 39, 44, 45, 46, 56, 58, 61, 62, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 97, 99, 110, 116, 126, 127, 128, 135, 143, 153, 164, 165, 167, 178, 189, 208, 215, 217, 219, 220, 223, 228, 231, 237, 242, 246], "latest": [2, 4, 53, 164, 237], "all": [2, 3, 4, 9, 12, 13, 17, 26, 28, 29, 30, 31, 32, 35, 36, 38, 40, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 77, 78, 79, 81, 83, 85, 87, 88, 94, 99, 103, 108, 109, 110, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 135, 138, 142, 143, 145, 151, 164, 165, 167, 168, 170, 174, 175, 178, 179, 183, 189, 191, 197, 202, 203, 204, 205, 206, 207, 208, 223, 225, 228, 232, 236, 237, 239, 241, 242, 243, 245, 246, 247], "develop": [2, 22, 236], "happen": [2, 42, 53, 54, 55, 61, 63, 77, 78, 128, 225], "featur": [2, 4, 55, 58, 59, 62, 67, 96, 106, 164, 237, 245, 248, 249], "merg": [2, 35, 53, 54, 55, 56, 63, 109], "after": [2, 32, 50, 55, 60, 63, 83, 85, 87, 95, 96, 97, 103, 106, 110, 122, 127, 128, 153, 167, 179, 197, 217, 225, 237, 242, 245, 246], "review": [2, 24, 26], "sure": [2, 28, 29, 31, 32, 61, 63, 95, 96, 97, 106, 120, 151, 165, 241, 243, 245], "specifi": [2, 3, 9, 12, 13, 22, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 77, 78, 79, 81, 83, 85, 87, 88, 94, 95, 96, 97, 106, 108, 109, 116, 124, 126, 127, 128, 134, 136, 137, 138, 141, 144, 145, 153, 155, 158, 160, 164, 165, 170, 176, 179, 180, 183, 189, 191, 194, 197, 202, 203, 204, 205, 206, 207, 208, 214, 221, 223, 225, 236, 237, 238, 239, 245, 246], "when": [2, 13, 28, 32, 35, 46, 53, 55, 58, 61, 62, 63, 77, 78, 79, 82, 87, 94, 99, 103, 108, 109, 116, 126, 127, 143, 151, 164, 165, 170, 179, 189, 191, 209, 218, 219, 223, 225, 237, 238, 239, 242, 243, 245, 246, 247], "allow": [2, 4, 22, 32, 35, 38, 45, 46, 55, 56, 57, 58, 61, 62, 63, 64, 77, 78, 79, 83, 85, 87, 88, 96, 106, 121, 122, 128, 130, 134, 170, 189, 214, 223, 225, 228, 237, 239, 242, 245], "hotfix": 2, "These": [2, 4, 53, 54, 55, 58, 61, 63, 122, 164, 239, 245, 246], "well": [2, 4, 24, 25, 26, 53, 54, 55, 58, 61, 62, 63, 103, 120, 121, 122, 165, 167, 174, 179, 188, 223, 237, 239, 242, 243], "where": [2, 3, 9, 13, 22, 23, 25, 28, 36, 38, 42, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 73, 81, 83, 85, 87, 103, 116, 121, 124, 125, 126, 134, 135, 137, 141, 144, 164, 167, 174, 188, 189, 194, 202, 203, 204, 205, 206, 207, 217, 218, 230, 237, 239, 242, 243, 246], "tag": [2, 167], "made": [2, 61, 76, 151], "changelog": 2, "correct": [2, 3, 4, 32, 35, 38, 59, 60, 61, 62, 63, 76, 82, 83, 84, 85, 87, 88, 103, 127, 143, 158, 164, 165, 170, 194, 195, 218, 237, 246, 247], "start": [2, 9, 22, 25, 28, 29, 31, 32, 36, 42, 50, 53, 54, 55, 56, 61, 62, 63, 77, 78, 95, 103, 110, 121, 122, 128, 140, 160, 164, 167, 170, 197, 203, 208, 233, 237, 241, 242], "first": [2, 4, 9, 12, 13, 28, 29, 31, 32, 53, 54, 55, 56, 58, 60, 61, 63, 79, 81, 83, 85, 87, 88, 94, 97, 99, 103, 108, 109, 122, 124, 141, 142, 151, 153, 164, 170, 180, 189, 191, 195, 197, 222, 223, 228, 231, 236, 237, 238, 239, 241, 243, 245, 246], "checkout": 2, "b": [2, 3, 28, 32, 45, 46, 53, 62, 134, 201, 209, 210], "my_new_featur": 2, "which": [2, 3, 4, 9, 12, 13, 22, 25, 28, 29, 30, 31, 32, 35, 36, 38, 42, 45, 46, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 77, 78, 79, 81, 83, 85, 87, 88, 94, 95, 96, 97, 103, 106, 108, 109, 110, 114, 116, 120, 121, 122, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 151, 158, 160, 161, 164, 165, 167, 170, 172, 173, 176, 179, 183, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 215, 218, 219, 221, 223, 225, 231, 236, 237, 238, 239, 242, 245, 246, 247], "should": [2, 4, 9, 13, 26, 28, 29, 31, 32, 35, 36, 38, 45, 46, 48, 55, 58, 59, 60, 61, 62, 63, 64, 77, 78, 79, 81, 83, 85, 87, 95, 96, 97, 99, 106, 109, 110, 116, 118, 121, 122, 124, 125, 126, 127, 128, 130, 134, 135, 137, 138, 143, 144, 153, 158, 160, 164, 165, 168, 170, 189, 194, 195, 197, 202, 218, 220, 221, 225, 227, 231, 232, 233, 237, 241, 242, 243, 245], "replac": [2, 22, 46, 87, 116, 126, 130, 134, 165, 237, 245], "line": [2, 5, 22, 23, 24, 26, 28, 29, 30, 38, 55, 58, 59, 61, 64, 134, 151, 155, 195, 197, 214, 221, 223], "now": [2, 4, 36, 61, 62, 63, 79, 164, 182, 245], "written": [2, 13, 35, 55, 61, 62, 63, 77, 78, 164, 179, 232, 237, 242], "fix": [2, 28, 50, 55, 56, 61, 127, 128, 165, 176, 188, 191, 217, 238, 246], "push": 2, "normal": [2, 24, 25, 26, 28, 35, 38, 55, 88, 116, 126, 137, 213, 218, 219, 221, 237], "except": [2, 3, 35, 55, 179, 212, 223, 242], "need": [2, 4, 13, 17, 22, 24, 25, 26, 28, 31, 35, 43, 45, 46, 55, 56, 57, 58, 59, 61, 62, 63, 64, 72, 76, 81, 83, 85, 87, 103, 110, 114, 122, 125, 128, 134, 138, 151, 164, 177, 186, 189, 195, 197, 202, 203, 204, 205, 206, 207, 209, 210, 217, 225, 231, 232, 236, 237, 239, 242, 243, 247], "set": [2, 4, 9, 12, 13, 22, 23, 25, 26, 28, 29, 31, 32, 35, 45, 46, 53, 56, 58, 59, 60, 61, 62, 63, 64, 77, 78, 79, 83, 85, 87, 94, 95, 96, 97, 99, 106, 108, 109, 110, 118, 120, 121, 122, 125, 127, 128, 130, 136, 137, 140, 142, 144, 149, 151, 153, 157, 158, 160, 164, 165, 167, 168, 170, 173, 174, 176, 178, 179, 189, 194, 195, 197, 199, 203, 204, 208, 209, 211, 223, 225, 227, 228, 233, 237, 238, 239, 242, 243, 245, 246], "upstream": 2, "initi": [2, 13, 28, 35, 36, 44, 45, 55, 79, 83, 85, 87, 95, 97, 103, 106, 110, 151, 168, 170, 173, 174, 175, 176, 191, 194, 209, 223, 233, 239, 242], "onli": [2, 4, 9, 13, 22, 24, 25, 26, 28, 29, 31, 32, 35, 38, 40, 42, 45, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 72, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 94, 95, 96, 97, 99, 103, 106, 108, 109, 110, 116, 121, 124, 126, 128, 134, 137, 143, 151, 158, 160, 164, 165, 167, 170, 173, 174, 176, 183, 188, 189, 191, 208, 209, 210, 217, 218, 220, 224, 231, 237, 239, 242, 243, 245, 247], "exist": [2, 9, 12, 13, 28, 29, 31, 32, 35, 36, 46, 52, 53, 55, 58, 59, 61, 62, 63, 77, 78, 79, 83, 87, 94, 99, 108, 109, 127, 208, 223, 224, 239, 247], "local": [2, 3, 4, 35, 61, 64, 81, 83, 103, 164, 172, 223], "machin": [2, 62], "origin": [2, 3, 13, 22, 24, 25, 26, 28, 32, 87, 93, 101, 103, 105, 116, 126, 128, 151, 165, 197, 231], "onc": [2, 4, 55, 61, 62, 79, 81, 170, 237, 239, 243, 245], "readi": 2, "befor": [2, 28, 32, 36, 55, 61, 76, 95, 96, 97, 106, 110, 116, 122, 126, 127, 138, 153, 164, 170, 188, 191, 194, 195, 197, 202, 209, 225, 245], "introduc": [2, 45, 46, 63, 246, 247], "them": [2, 28, 29, 31, 50, 55, 61, 63, 79, 81, 88, 124, 125, 128, 167, 170, 174, 188, 189, 239, 245], "clearli": 2, "function": [2, 3, 9, 13, 22, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 42, 44, 45, 46, 48, 53, 54, 55, 56, 57, 58, 61, 62, 63, 72, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 110, 116, 120, 121, 122, 124, 125, 126, 127, 128, 134, 135, 137, 140, 144, 160, 164, 165, 167, 168, 170, 173, 174, 176, 178, 180, 189, 191, 208, 209, 210, 214, 215, 219, 220, 223, 230, 231, 237, 239, 242, 243, 245, 246, 247], "have": [2, 3, 4, 5, 9, 12, 13, 22, 32, 35, 40, 45, 46, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 67, 72, 76, 77, 78, 79, 83, 85, 87, 94, 95, 96, 97, 106, 108, 109, 110, 118, 120, 121, 122, 128, 134, 136, 143, 164, 167, 170, 177, 179, 183, 188, 189, 195, 197, 202, 218, 223, 225, 231, 232, 237, 238, 239, 242, 243, 245, 246, 247, 248], "correctli": [2, 24, 25, 26, 53, 54, 55, 122, 238, 241], "comment": [2, 63, 242], "appropri": [2, 28, 55, 79, 165, 208, 231, 237], "reflect": [2, 28, 29, 31, 32, 38, 45, 46, 53, 58, 61, 62, 63, 103, 194, 195, 219, 231, 237, 246], "It": [2, 4, 9, 13, 28, 29, 31, 36, 38, 46, 55, 58, 59, 61, 63, 64, 79, 81, 82, 87, 116, 121, 126, 130, 136, 138, 143, 151, 153, 164, 167, 174, 189, 191, 197, 223, 231, 237, 239, 242, 243, 245], "succesfulli": [2, 4], "complet": [2, 28, 58, 61, 62, 63, 64, 67, 79, 83, 87, 164, 225, 237, 238, 248], "test": [2, 56, 77, 78, 114, 134, 164, 243], "run": [2, 4, 13, 28, 29, 31, 32, 33, 35, 36, 37, 46, 50, 53, 54, 55, 63, 66, 79, 83, 85, 87, 99, 103, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 231, 233, 237, 239, 241, 242, 243, 245], "automat": [2, 4, 13, 25, 28, 32, 35, 46, 58, 59, 61, 62, 63, 83, 85, 87, 95, 96, 97, 106, 154, 158, 164, 197, 236, 237, 242, 245, 246], "time": [2, 3, 9, 13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 43, 48, 50, 53, 54, 55, 56, 62, 63, 77, 78, 79, 81, 83, 84, 85, 87, 88, 92, 94, 95, 96, 97, 103, 106, 108, 109, 110, 114, 121, 122, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 151, 153, 160, 164, 165, 167, 170, 183, 186, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 221, 224, 225, 230, 231, 233, 236, 237, 238, 242, 243, 247, 248, 249], "implement": [2, 24, 25, 26, 28, 29, 31, 35, 45, 46, 57, 61, 62, 63, 64, 72, 76, 79, 81, 114, 134, 137, 151, 160, 164, 165, 214, 220, 223, 225, 237, 239, 242, 245], "doe": [2, 4, 24, 26, 28, 29, 31, 32, 36, 46, 53, 55, 61, 63, 77, 78, 87, 94, 95, 96, 97, 106, 108, 109, 128, 134, 135, 164, 167, 189, 194, 195, 237, 242, 243, 246, 247], "break": 2, "anyth": 2, "still": [2, 81, 128, 164, 183, 237, 245], "built": [2, 35, 242, 245], "One": [2, 28, 38, 53, 54, 55, 59, 61, 62, 63, 64, 218, 237], "core": [2, 12, 13, 38, 42, 50, 55, 59, 63, 92, 103, 151, 164, 172, 173, 176], "ha": [2, 3, 9, 13, 22, 28, 53, 55, 56, 58, 59, 61, 62, 63, 64, 79, 83, 85, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 110, 127, 136, 137, 154, 160, 164, 167, 170, 174, 177, 189, 209, 214, 217, 218, 223, 231, 236, 237, 238, 239, 242, 243, 245], "approv": [2, 55, 63], "wait": 2, "least": [2, 63, 87, 99, 128, 153, 189, 209, 210, 225], "24": [2, 88, 103], "hour": [2, 36, 59, 247], "even": [2, 56, 61, 63, 77, 78, 120, 137, 164, 165, 167, 243, 245, 247], "been": [2, 13, 22, 28, 55, 61, 62, 63, 72, 76, 79, 87, 99, 120, 122, 127, 128, 164, 170, 179, 217, 236, 237, 243, 245], "other": [2, 28, 29, 31, 32, 55, 58, 61, 62, 64, 79, 87, 88, 120, 122, 124, 134, 143, 151, 158, 164, 170, 174, 183, 188, 189, 194, 210, 225, 237, 239, 242, 245], "mai": [2, 4, 28, 29, 31, 32, 53, 54, 58, 97, 151, 170, 209, 237, 242, 243, 245], "look": [2, 5, 28, 61, 67, 121, 151, 164, 170, 189, 208, 223, 237, 239, 246, 248], "thei": [2, 9, 45, 46, 53, 54, 55, 56, 61, 63, 79, 87, 97, 128, 164, 167, 170, 236, 237, 242, 243, 246, 247], "might": [2, 13, 22, 28, 53, 56, 58, 79, 95, 96, 97, 103, 106, 127, 137, 151, 170, 186, 188, 237, 239, 245], "someth": [2, 64], "miss": [2, 4, 63, 79, 87, 164, 218, 237], "In": [2, 4, 13, 24, 25, 26, 28, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 97, 116, 122, 126, 134, 139, 164, 165, 170, 189, 209, 210, 214, 218, 237, 238, 242, 245, 246], "gener": [2, 3, 4, 7, 12, 15, 17, 25, 26, 28, 29, 31, 32, 35, 44, 46, 52, 53, 54, 63, 66, 87, 99, 103, 114, 134, 137, 149, 153, 164, 170, 173, 176, 188, 189, 194, 195, 225, 242, 245], "try": [2, 168, 170, 222], "industri": 2, "explicitli": [2, 28, 134, 209, 237, 245], "mention": 2, "resort": [2, 61], "best": [2, 55, 61, 160, 239, 245], "practic": [2, 24, 55, 61, 63, 128, 218, 243], "tri": [2, 4, 174, 197], "pep": 2, "8": [2, 38, 42, 61, 63, 103, 125, 151, 165, 177, 217, 225, 231], "extens": [2, 3, 61], "especi": [2, 95, 96, 97, 106, 218], "physic": [2, 3, 24, 26, 42, 55, 61, 120, 131, 164, 170, 246], "behind": 2, "come": [2, 3, 55, 58, 59, 60, 61, 131, 136, 170, 217, 231, 239, 242, 243], "variabl": [2, 4, 23, 45, 46, 53, 55, 61, 62, 77, 78, 122, 167, 170, 174, 233, 239, 246], "defin": [2, 3, 12, 13, 24, 25, 26, 28, 32, 35, 40, 45, 46, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 79, 82, 87, 95, 96, 97, 103, 106, 109, 110, 116, 121, 125, 126, 127, 128, 130, 135, 138, 144, 151, 153, 160, 165, 175, 176, 197, 208, 211, 213, 218, 221, 223, 230, 231, 232, 237, 238, 239, 242, 243, 245, 246, 247], "repres": [2, 25, 36, 42, 55, 58, 164, 172], "unit": [2, 9, 13, 22, 24, 25, 26, 28, 29, 31, 32, 38, 39, 40, 42, 45, 46, 48, 55, 56, 57, 58, 59, 61, 62, 63, 78, 81, 86, 88, 92, 110, 118, 120, 127, 128, 134, 139, 140, 144, 145, 151, 155, 164, 167, 172, 197, 205, 209, 212, 215, 218, 233, 238, 242, 243], "must": [2, 9, 13, 22, 28, 35, 43, 55, 60, 61, 62, 63, 78, 128, 134, 197, 223, 231, 238], "util": [2, 9, 28, 32, 55, 57, 58, 59, 61, 62, 63, 65, 81, 97, 110, 120, 130, 143, 160, 164, 235, 242, 243, 245, 248, 249], "avoid": [2, 9, 28, 29, 31, 79, 167, 174, 223, 237, 242, 245, 246], "ad": [2, 26, 32, 35, 36, 45, 46, 55, 58, 61, 78, 79, 95, 96, 97, 99, 106, 122, 124, 127, 128, 130, 134, 136, 137, 143, 153, 158, 174, 189, 230, 237, 239, 242], "without": [2, 28, 35, 45, 46, 53, 54, 55, 61, 62, 63, 82, 87, 103, 124, 128, 164, 178, 215, 237, 238], "clear": [2, 61, 130], "part": [2, 28, 29, 31, 32, 35, 55, 56, 59, 61, 81, 87, 127, 128, 140, 225, 237, 238, 242], "sourc": [2, 9, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 61, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237], "python": [2, 4, 5, 22, 30, 46, 56, 59, 62, 63, 64, 77, 78, 164, 221, 222, 225, 237, 241, 245], "human": [2, 36, 38, 64], "readabl": [2, 36, 38, 64, 81], "sphinx": [2, 4], "numpi": [2, 4, 22, 28, 32, 35, 45, 46, 61, 62, 63, 81, 122, 124, 137, 164, 165, 218, 247], "syntax": [2, 83, 85], "briefli": 2, "mean": [2, 12, 13, 28, 38, 42, 55, 56, 61, 79, 83, 85, 87, 88, 95, 96, 97, 103, 106, 108, 110, 114, 128, 151, 170, 183, 189, 217, 236, 239, 241, 243, 245], "like": [2, 4, 35, 38, 46, 58, 61, 62, 63, 64, 87, 103, 122, 167, 174, 194, 209, 237, 238, 239, 242, 243, 246], "def": [2, 55, 56, 58, 63, 151, 209, 223, 245], "example_funct": 2, "x": [2, 3, 13, 23, 28, 32, 35, 36, 43, 44, 45, 46, 49, 50, 55, 56, 58, 61, 62, 63, 81, 84, 85, 97, 103, 120, 151, 153, 161, 164, 165, 176, 194, 195, 198, 201, 209, 210, 219, 221, 236, 238, 239], "y": [2, 3, 13, 22, 28, 32, 45, 46, 49, 55, 56, 59, 61, 62, 63, 78, 81, 85, 88, 97, 103, 151, 153, 164, 165, 176, 195, 198, 221, 236, 238, 243], "mode": [2, 32, 35, 42, 53, 54, 63, 83, 87, 99, 109, 116, 124, 125, 126, 128, 132, 153, 158, 161, 179, 208, 242, 246], "quickli": [2, 56], "one": [2, 4, 12, 13, 17, 22, 28, 35, 38, 40, 45, 46, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 94, 97, 99, 108, 109, 110, 114, 122, 124, 127, 128, 142, 143, 151, 153, 164, 165, 168, 172, 174, 175, 178, 189, 197, 218, 220, 223, 224, 225, 228, 231, 237, 242, 245, 247], "descript": [2, 24, 28, 32, 35, 42, 45, 46, 53, 54, 56, 58, 59, 61, 62, 79, 82, 83, 85, 87, 114, 116, 126, 127, 128, 131, 136, 138, 139, 141, 142, 143, 145, 151, 152, 160, 167, 168, 173, 174, 175, 176, 178, 179, 189, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 225, 236, 239, 242, 246, 248, 249], "method": [2, 9, 22, 24, 26, 28, 29, 31, 32, 34, 35, 36, 38, 42, 45, 46, 48, 50, 58, 61, 62, 63, 77, 78, 79, 81, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 223, 224, 225, 228, 231, 233, 237, 242, 243, 245, 247], "space": [2, 43, 58, 61, 62, 63, 103, 124, 151, 161, 191, 209, 211, 218, 242, 243], "option": [2, 9, 13, 22, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 45, 46, 52, 53, 54, 55, 60, 63, 77, 78, 79, 82, 87, 88, 95, 96, 97, 103, 106, 109, 116, 125, 126, 127, 128, 132, 134, 135, 137, 144, 151, 153, 155, 158, 160, 165, 170, 174, 179, 183, 188, 189, 194, 195, 197, 203, 206, 210, 220, 223, 242, 245], "longer": [2, 103, 128, 243], "while": [2, 55, 61, 79, 88, 230, 237, 242, 245], "current": [2, 4, 12, 13, 24, 28, 29, 31, 32, 36, 40, 42, 44, 54, 55, 58, 64, 72, 76, 77, 78, 79, 80, 83, 85, 87, 103, 122, 153, 158, 165, 170, 173, 176, 197, 223, 234, 237, 242, 246], "enforc": [2, 247], "multipl": [2, 12, 13, 28, 35, 50, 52, 53, 54, 55, 56, 63, 94, 99, 108, 109, 122, 134, 142, 164, 167, 204, 208, 233, 237, 242, 243, 245, 246], "paragraph": 2, "separ": [2, 28, 29, 31, 32, 53, 54, 56, 59, 64, 97, 120, 121, 237, 239, 242, 246], "newlin": 2, "paramet": [2, 9, 12, 13, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 58, 61, 62, 63, 64, 70, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 99, 101, 105, 106, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 165, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 183, 188, 189, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 227, 230, 231, 233, 237, 239, 246, 247], "float": [2, 9, 12, 13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 55, 62, 76, 79, 81, 83, 84, 85, 87, 88, 94, 95, 96, 97, 103, 106, 108, 109, 110, 114, 116, 118, 121, 124, 125, 126, 127, 128, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 151, 153, 156, 160, 164, 167, 170, 176, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 211, 213, 214, 215, 217, 218, 219, 220, 225, 227, 230, 231, 233, 236, 246], "e": [2, 3, 12, 13, 22, 23, 24, 25, 26, 28, 32, 35, 38, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 61, 63, 64, 77, 78, 79, 81, 83, 84, 85, 87, 94, 95, 96, 97, 103, 106, 108, 109, 110, 116, 122, 126, 134, 141, 143, 151, 164, 165, 167, 170, 177, 183, 211, 215, 218, 223, 225, 231, 236, 237, 238, 239, 242, 245, 247], "g": [2, 3, 4, 28, 35, 40, 42, 44, 53, 55, 58, 64, 77, 78, 79, 81, 83, 84, 85, 87, 88, 94, 103, 108, 109, 124, 126, 134, 143, 151, 164, 165, 170, 177, 216, 218, 223, 236, 237, 240, 242, 243, 245, 246, 247], "distanc": [2, 9, 22, 23, 24, 25, 26, 28, 29, 31, 32, 53, 54, 55, 56, 60, 61, 63, 103, 122, 151, 173, 176, 194, 195, 243], "metr": [2, 55, 61, 63], "int": [2, 9, 12, 13, 15, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 43, 44, 48, 52, 55, 61, 62, 73, 77, 78, 79, 81, 83, 85, 87, 88, 95, 96, 97, 99, 106, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 151, 152, 155, 161, 164, 165, 167, 168, 170, 173, 176, 177, 179, 183, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 210, 214, 217, 218, 223, 225, 227, 231, 233], "str": [2, 28, 29, 31, 32, 35, 36, 40, 43, 48, 56, 63, 77, 78, 79, 81, 83, 85, 87, 88, 94, 95, 96, 97, 106, 108, 109, 120, 122, 125, 130, 132, 151, 165, 167, 170, 188, 189, 210, 220, 221, 223], "default": [2, 9, 12, 13, 17, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 39, 40, 42, 44, 45, 46, 52, 55, 59, 61, 62, 63, 64, 70, 73, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 110, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 143, 145, 151, 152, 153, 155, 161, 164, 165, 167, 168, 170, 173, 174, 176, 179, 183, 188, 189, 194, 197, 199, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 219, 223, 224, 225, 227, 231, 233, 237, 239, 243, 245, 246], "limit": [2, 9, 28, 32, 38, 43, 57, 61, 131, 137, 145, 239, 243, 246], "from": [2, 3, 4, 5, 9, 13, 17, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 70, 72, 77, 78, 79, 81, 83, 84, 85, 87, 88, 94, 103, 106, 108, 109, 110, 113, 114, 116, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 143, 144, 146, 149, 150, 151, 154, 155, 158, 160, 164, 165, 167, 170, 172, 173, 174, 176, 178, 186, 188, 189, 194, 195, 197, 206, 209, 210, 211, 214, 216, 217, 219, 221, 223, 225, 227, 230, 231, 232, 236, 237, 238, 239, 242, 243, 245, 246, 247], "rest": [2, 55, 61, 63], "do": [2, 4, 22, 28, 32, 38, 45, 46, 55, 59, 61, 64, 81, 103, 127, 128, 164, 170, 188, 189, 221, 237, 239, 242, 243, 245, 247], "slowli": 2, "multilin": 2, "entri": [2, 28, 29, 31, 32, 38, 77, 78, 87, 88, 103, 124, 151, 206, 237], "over": [2, 12, 13, 42, 53, 54, 55, 58, 59, 62, 63, 97, 99, 109, 122, 142, 151, 164, 170, 197, 205, 215, 225, 228, 231, 237, 238, 242, 243, 245], "don": [2, 4, 56, 58, 60, 61, 63, 64, 96, 106, 164, 232], "t": [2, 4, 24, 26, 28, 32, 53, 56, 58, 59, 60, 61, 63, 64, 78, 96, 106, 151, 164, 219, 232], "forget": [2, 164, 232], "indent": [2, 56, 79], "return": [2, 9, 13, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 55, 58, 61, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 108, 109, 110, 114, 116, 118, 121, 122, 124, 125, 126, 127, 128, 131, 134, 135, 137, 140, 151, 153, 154, 164, 165, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 189, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 231, 233, 234, 237, 239, 242, 247], "re": [2, 53, 54, 63, 81, 164, 242], "result": [2, 22, 28, 29, 31, 32, 35, 38, 42, 48, 55, 59, 61, 63, 103, 122, 136, 143, 151, 154, 160, 164, 186, 209, 210, 218, 221, 222, 231, 242, 243], "exampl": [2, 5, 13, 28, 29, 31, 32, 36, 38, 53, 54, 59, 61, 63, 66, 67, 72, 76, 77, 78, 79, 83, 85, 87, 88, 122, 134, 165, 170, 188, 189, 209, 223, 231, 232, 237, 238, 242, 243, 245, 246, 247, 248], "block": [2, 63, 103, 122, 124, 167, 170, 245], "1": [2, 4, 9, 12, 13, 14, 22, 25, 28, 29, 31, 32, 35, 38, 42, 43, 45, 46, 48, 53, 55, 58, 60, 61, 62, 63, 78, 81, 82, 88, 97, 103, 110, 116, 120, 121, 122, 124, 125, 126, 127, 128, 131, 134, 136, 139, 141, 142, 144, 145, 151, 152, 153, 161, 164, 165, 167, 170, 173, 176, 177, 188, 189, 191, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 219, 220, 223, 225, 231, 232, 236, 237, 238, 241, 242, 243, 246], "3": [2, 4, 9, 12, 13, 25, 28, 29, 31, 32, 38, 40, 42, 43, 45, 46, 48, 53, 54, 55, 57, 61, 63, 64, 79, 82, 83, 85, 87, 93, 97, 101, 103, 105, 114, 118, 121, 122, 124, 125, 130, 135, 142, 145, 151, 152, 160, 164, 191, 198, 199, 209, 210, 219, 220, 221, 223, 233, 236, 245, 246], "4": [2, 4, 38, 55, 57, 63, 64, 72, 79, 82, 97, 103, 122, 125, 130, 135, 136, 165, 210, 231, 237], "section": [2, 13, 35, 40, 43, 53, 55, 60, 62, 63, 122, 151, 165, 242], "numpydoc": [2, 4], "ones": [2, 55, 62, 63, 128, 167, 203, 216, 227, 242], "extend": [2, 12, 13, 55, 58, 61, 174, 236, 242], "yield": [2, 61, 109, 167, 170, 174, 239], "see": [2, 4, 13, 24, 25, 28, 39, 40, 42, 44, 45, 53, 54, 55, 60, 61, 62, 63, 79, 81, 82, 83, 85, 103, 127, 128, 134, 140, 143, 151, 165, 170, 197, 210, 223, 236, 238, 241, 242, 245], "note": [2, 4, 6, 9, 17, 22, 23, 24, 28, 29, 31, 32, 35, 36, 38, 42, 45, 46, 53, 62, 63, 64, 79, 95, 96, 97, 103, 106, 109, 116, 120, 122, 126, 128, 134, 135, 137, 160, 164, 165, 167, 170, 172, 209, 210, 218, 223, 227, 231, 236, 238, 245, 246, 249], "titl": [2, 151], "underlin": 2, "same": [2, 3, 9, 13, 22, 26, 28, 32, 45, 46, 48, 53, 54, 55, 56, 58, 63, 64, 79, 81, 83, 85, 87, 94, 95, 96, 97, 106, 108, 109, 110, 120, 124, 128, 134, 135, 137, 143, 164, 165, 170, 179, 188, 189, 197, 214, 218, 223, 228, 236, 237, 238, 239, 242, 243, 245, 246], "hyphen": 2, "length": [2, 9, 13, 22, 28, 29, 31, 32, 39, 40, 43, 45, 46, 55, 58, 61, 62, 63, 79, 81, 83, 85, 87, 95, 96, 97, 103, 106, 110, 119, 124, 128, 134, 137, 140, 151, 153, 164, 167, 191, 197, 208, 225, 227, 231, 236, 242, 246], "abov": [2, 3, 4, 9, 13, 28, 53, 55, 56, 58, 61, 63, 82, 122, 124, 134, 136, 137, 179, 197, 202, 206, 207, 218, 220, 236, 245, 246], "restructuredtext": 2, "consult": [2, 55, 223], "basic": [2, 13, 46, 58, 79, 122, 140, 152, 157, 182, 199, 239], "summar": [2, 57], "publish": [2, 38, 58, 151], "poetri": 2, "open": [2, 4, 55, 56, 59, 81, 122, 151, 167, 168, 172, 222, 237, 241], "pyproject": 2, "toml": [2, 4], "file": [2, 4, 9, 12, 13, 15, 25, 28, 29, 31, 32, 34, 35, 38, 50, 52, 55, 56, 58, 60, 61, 62, 70, 72, 79, 81, 82, 83, 85, 86, 87, 103, 122, 125, 127, 128, 164, 165, 167, 168, 170, 172, 173, 174, 175, 176, 178, 179, 180, 183, 186, 188, 189, 197, 203, 209, 216, 222, 223, 225, 232, 236, 241, 245, 246], "root": [2, 4, 28, 61, 103, 170, 212, 223], "directori": [2, 4, 9, 17, 59, 62, 64, 73, 81, 83, 85, 86, 87, 120, 122, 164, 165, 167, 170, 188, 189, 209, 241], "tool": [2, 59, 63, 64], "name": [2, 9, 13, 28, 29, 30, 31, 32, 38, 45, 46, 50, 53, 54, 55, 58, 62, 63, 77, 78, 79, 81, 83, 85, 87, 88, 94, 99, 100, 101, 103, 108, 109, 110, 114, 128, 130, 134, 151, 160, 164, 165, 167, 170, 174, 178, 179, 180, 189, 197, 202, 203, 204, 205, 206, 207, 222, 223, 226, 236, 239, 242, 245], "2": [2, 4, 9, 13, 24, 25, 26, 28, 32, 35, 38, 42, 43, 53, 55, 58, 61, 62, 63, 81, 82, 103, 110, 120, 122, 124, 125, 127, 128, 130, 131, 134, 135, 136, 137, 142, 145, 151, 152, 155, 165, 167, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 209, 210, 215, 218, 223, 225, 231, 233, 236, 237, 238, 242, 243, 245, 246], "0": [2, 3, 4, 9, 12, 13, 22, 25, 28, 29, 31, 32, 35, 38, 40, 42, 43, 45, 46, 48, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 78, 79, 81, 82, 88, 93, 95, 98, 103, 105, 107, 110, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 134, 135, 136, 137, 140, 141, 142, 144, 145, 151, 152, 153, 154, 157, 160, 161, 164, 165, 167, 168, 170, 173, 174, 176, 177, 178, 179, 188, 189, 191, 195, 197, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 219, 220, 221, 225, 228, 230, 231, 233, 236, 237, 238, 241, 242, 243, 245, 246, 247], "semant": 2, "major": [2, 63, 168, 203, 223, 225], "minor": [2, 168], "patch": 2, "addition": [2, 60, 97, 218, 238, 242], "suffix": [2, 45, 223, 239], "dev": [2, 4], "drop": [2, 56, 79, 223], "full": [2, 13, 22, 28, 35, 38, 50, 55, 56, 61, 64, 97, 164, 170, 225, 233, 237, 239, 242, 243], "maintain": [2, 237], "ensur": [2, 3, 4, 61, 79, 81, 151, 218, 245], "agre": [2, 61], "Then": [2, 28, 53, 55, 56, 63, 114, 122, 130, 191, 218, 230, 237, 241], "add": [2, 4, 32, 34, 45, 46, 55, 59, 61, 63, 64, 87, 88, 95, 96, 97, 99, 106, 108, 109, 124, 132, 135, 136, 137, 151, 158, 161, 167, 170, 188, 189, 223, 236, 239, 241, 242, 245, 246], "21": [2, 103, 136], "accept": [2, 13, 55, 83, 85, 87, 121, 209, 231, 242], "greater": [2, 22, 28, 55, 61, 127, 128], "ani": [2, 13, 24, 26, 28, 29, 31, 45, 46, 53, 54, 55, 56, 61, 62, 63, 87, 94, 99, 103, 108, 109, 116, 120, 124, 125, 126, 130, 134, 161, 177, 179, 183, 186, 188, 214, 223, 237, 238, 239, 242, 245], "requir": [2, 28, 29, 30, 31, 32, 56, 57, 59, 62, 95, 96, 97, 106, 122, 134, 146, 167, 170, 189, 202, 203, 204, 206, 239, 242, 245], "extra": [2, 58, 61, 130, 223, 236], "order": [2, 4, 5, 9, 28, 53, 55, 56, 60, 61, 63, 81, 95, 96, 97, 99, 103, 106, 109, 110, 116, 120, 121, 126, 130, 134, 135, 146, 155, 161, 167, 170, 183, 188, 195, 197, 202, 209, 214, 216, 217, 218, 224, 231, 237, 245], "rtd": 2, "theme": [2, 4], "instal": [2, 5, 6, 30, 32, 45, 46, 55, 59, 62, 64, 170, 241, 249], "apidoc": 2, "ext": 2, "autodoc": [2, 4], "therefor": [2, 3, 4, 45, 53, 54, 55, 58, 59, 61, 87, 122, 143, 172, 186, 237, 238, 243, 246], "input": [2, 9, 13, 28, 32, 35, 38, 52, 56, 60, 61, 63, 77, 78, 81, 86, 124, 128, 135, 142, 153, 165, 168, 173, 174, 175, 176, 178, 183, 191, 206, 211, 215, 217, 231, 237, 242, 247], "howev": [2, 13, 28, 53, 55, 56, 58, 61, 62, 63, 151, 164, 174, 218, 238, 239], "mani": [2, 28, 29, 31, 32, 38, 53, 54, 55, 56, 59, 61, 64, 122, 127, 138, 170, 209, 225, 242], "case": [2, 4, 12, 13, 25, 28, 29, 31, 32, 45, 46, 53, 55, 56, 59, 60, 61, 62, 63, 83, 84, 85, 87, 96, 97, 99, 106, 127, 128, 134, 164, 189, 210, 214, 237, 242, 245, 246], "extrem": [2, 24, 26, 55], "help": [2, 58, 63], "take": [2, 9, 22, 29, 53, 55, 59, 61, 62, 63, 64, 79, 81, 88, 103, 122, 127, 128, 131, 135, 137, 139, 151, 164, 189, 194, 225, 237, 243, 245, 246], "form": [2, 22, 25, 28, 29, 30, 31, 32, 42, 61, 62, 64, 103, 118, 131, 151, 197, 221, 243], "annot": [2, 67, 248], "script": [2, 4, 5, 9, 56, 57, 64, 80, 238, 243, 245], "modifi": [2, 4, 26, 28, 29, 31, 32, 35, 38, 63, 95, 96, 97, 106, 128, 164, 165, 208, 232, 237], "grip": 2, "place": [2, 17, 22, 56, 61, 62, 63, 64, 122, 236, 237], "folder": [2, 4, 38, 55, 59, 61, 62, 63, 81, 83, 85, 125, 130, 188, 189, 194, 195, 237, 241, 242], "insid": [2, 4, 121, 242], "confus": [2, 28, 29, 31, 61, 242], "manual": [2, 3, 23, 63, 67, 122, 237, 245, 248, 249], "onlin": [2, 4], "websit": [2, 4], "overview": [2, 3, 62, 64, 120, 178, 240, 248, 249], "found": [2, 4, 5, 28, 29, 31, 32, 36, 45, 46, 58, 61, 62, 63, 64, 67, 79, 122, 135, 151, 160, 164, 189, 223, 237, 242, 246, 247, 248], "templat": [2, 4, 103, 125, 138, 142, 143, 160, 194, 195, 199, 212, 233], "done": [2, 25, 28, 55, 56, 58, 59, 62, 81, 83, 85, 87, 194, 195, 208, 236, 239, 242, 243, 245, 246], "make_doc": 2, "py": [2, 4, 13, 28, 42, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 76, 103, 110, 127, 130, 164, 223, 236, 237, 238, 241, 243, 245], "build": [2, 35, 46, 58, 125], "html": [2, 79, 134], "main": [2, 55, 64, 77, 78, 79, 83, 87, 110, 134, 164, 238], "view": [2, 22, 32, 43, 61, 63, 103, 191, 228], "browser": [2, 237, 241], "symbol": [2, 55], "_": [2, 3, 55], "long": [2, 61, 63, 95, 96, 97, 106, 128, 189, 227, 236, 237, 242, 243, 245, 247], "nest": [2, 29, 31, 35, 103, 225], "determin": [2, 13, 22, 28, 35, 38, 53, 56, 58, 62, 63, 81, 83, 84, 85, 87, 95, 96, 97, 106, 134, 138, 143, 151, 158, 160, 170, 191, 194, 195, 214, 223, 238, 243, 245, 246], "level": [2, 9, 13, 22, 28, 29, 31, 32, 35, 53, 54, 61, 63, 79, 83, 85, 87, 88, 99, 103, 118, 120, 121, 122, 125, 127, 130, 167, 168, 170, 174, 179, 183, 188, 189, 223, 225, 233, 242, 245], "subhead": 2, "subsect": 2, "split": [2, 12, 13, 29, 52, 55, 56, 59, 127, 164, 179, 242], "commonli": [2, 62], "format": [2, 4, 28, 34, 36, 38, 53, 54, 56, 59, 61, 64, 81, 94, 108, 109, 118, 151, 170, 183, 236, 242, 245, 247], "italic": 2, "bold": 2, "singl": [2, 35, 38, 42, 50, 53, 55, 56, 59, 77, 78, 83, 85, 87, 96, 106, 124, 130, 135, 164, 175, 186, 203, 204, 210, 232, 242, 245], "bullet": 2, "point": [2, 4, 13, 28, 29, 31, 32, 38, 42, 45, 46, 53, 55, 58, 61, 62, 63, 64, 81, 84, 93, 101, 103, 105, 118, 122, 128, 135, 136, 151, 164, 194, 195, 197, 215, 221, 230, 237, 238, 239, 242, 243], "enumer": [2, 56, 59, 103, 242], "second": [2, 9, 12, 13, 24, 28, 32, 36, 55, 56, 61, 64, 81, 88, 103, 122, 135, 164, 165, 167, 205, 231, 238, 242, 247], "anoth": [2, 61, 62, 63, 64, 95, 96, 97, 106, 128, 179, 218, 237, 242, 245], "sub": [2, 38, 53, 54, 55, 61, 246], "notic": [2, 245], "its": [2, 4, 25, 38, 53, 55, 56, 61, 62, 63, 76, 83, 85, 87, 94, 99, 103, 108, 109, 130, 146, 161, 164, 167, 170, 223, 237, 239, 242, 246, 247], "parent": [2, 9, 53, 99, 103, 130, 223, 242, 245], "similarli": [2, 237], "continu": [2, 28, 55, 56, 122, 135, 151], "last": [2, 22, 26, 36, 38, 53, 61, 63, 103, 141, 168, 178, 223, 236, 237, 245, 246], "http": [2, 4, 13, 24, 26, 28, 32, 39, 42, 44, 45, 46, 53, 55, 57, 62, 70, 79, 118, 131, 134, 136, 160, 170, 197, 210, 216, 221, 236, 237, 241], "url": [2, 237], "com": [2, 4, 13, 28, 32, 45, 46, 55, 57, 62, 70, 136, 170, 210], "trail": 2, "underscor": [2, 9], "intern": [2, 22, 28, 29, 31, 32, 55, 63, 134, 137, 164, 167, 170, 220, 236, 237, 242, 247], "prefer": [2, 83, 85, 87, 164], "instead": [2, 4, 12, 13, 28, 35, 55, 61, 79, 87, 97, 109, 128, 151, 170, 174, 191, 209, 210, 215, 218, 220, 225, 231, 232, 237, 238, 243, 247], "what": [2, 55, 58, 60, 61, 63, 77, 78, 121, 130, 170, 179, 221, 225, 239, 245], "being": [2, 28, 29, 31, 32, 35, 55, 79, 87, 110, 128, 231, 237, 239, 246], "doc": [2, 57, 134], "introduct": [2, 249], "render": [2, 13], "lead": [2, 61, 64, 95, 96, 97, 106, 116, 126, 160, 218], "path": [2, 4, 9, 13, 17, 22, 28, 29, 31, 32, 35, 42, 53, 54, 55, 59, 61, 63, 70, 72, 73, 76, 81, 83, 85, 87, 103, 122, 125, 143, 165, 167, 170, 194, 195, 228, 234, 237, 241, 242], "ref": 2, "append": [2, 4, 13, 52, 56, 83, 85, 87, 135, 141, 246], "final": [2, 5, 28, 29, 31, 32, 53, 54, 55, 58, 63, 64, 67, 164, 217, 218, 237, 238, 248], "class": [2, 9, 13, 22, 28, 29, 30, 31, 32, 34, 35, 36, 42, 45, 46, 48, 50, 55, 62, 63, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 164, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 223, 224, 225, 228, 233, 236, 240, 243, 245, 247], "etc": [2, 25, 43, 53, 54, 58, 64, 134, 177, 237], "mod": 2, "func": [2, 38, 223], "respect": [2, 3, 4, 22, 26, 28, 30, 55, 61, 79, 83, 87, 110, 164, 175, 197, 219, 236, 237, 246], "logic": [2, 63, 114, 203, 204, 207, 225], "trace": [2, 4, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 38, 53, 54, 55, 56, 58, 61, 63, 64, 83, 85, 87, 88, 95, 96, 97, 103, 106, 110, 120, 121, 122, 124, 125, 127, 128, 131, 134, 135, 136, 138, 139, 140, 141, 144, 145, 149, 151, 153, 154, 156, 160, 167, 170, 179, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 211, 213, 217, 218, 221, 223, 225, 231, 233, 239, 242], "framework": [2, 5, 25, 35, 53, 55, 58, 124, 125, 128, 132, 143, 160, 170, 174, 208, 210, 232, 235, 242, 243], "base_trac": [2, 92, 143, 160, 243], "direct": [2, 9, 12, 13, 23, 24, 25, 26, 28, 29, 31, 32, 42, 45, 46, 53, 54, 55, 61, 62, 63, 64, 81, 83, 84, 85, 87, 93, 97, 101, 103, 105, 118, 119, 121, 131, 136, 142, 143, 145, 146, 151, 153, 177, 191, 194, 195, 199, 209, 210, 219, 221, 228, 231, 238, 242, 245, 246], "languag": 2, "As": [2, 4, 50, 55, 56, 58, 61, 63, 120, 134, 165, 218, 242, 243, 245, 246, 247], "r": [2, 3, 12, 13, 22, 23, 24, 26, 28, 29, 31, 32, 40, 42, 53, 54, 55, 61, 62, 63, 64, 151, 164, 194, 195, 219, 243], "5": [2, 25, 28, 29, 31, 32, 36, 38, 40, 53, 55, 56, 57, 58, 59, 61, 62, 63, 77, 78, 103, 114, 122, 124, 125, 137, 141, 142, 160, 165, 177, 195, 203, 204, 206, 209, 210, 211, 217, 223, 225, 228, 232, 236, 242, 243, 246, 247], "cartesian": [3, 28, 32, 35, 53, 54, 118, 197, 219], "surfac": [3, 13, 28, 29, 31, 32, 38, 42, 45, 46, 53, 56, 58, 61, 63, 64, 76, 78, 85, 125, 195, 206, 219, 236, 246], "axi": [3, 13, 22, 23, 24, 26, 28, 32, 35, 38, 56, 61, 63, 79, 81, 83, 85, 87, 93, 101, 103, 105, 151, 215, 221, 231, 238, 243], "toward": [3, 93, 101, 103, 105, 236], "east": [3, 53, 58, 63, 79, 81, 83, 84, 85, 87, 219, 236, 238], "north": [3, 58, 63, 79, 83, 84, 85, 87, 103], "z": [3, 12, 13, 28, 32, 39, 45, 46, 49, 55, 58, 62, 63, 85, 97, 103, 151, 153, 165, 194, 195, 198, 218, 221, 238, 243], "upward": [3, 28, 53, 79, 81, 83, 85, 87, 131], "antenna": [3, 25, 35, 53, 54, 56, 58, 60, 61, 63, 64, 78, 79, 81, 83, 84, 85, 87, 96, 103, 106, 114, 118, 119, 120, 122, 127, 131, 136, 143, 149, 151, 153, 154, 164, 165, 167, 174, 176, 191, 195, 197, 199, 203, 204, 209, 210, 217, 231, 237, 239, 240, 243, 245, 246], "posit": [3, 9, 12, 13, 22, 28, 35, 40, 42, 45, 46, 49, 53, 55, 56, 58, 61, 62, 63, 64, 77, 78, 79, 81, 82, 83, 84, 85, 87, 92, 97, 103, 118, 119, 134, 143, 151, 153, 160, 164, 165, 167, 172, 173, 174, 176, 191, 194, 195, 197, 198, 209, 214, 219, 221, 231, 237, 238, 239, 242, 243, 246], "typic": [3, 35, 38, 45, 53, 56, 59, 63, 64, 97, 164, 239, 242, 246], "center": [3, 13, 42, 43, 56, 79, 83, 87, 165, 194, 195, 236, 243], "station": [3, 9, 13, 35, 38, 55, 63, 64, 66, 72, 77, 78, 79, 82, 83, 84, 85, 87, 88, 92, 94, 97, 99, 103, 108, 110, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 165, 167, 170, 172, 173, 174, 175, 176, 179, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 225, 230, 231, 237, 238, 239], "zenith": [3, 12, 13, 28, 35, 38, 42, 48, 53, 54, 55, 63, 79, 81, 83, 84, 85, 87, 92, 93, 101, 103, 105, 125, 131, 142, 145, 151, 172, 194, 210, 215, 219, 221, 228, 231, 236, 238, 242], "theta": [3, 22, 23, 24, 26, 28, 32, 38, 48, 61, 63, 79, 81, 83, 84, 85, 87, 160, 219, 221, 231, 236, 238, 243], "deg": [3, 28, 38, 61, 88, 145, 225, 242, 243], "90deg": [3, 60, 103, 131], "horizon": [3, 136], "180": [3, 56, 58, 236, 238], "downward": [3, 28, 53, 63, 64, 238], "azimuth": [3, 12, 13, 28, 35, 42, 53, 54, 55, 62, 63, 79, 81, 83, 84, 85, 87, 92, 93, 101, 103, 105, 125, 131, 142, 145, 172, 195, 210, 219, 221, 228, 231, 236, 238, 243], "phi": [3, 28, 32, 61, 62, 79, 81, 83, 84, 85, 87, 160, 195, 219, 221, 231, 236, 238], "count": [3, 28, 29, 31, 32, 36, 38, 59, 79, 81, 83, 84, 85, 87, 127, 128, 183, 197, 203, 236, 238, 242], "northward": [3, 238], "came": [3, 42], "opposit": [3, 42, 53, 164], "propag": [3, 9, 13, 25, 27, 28, 29, 31, 32, 35, 42, 53, 54, 55, 60, 61, 63, 64, 66, 79, 103, 150, 219, 223, 243], "through": [3, 9, 25, 32, 42, 45, 46, 53, 54, 55, 56, 58, 61, 62, 63, 79, 81, 94, 108, 109, 114, 118, 131, 151, 167, 168, 178, 183, 191, 208, 209, 223, 237, 238, 239, 241, 242], "earth": [3, 9, 13, 35, 42, 53, 55, 63, 165], "launch_vector": [3, 25, 28, 29, 31, 32, 35, 53, 54, 62, 92, 103], "askaryan": [3, 20, 22, 23, 26, 61, 64, 103, 243], "signal": [3, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 38, 39, 43, 53, 54, 56, 63, 64, 66, 76, 77, 78, 79, 81, 83, 85, 87, 88, 97, 103, 114, 116, 118, 121, 126, 131, 134, 138, 140, 143, 144, 145, 146, 149, 151, 152, 157, 160, 170, 177, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 217, 219, 221, 230, 231, 242, 243, 246, 247], "emit": [3, 25, 28, 61, 62, 103], "reach": [3, 13, 28, 29, 31, 32, 35, 42, 53, 55, 61, 63, 194, 242], "electr": [3, 22, 25, 28, 29, 31, 32, 35, 45, 46, 53, 54, 60, 61, 63, 81, 94, 97, 103, 108, 109, 125, 143, 151, 153, 154, 155, 156, 157, 160, 176, 179, 191, 195, 209, 210, 211, 219, 231, 245, 246], "store": [3, 9, 13, 25, 38, 53, 54, 55, 56, 59, 62, 79, 81, 87, 88, 94, 95, 96, 97, 99, 103, 106, 108, 109, 110, 124, 125, 127, 128, 143, 151, 154, 164, 165, 170, 189, 194, 195, 197, 203, 206, 236, 237, 239, 242, 243, 246], "sky": [3, 22, 28, 38, 53, 55, 118, 119, 136, 197], "polar": [3, 25, 28, 32, 35, 53, 54, 56, 63, 64, 81, 92, 96, 103, 106, 120, 131, 160, 164, 209, 210, 211, 219, 236], "e_": [3, 61], "compon": [3, 22, 24, 26, 28, 32, 53, 61, 62, 63, 77, 78, 79, 81, 88, 103, 124, 125, 137, 160, 197, 210, 231, 236, 237, 239, 245, 246], "usual": [3, 28, 48, 55, 61, 63, 150, 151, 223, 236, 245, 247], "small": [3, 22, 28, 32, 48, 55, 56, 59, 61, 63, 64, 116, 126, 160, 206, 209, 210, 216, 218, 237], "left": [3, 61, 62, 122, 195], "comparison": [3, 55, 128], "import": [3, 4, 5, 28, 29, 31, 32, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 70, 79, 124, 136, 170, 174, 186, 188, 237, 239, 242, 243, 245, 247], "fiel": 3, "orang": 3, "arrow": 3, "indic": [3, 9, 13, 28, 35, 45, 46, 55, 58, 61, 78, 122, 164, 203, 231], "shower": [3, 9, 13, 22, 23, 24, 26, 29, 32, 35, 38, 53, 54, 55, 63, 66, 93, 96, 97, 99, 101, 103, 105, 106, 108, 143, 146, 150, 151, 172, 174, 191, 237], "purpl": 3, "circl": 3, "plane": [3, 61, 62, 63, 79, 81, 83, 84, 85, 87, 103, 151, 219, 221, 238], "natur": [3, 44, 55], "air": [3, 9, 13, 28, 55, 58, 60, 81, 83, 84, 85, 87, 96, 103, 106, 146, 150, 174, 219, 220, 231, 236, 237], "hat": 3, "vec": 3, "v": [3, 55, 59, 61, 97, 151, 205, 206, 211, 218, 231, 247], "On": [3, 4, 59, 120], "ground": [3, 173, 219, 236], "arriv": [3, 12, 13, 28, 32, 35, 53, 54, 55, 61, 63, 93, 101, 103, 105, 118, 119, 131, 143, 145, 151, 177, 219, 243], "share": 3, "right": [3, 28, 45, 61, 62, 122, 189, 195, 243], "seen": [3, 32, 35, 61, 95, 96, 97, 106, 164], "incom": [3, 53, 55, 64, 81, 83, 85, 87, 103, 142, 153, 219, 231], "correspond": [3, 9, 13, 28, 29, 31, 32, 35, 42, 44, 53, 56, 58, 61, 81, 88, 97, 103, 106, 122, 128, 143, 151, 153, 164, 167, 172, 194, 195, 209, 219, 227, 231, 237, 238, 242], "quantiti": [3, 13, 78, 103, 140, 157, 221, 232], "auger": [3, 174, 232], "print": [3, 28, 88, 225, 232, 233, 237, 245, 247], "plot": [3, 4, 28, 37, 38, 43, 56, 57, 62, 64, 68, 88, 135, 136, 151, 160, 191, 194, 195, 209, 215, 225, 233, 241, 243], "convert": [3, 22, 36, 38, 57, 63, 77, 86, 97, 103, 128, 153, 154, 170, 172, 211, 232, 236, 237, 238], "dimension": [3, 25, 38, 56, 61, 97, 122, 232, 243], "conveni": [3, 38, 53, 54, 55, 59, 61, 94, 108, 109, 110, 124, 170, 214, 223], "encod": [3, 12, 13, 40, 55, 68, 81, 83, 120, 170, 222], "pdg": [3, 9, 40, 53, 54, 55, 103, 226], "relev": [3, 9, 12, 13, 17, 28, 29, 31, 32, 35, 38, 40, 53, 55, 58, 61, 64, 83, 94, 108, 109, 128, 134, 170, 177, 188, 189, 203, 214, 218, 223, 231, 237, 238, 246], "id": [3, 12, 13, 35, 38, 53, 54, 55, 63, 73, 77, 78, 79, 83, 85, 87, 88, 94, 96, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 114, 116, 122, 124, 125, 126, 127, 128, 131, 134, 137, 140, 142, 143, 152, 153, 160, 164, 165, 167, 170, 172, 173, 174, 175, 183, 188, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 210, 225, 226, 231, 237, 242], "u": [3, 12, 13, 55, 61, 62, 63, 97, 231, 239], "12": [3, 12, 13, 14, 22, 40, 55, 63, 103, 136], "14": [3, 12, 13, 14, 40, 55, 63, 103, 247], "16": [3, 12, 13, 14, 40, 55, 103, 110, 151, 167, 197, 206, 225], "electron": [3, 12, 13, 40, 53, 55, 103, 141, 232, 239], "muon": [3, 9, 12, 13, 38, 40, 48, 53], "tau": [3, 9, 12, 13, 24, 40, 44, 53, 55, 242], "overal": [3, 79, 137, 197, 245], "minu": [3, 13, 28, 55, 63, 121], "sign": [3, 12, 13, 28, 40, 55, 160], "anti": [3, 12, 13, 40, 55], "tabl": [3, 9, 13, 17, 53, 55, 58, 164, 165, 170, 194, 195, 221, 237], "event": [3, 4, 9, 12, 13, 15, 23, 32, 34, 35, 36, 38, 43, 44, 52, 53, 54, 56, 59, 61, 63, 66, 87, 92, 94, 103, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 183, 186, 189, 191, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 230, 233, 245, 247, 248, 249], "6": [4, 12, 13, 24, 26, 38, 42, 43, 55, 103, 114, 121, 124, 134, 135, 142, 165], "unix": [4, 79], "oper": [4, 22, 61, 63, 78, 88, 111, 159, 239, 242], "system": [4, 13, 22, 35, 42, 55, 58, 62, 70, 81, 103, 114, 165, 210, 212, 241, 243], "linux": [4, 165], "maco": 4, "window": [4, 61, 63, 95, 96, 97, 103, 106, 110, 114, 121, 134, 140, 141, 144, 151, 191, 197, 202, 203, 204, 205, 206, 207, 208, 213, 221, 225, 227, 230, 233, 246], "subsystem": 4, "subpackag": [4, 65, 235], "cannot": [4, 61, 165], "nu": [4, 13, 32, 55, 57, 62, 79, 103, 170, 191], "recent": 4, "download": [4, 17, 81, 216, 236], "clone": 4, "alreadi": [4, 9, 28, 29, 31, 32, 57, 58, 62, 78, 79, 83, 87, 94, 108, 109, 120, 122, 124, 127, 128, 143, 170, 179, 223, 231, 247], "up": [4, 12, 13, 24, 26, 28, 45, 46, 52, 53, 54, 55, 56, 58, 59, 61, 95, 96, 97, 103, 106, 124, 130, 134, 136, 137, 143, 164, 165, 189, 191, 194, 209, 219, 223, 237, 243, 245, 246], "navig": [4, 9, 55], "cd": [4, 59, 64], "python3": 4, "install_dev": 4, "launch": [4, 22, 25, 28, 29, 31, 32, 35, 53, 54, 60, 62, 103], "interact": [4, 9, 12, 13, 23, 24, 26, 40, 42, 43, 44, 48, 53, 54, 55, 60, 61, 63, 64, 99, 103, 197, 243, 246], "contribut": [4, 6, 53, 54, 55, 61, 249], "highli": 4, "recommend": [4, 28, 29, 31, 55, 61, 94, 108, 109, 128, 164, 186, 189, 237, 243, 245], "virtual": [4, 28], "environ": [4, 59, 60, 78], "either": [4, 13, 22, 24, 26, 28, 45, 46, 58, 61, 62, 63, 81, 83, 97, 124, 127, 137, 143, 170, 208, 211, 225], "m": [4, 9, 13, 24, 26, 32, 42, 55, 56, 58, 60, 61, 62, 63, 103, 161, 209, 210, 215, 221, 247], "venv": 4, "name_of_venv": 4, "manag": [4, 212, 223], "conda": 4, "reason": [4, 55, 58, 61, 103, 197, 237, 239], "work": [4, 32, 46, 53, 54, 55, 58, 59, 61, 62, 64, 70, 72, 76, 77, 78, 81, 83, 85, 87, 110, 151, 160, 165, 194, 195, 209, 218, 223, 237, 242, 243, 246], "addit": [4, 5, 13, 24, 25, 26, 28, 29, 31, 38, 53, 54, 55, 62, 76, 77, 78, 83, 88, 97, 121, 125, 127, 134, 151, 164, 237, 240, 242, 245], "instruct": [4, 53, 54, 62], "export": [4, 37, 38, 59, 62, 75, 79], "profil": [4, 22, 23, 24, 28, 29, 31, 32, 45, 46, 58, 61, 62, 103, 143, 151], "termin": [4, 237], "zprofil": 4, "bashrc": 4, "zshrc": 4, "non": [4, 38, 40, 53, 58, 61, 170, 186, 223], "command": [4, 5, 64, 237], "scipi": [4, 124, 134, 135, 155, 214, 215, 227], "matplotlib": [4, 28, 57, 62, 63, 135, 242, 243], "astropi": [4, 36, 77, 78, 79, 83, 85, 87, 94, 108, 109, 170, 237], "tinydb": [4, 83], "serial": [4, 64, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 242], "aenum": 4, "h5py": [4, 53, 54, 56], "mysql": [4, 83, 237], "pymongo": [4, 77, 78], "dash": [4, 241], "plotli": 4, "peakutil": 4, "radiotool": [4, 28, 59, 93, 97, 101, 105, 151, 221, 231], "newer": 4, "advanc": [4, 53, 61], "enum": [4, 103, 170, 178, 225, 242], "": [4, 9, 13, 28, 35, 39, 40, 42, 55, 58, 61, 62, 63, 77, 78, 79, 81, 83, 87, 103, 110, 120, 135, 161, 174, 177, 188, 197, 217, 219, 221, 223, 224, 231, 232, 237, 239, 242, 245, 246], "hdf5": [4, 12, 13, 15, 25, 34, 35, 38, 52, 55, 56, 63, 64, 67, 103, 167, 172, 173, 174, 175, 176, 242, 249], "uproot": [4, 170], "rno": [4, 58, 61, 77, 78, 79, 88, 124, 126, 170, 216, 236, 237, 240, 243, 246], "awkward": 4, "databas": [4, 68, 72, 75, 76, 77, 78, 79, 83, 85, 87, 88, 125, 170, 240], "sql": [4, 82, 83, 85, 237], "datbas": 4, "mongodb": [4, 77, 78], "displai": [4, 36, 61, 94, 108, 109, 232, 248, 249], "show": [4, 5, 38, 56, 58, 59, 62, 63, 88, 151, 215, 225, 242, 245], "nuradiorecotempl": 4, "document": [4, 5, 9, 40, 45, 55, 62, 63, 81, 83, 128, 236, 238], "readthedoc": 4, "our": [4, 5, 55, 56, 61, 63, 64, 128, 141, 218, 236, 239, 246], "docstr": [4, 242], "action": 4, "code": [4, 9, 13, 22, 28, 56, 58, 59, 61, 62, 63, 67, 79, 103, 122, 134, 164, 170, 220, 232, 243, 245, 248, 249], "sphinx_rtd_them": 4, "debug": [4, 28, 29, 30, 31, 32, 35, 64, 79, 88, 113, 116, 125, 126, 131, 133, 136, 137, 140, 142, 144, 145, 149, 150, 151, 152, 153, 157, 160, 170, 172, 175, 177, 189, 191, 194, 195, 197, 198, 209, 212, 223, 225, 233, 243, 245], "propos": [4, 9, 13, 17, 55, 151], "evtgen": [4, 55, 59, 65], "nuradiopropos": [4, 7, 13], "7": [4, 9, 13, 38, 39, 42, 55, 59, 103, 165, 215], "particular": [4, 79, 99, 114, 174, 202, 203, 204, 205, 206, 207, 245], "eg": 4, "mac": 4, "kernel": 4, "too": [4, 61, 122, 136, 164, 170, 237, 243], "old": [4, 78, 170, 220, 239, 242], "comput": [4, 12, 13, 28, 29, 31, 32, 55, 56, 61, 83, 85, 87, 97, 136, 140, 209, 211, 231, 243], "cluster": [4, 17, 50, 55, 56, 66, 174], "refer": [4, 28, 35, 42, 53, 54, 55, 61, 62, 63, 76, 82, 83, 85, 87, 109, 120, 122, 128, 134, 135, 164, 197, 219, 225, 228, 237, 238, 245], "step": [4, 32, 42, 48, 56, 59, 64, 128, 151, 195, 197, 209, 236, 242, 243, 245, 246], "guid": 4, "channelgalacticnoiseadd": [4, 111], "pygdsm": [4, 136], "telegraph": [4, 136], "speed": [4, 28, 58, 61, 134, 191, 243, 247], "analyt": [4, 24, 26, 28, 29, 30, 31, 32, 53, 54, 58, 63, 81, 191, 209, 210, 213, 215], "rai": [4, 5, 13, 22, 26, 28, 29, 30, 31, 32, 35, 38, 48, 53, 54, 58, 61, 63, 64, 94, 97, 103, 106, 108, 109, 121, 142, 143, 149, 152, 153, 158, 191, 194, 195, 209, 215, 228, 242, 246], "gsl": 4, "gsl_dir": 4, "sudo": 4, "apt": 4, "libgsl": 4, "brew": 4, "homebrew": 4, "With": [4, 28, 61, 242], "compil": [4, 17, 39, 62], "cpp": [4, 28, 58], "tracer": [4, 13, 28, 29, 30, 31, 32, 35, 46, 53, 54, 58], "signalprop": [4, 58, 61, 62, 65], "sh": 4, "radiopropa": [4, 30, 32, 45, 46], "numer": [4, 22, 28, 29, 30, 31, 32, 48, 58, 61, 209, 213, 221, 232], "arianna": [4, 59, 61, 68, 83, 85, 87, 111, 183, 184, 203, 204, 225, 236, 237, 242], "snowshovel": [4, 111, 162, 242, 246], "ara": [4, 25, 68, 81, 111, 236, 237], "welcom": 5, "two": [5, 13, 22, 28, 38, 45, 46, 53, 54, 55, 56, 58, 61, 63, 64, 77, 78, 81, 103, 128, 134, 145, 164, 179, 191, 194, 195, 210, 220, 221, 225, 231, 237, 238, 239, 242, 243], "packag": [5, 62, 65, 67, 136, 167, 235, 236, 245, 248], "mont": [5, 61, 67], "carlo": [5, 61, 67], "high": [5, 24, 26, 55, 61, 63, 64, 110, 116, 126, 164, 203, 204, 225], "energi": [5, 9, 12, 13, 22, 23, 24, 26, 35, 38, 40, 43, 44, 48, 53, 54, 55, 56, 57, 59, 61, 63, 64, 92, 103, 146, 160, 177, 191, 209, 213, 215, 218, 242, 243], "cosmic": [5, 48, 94, 97, 103, 108, 109, 121, 142, 152, 153, 158, 209, 215, 228, 246], "familiar": 5, "yourself": 5, "how": [5, 28, 29, 31, 32, 50, 53, 55, 56, 57, 58, 59, 61, 63, 116, 126, 127, 138, 160, 165, 225, 246], "self": [5, 28, 55, 58, 63, 77, 78, 79, 122, 170, 174, 194, 195, 245], "subfold": [5, 59, 67, 188, 241, 248], "hand": [5, 62, 67, 120, 248], "webinar": [5, 63, 67, 248], "pip": 5, "version": [5, 17, 24, 28, 53, 54, 61, 62, 130, 134, 168, 180, 212, 222, 223, 232, 237, 245], "__path__": 5, "nuradiomc_path": 5, "locat": [5, 9, 58, 61, 63, 73, 87, 138, 153, 164, 194, 221, 243, 245], "convent": [6, 53, 54, 55, 61, 81, 180, 218, 219, 236, 238, 249], "nuradiomctoarasim": 7, "secondaryproperti": [7, 9, 55], "particle_cod": [7, 9], "is_em_primari": [7, 9], "is_had_primari": [7, 9], "is_shower_primari": [7, 9], "proposalfunct": [7, 9, 55], "get_secondaries_arrai": [7, 9, 13, 55], "get_decai": [7, 9, 55], "create_tau_tab": 7, "generate_cylind": 7, "generate_unforc": [7, 55], "generate_eventlist_cylind": [7, 12, 13, 55, 59], "load_input_hdf5": [7, 13], "get_tau_95_length": [7, 13], "write_events_to_hdf5": [7, 13], "primary_energy_from_deposit": [7, 13], "ice_cube_nu_fit": [7, 13], "ice_cube_nu_fit_2022": [7, 13], "get_energy_from_flux": [7, 13], "get_product_position_tim": [7, 13], "get_energi": [7, 13], "set_volume_attribut": [7, 13], "generate_vertex_posit": [7, 13], "intersection_box_rai": [7, 13], "get_intersection_volume_neutrino": [7, 13], "is_in_fiducial_volum": [7, 13], "mask_arrival_azimuth": [7, 13], "generate_surface_muon": [7, 13, 55], "generator_ascii": 7, "generate_eventlist": [7, 14], "generator_skeleton": 7, "generate_my_ev": [7, 15], "hdf5_to_ascii": 7, "proposal_table_manag": 7, "produce_proposal_t": [7, 17], "get_compil": [7, 17], "produce_proposal_tables_tarbal": [7, 17], "download_proposal_t": [7, 17], "readaraeventlist": 7, "read_ara_eventlist": [7, 18], "convert_to_hdf5": [7, 18], "readeventlist_ascii": 7, "read_eventlist": [7, 19], "shower_typ": [9, 22, 24, 26, 53, 54, 55, 61, 63, 191, 243], "parent_energi": 9, "object": [9, 13, 22, 28, 29, 31, 32, 34, 35, 36, 42, 44, 45, 46, 48, 50, 55, 56, 58, 61, 63, 77, 78, 79, 81, 82, 83, 84, 88, 93, 94, 95, 97, 98, 99, 100, 104, 106, 108, 109, 110, 113, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 223, 225, 228, 233, 237, 239, 242, 243, 246], "properti": [9, 13, 28, 35, 38, 53, 54, 55, 58, 63, 83, 85, 87, 122, 128, 143, 151, 191, 236, 237, 239, 240, 242, 245, 247], "secondari": [9, 13, 32, 53, 55, 63, 110], "particl": [9, 12, 13, 24, 26, 35, 40, 53, 54, 61, 92, 99, 103, 121, 226, 246], "vertex": [9, 12, 13, 22, 23, 24, 26, 35, 42, 49, 53, 54, 55, 61, 63, 92, 103, 143, 191, 194, 195, 244, 246], "whether": [9, 32, 53, 54, 55, 61, 62, 63, 82, 108, 109, 114, 124, 135, 220, 242], "induc": [9, 13, 24, 55, 61, 72, 103, 113, 116, 126], "hadron": [9, 22, 24, 26, 44, 48, 55, 61], "electromagnet": [9, 22, 24, 26, 44, 53, 55, 61, 103, 221], "accord": [9, 13, 22, 28, 32, 40, 55, 62, 63, 81, 119, 151, 172, 191, 197, 208, 221, 246], "particle_nam": [9, 48, 55, 212], "pp_type": 9, "integ": [9, 12, 13, 28, 29, 31, 32, 38, 40, 53, 55, 87, 99, 128, 145, 160, 164, 173, 176, 194, 195, 197, 223, 230, 231, 239], "interaction_typ": [9, 13, 51, 53, 54, 55, 92, 103], "particle_typ": 9, "none": [9, 12, 13, 17, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 42, 44, 45, 46, 48, 49, 52, 55, 56, 58, 61, 63, 72, 77, 78, 79, 81, 83, 85, 87, 88, 94, 95, 96, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 114, 116, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 151, 152, 153, 154, 155, 160, 164, 165, 167, 170, 172, 173, 174, 176, 179, 183, 188, 189, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 217, 218, 223, 225, 227, 229, 230, 231, 237], "argument": [9, 26, 28, 29, 31, 32, 35, 44, 55, 61, 63, 64, 77, 78, 79, 81, 82, 88, 97, 99, 125, 127, 137, 151, 153, 170, 205, 209, 223, 231], "type": [9, 13, 22, 24, 26, 28, 29, 31, 32, 35, 40, 42, 43, 44, 53, 55, 61, 63, 64, 77, 78, 79, 81, 83, 84, 85, 87, 92, 94, 95, 96, 97, 103, 106, 108, 109, 110, 128, 134, 137, 143, 153, 158, 160, 164, 170, 183, 186, 191, 194, 195, 199, 215, 217, 224, 225, 237, 238, 241, 242, 243], "true": [9, 12, 13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 38, 53, 54, 55, 56, 57, 58, 61, 62, 63, 77, 78, 79, 81, 83, 85, 87, 88, 94, 97, 99, 108, 109, 110, 116, 124, 125, 126, 127, 128, 134, 136, 137, 143, 144, 145, 151, 160, 164, 168, 170, 174, 177, 178, 179, 183, 188, 189, 191, 194, 195, 197, 198, 203, 204, 205, 209, 210, 216, 223, 225, 231, 233, 237, 239, 247], "primari": [9, 12, 13, 48, 55, 77, 78, 79, 94, 103, 108, 109, 110, 197, 208, 239, 246], "fals": [9, 13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 53, 54, 55, 57, 61, 62, 63, 77, 78, 79, 83, 85, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 110, 113, 116, 122, 124, 125, 126, 127, 128, 131, 133, 135, 136, 137, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 157, 160, 164, 168, 170, 172, 174, 175, 177, 178, 179, 183, 188, 189, 191, 194, 195, 197, 199, 203, 204, 205, 209, 210, 215, 216, 223, 225, 231, 233], "otherwis": [9, 23, 32, 34, 35, 53, 54, 63, 78, 83, 85, 87, 97, 99, 108, 109, 110, 113, 116, 126, 135, 137, 143, 164, 165, 170, 189, 210, 220], "pp": 9, "bool": [9, 13, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 38, 55, 61, 77, 78, 79, 83, 85, 87, 88, 94, 95, 96, 97, 99, 106, 108, 109, 116, 124, 125, 126, 127, 128, 134, 136, 137, 140, 142, 145, 151, 152, 153, 157, 160, 164, 170, 174, 177, 179, 183, 188, 189, 191, 197, 199, 202, 203, 204, 205, 207, 209, 210, 215, 225, 231], "arg": [9, 22, 28, 29, 31, 32, 38, 46, 63, 77, 78, 81, 82, 83, 85, 87, 161, 223], "kwarg": [9, 13, 22, 24, 25, 28, 29, 31, 32, 35, 46, 50, 51, 77, 78, 81, 82, 83, 85, 87, 99, 161, 223], "serv": [9, 55, 60, 242], "doubl": [9, 45, 55, 56, 122, 151, 173, 221], "outsid": [9, 13, 53, 55, 64, 140, 144, 183], "mismatch": 9, "config_fil": [9, 13, 17, 35, 55, 59, 63], "string": [9, 12, 13, 15, 17, 22, 24, 25, 26, 28, 29, 30, 31, 32, 35, 38, 39, 42, 44, 45, 46, 52, 55, 61, 62, 70, 73, 76, 77, 78, 79, 81, 83, 84, 85, 87, 94, 95, 96, 97, 99, 106, 108, 109, 110, 114, 116, 126, 127, 128, 134, 135, 137, 140, 144, 155, 158, 160, 164, 168, 170, 174, 178, 179, 183, 189, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 214, 215, 217, 222, 223, 225, 233, 243], "own": [9, 13, 53, 55, 61, 63, 64, 103, 239, 242, 247], "config": [9, 13, 28, 29, 31, 32, 34, 35, 51, 53, 54, 55, 58, 59, 62, 103, 128, 151, 170, 203], "choos": [9, 13, 28, 29, 31, 32, 38, 45, 46, 55, 61, 63, 82, 128, 176, 215, 238], "among": [9, 13, 55, 77, 78, 79], "southpol": [9, 13, 17, 55, 56, 220], "south": [9, 13, 39, 55, 61, 63, 83, 85, 87, 236], "pole": [9, 13, 39, 55, 61, 63, 83, 85, 87, 211, 220, 236], "spheric": [9, 13, 28, 35, 53, 55, 61, 62, 198, 219, 221], "consist": [9, 13, 28, 55, 56, 61, 64, 79, 97, 106, 237, 243, 245, 247], "km": [9, 13, 38, 55, 59, 61, 64, 232, 243, 247], "deep": [9, 13, 28, 38, 44, 45, 46, 55, 56, 58, 60, 61, 236], "layer": [9, 13, 28, 29, 31, 32, 42, 45, 46, 53, 55, 58, 61, 62, 63, 221], "ic": [9, 13, 24, 26, 28, 29, 31, 32, 35, 38, 39, 40, 45, 46, 53, 55, 60, 62, 63, 64, 66, 76, 103, 143, 150, 191, 212, 231, 236, 242, 243], "bedrock": [9, 13, 45, 46, 55, 58], "mooresbai": [9, 13, 17, 55, 63, 83, 85, 87, 146], "moor": [9, 13, 28, 39, 55, 58, 63], "bai": [9, 13, 28, 39, 55, 58, 63], "576": [9, 13, 55, 58], "2234": [9, 13, 55], "water": [9, 13, 28, 38, 40, 55, 63], "infic": [9, 13, 17, 55], "medium": [9, 13, 28, 29, 31, 32, 35, 37, 38, 40, 46, 55, 58, 60, 61, 62, 143, 219, 220, 236, 243], "infinit": [9, 13, 32, 55, 83, 84, 85, 87, 236], "greenland": [9, 13, 17, 39, 45, 55, 61, 63, 79], "summit": [9, 13, 45, 55, 79, 172, 237], "log_level": [9, 13, 28, 29, 31, 32, 35, 79, 88, 127, 131, 140, 145, 153, 154, 157, 168, 170, 176, 178, 179, 188, 189, 197, 203, 208, 225], "log": [9, 13, 28, 29, 31, 32, 35, 36, 43, 55, 61, 79, 88, 118, 120, 121, 122, 125, 130, 167, 168, 170, 174, 178, 179, 188, 189, 212, 225, 233, 236], "overrid": [9, 26, 28, 35, 45, 46, 64, 79, 88, 118, 120, 121, 122, 128, 167, 168, 179, 188, 203], "global": [9, 28, 29, 31, 32, 53, 54, 110, 189], "tables_path": [9, 13, 17], "save": [9, 12, 13, 34, 38, 53, 54, 55, 56, 59, 63, 64, 78, 81, 83, 103, 125, 151, 179, 191, 194, 195, 209, 237, 238, 242, 243, 245], "regener": [9, 242], "minut": [9, 36], "everi": [9, 45, 46, 53, 54, 55, 56, 61, 63, 64, 77, 78, 121, 122, 128, 136, 167, 189, 237, 242, 243, 245, 247], "execut": [9, 35, 55, 59, 62, 64, 122, 130, 158, 191, 194, 209, 210, 237, 245], "proposal_t": [9, 17], "seed": [9, 13, 22, 24, 26, 63, 137, 173, 176, 188, 189], "upper_energy_limit": 9, "ev": [9, 38, 48, 55, 59, 63, 64, 215, 218, 232, 243], "There": [9, 58, 60, 61, 63, 67, 110, 164, 237, 248], "error": [9, 28, 29, 31, 32, 79, 99, 124, 170, 189, 197, 208, 212, 215, 223, 237, 245], "inject": 9, "valu": [9, 22, 23, 26, 28, 29, 31, 32, 35, 36, 38, 42, 44, 53, 55, 56, 58, 63, 78, 79, 81, 83, 85, 87, 88, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 118, 120, 122, 124, 126, 127, 128, 130, 135, 136, 151, 153, 164, 165, 167, 170, 174, 183, 189, 191, 197, 203, 204, 209, 210, 217, 218, 220, 223, 225, 227, 232, 233, 237, 238, 239, 245, 247], "create_new": [9, 79, 83, 247], "forc": [9, 55, 83, 85, 87, 140, 158, 170, 183, 186, 188, 189, 210], "creation": [9, 32, 55, 83, 128, 247], "By": [9, 55, 79, 83, 97, 143, 189, 219, 224, 237, 243, 245], "__init__": [9, 55, 58, 83, 85, 168, 237, 245], "singleton": [9, 83, 212, 224], "metaclass": [9, 83, 212], "energy_leptons_nu": 9, "lepton_cod": 9, "lepton_positions_nu": 9, "lepton_direct": 9, "low_nu": [9, 55], "500000000000000": 9, "propagation_length_nu": 9, "1000000": [9, 50], "min_energy_loss_nu": [9, 55], "propagate_decay_muon": [9, 55], "lepton": [9, 13, 24, 44, 53, 55], "list": [9, 12, 13, 26, 28, 29, 31, 32, 35, 36, 38, 45, 46, 53, 54, 55, 56, 59, 63, 77, 78, 79, 81, 83, 85, 87, 88, 94, 95, 96, 97, 99, 103, 106, 108, 109, 110, 121, 122, 124, 125, 127, 128, 131, 134, 135, 136, 137, 138, 142, 144, 145, 151, 152, 160, 164, 165, 167, 168, 170, 173, 174, 175, 176, 177, 183, 188, 189, 195, 197, 199, 202, 203, 206, 214, 216, 225, 236, 237, 238, 239, 246], "arrai": [9, 12, 13, 22, 24, 25, 26, 28, 29, 31, 32, 35, 38, 40, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 56, 61, 62, 63, 76, 79, 81, 83, 85, 87, 88, 93, 95, 96, 97, 101, 105, 106, 110, 114, 116, 118, 121, 122, 124, 125, 126, 128, 131, 134, 136, 137, 143, 145, 151, 155, 164, 165, 170, 174, 178, 183, 191, 194, 195, 197, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 217, 218, 219, 221, 225, 230, 231, 233, 236, 237, 246], "tupl": [9, 13, 28, 38, 42, 48, 55, 61, 83, 85, 87, 97, 106, 110, 124, 161, 164, 167, 168, 170, 217, 230, 231], "normalis": [9, 217], "low": [9, 55, 56, 63, 110, 164, 170, 183, 203, 204, 225, 230, 236, 243, 245], "control": [9, 24, 28, 29, 31, 55, 61, 63, 77, 78, 103, 164, 168, 188, 197, 245], "minimum": [9, 12, 13, 35, 44, 48, 54, 55, 61, 62, 63, 103, 114, 116, 118, 121, 126, 137, 176, 195, 209, 217], "discard": [9, 164], "maximum": [9, 12, 13, 22, 25, 28, 29, 31, 32, 38, 44, 48, 53, 54, 55, 56, 61, 62, 63, 103, 110, 114, 116, 118, 124, 126, 128, 134, 137, 138, 140, 143, 149, 151, 160, 168, 170, 173, 176, 179, 194, 195, 197, 206, 214, 217, 230, 238, 243], "select": [9, 22, 25, 53, 56, 77, 78, 79, 82, 121, 144, 160, 170, 173, 176, 177, 189, 237, 239, 241], "decai": [9, 44, 55, 61], "secondaries_arrai": [9, 55], "2d": [9, 25, 28, 45, 46, 55, 56, 61, 62, 151, 164, 165, 172, 194, 197, 231], "dimens": [9, 28, 29, 31, 32, 38, 55, 61, 243], "index": [9, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 42, 45, 46, 53, 54, 58, 60, 61, 62, 81, 104, 131, 142, 143, 145, 151, 161, 170, 197, 216, 219, 220, 221, 225, 236, 237, 241, 242, 249], "produc": [9, 13, 17, 26, 49, 53, 55, 64, 88, 108, 136, 141, 186, 191, 194, 227, 242, 243, 246], "100000000000000": 9, "decays_arrai": 9, "element": [9, 13, 55, 61, 81, 120, 122, 242], "filenam": [12, 13, 14, 15, 18, 19, 35, 38, 41, 47, 52, 55, 56, 59, 63, 79, 83, 122, 125, 164, 167, 168, 178, 179, 189, 222, 225, 241], "n_event": [12, 13, 14, 15, 44, 53, 54, 55, 59, 92, 103], "emin": [12, 13, 14, 53, 54, 55, 56, 59, 92, 103], "emax": [12, 13, 14, 53, 54, 55, 59, 92, 103], "full_rmin": [12, 55], "full_rmax": [12, 55], "full_zmin": [12, 55], "full_zmax": [12, 55], "thetamin": [12, 13, 38, 53, 54, 55, 92, 103], "thetamax": [12, 13, 53, 54, 55, 92, 103], "141592653589793": [12, 13, 38], "phimin": [12, 13, 53, 54, 55, 92, 103], "phimax": [12, 13, 53, 54, 55, 92, 103], "283185307179586": [12, 13, 43], "start_event_id": [12, 13, 14, 53, 54, 55, 92, 103], "flavor": [12, 13, 14, 17, 22, 35, 40, 42, 51, 53, 54, 55, 64, 92, 103], "n_events_per_fil": [12, 13, 52, 55, 59], "spectrum": [12, 13, 23, 24, 25, 26, 28, 32, 55, 61, 95, 96, 97, 103, 106, 122, 124, 128, 135, 137, 160, 209, 215, 218, 231, 245, 247], "log_uniform": [12, 13, 55], "start_file_id": [12, 13, 55], "charg": [12, 13, 22, 24, 40, 55, 61, 64, 103, 232], "currend": [12, 13, 55], "neutral": [12, 13, 40, 55, 64, 103], "inelastivii": [12, 13], "distribut": [12, 13, 26, 44, 49, 50, 55, 61, 124, 137, 151, 160, 173, 176, 189], "output": [12, 13, 15, 17, 24, 25, 26, 28, 29, 31, 32, 34, 35, 38, 50, 52, 55, 57, 61, 63, 64, 67, 81, 122, 127, 128, 140, 153, 164, 165, 179, 189, 197, 203, 217, 223, 230, 242, 245, 247, 249], "number": [12, 13, 15, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 40, 43, 44, 48, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 73, 78, 79, 81, 83, 85, 87, 95, 96, 97, 103, 106, 110, 114, 118, 121, 122, 124, 125, 127, 128, 134, 136, 137, 138, 160, 164, 165, 167, 168, 170, 173, 174, 175, 176, 177, 179, 183, 188, 189, 194, 195, 197, 202, 203, 204, 205, 206, 207, 214, 217, 218, 223, 225, 231, 237, 238, 242, 247], "randomli": [12, 13, 22, 55, 173, 176, 189], "chosen": [12, 13, 28, 55, 56, 61, 95, 96, 97, 106, 128, 164, 186, 210, 230, 242], "assum": [12, 13, 28, 38, 42, 55, 56, 58, 61, 63, 81, 97, 120, 122, 125, 135, 143, 153, 164, 165, 168, 178, 182, 210, 211, 215, 219, 220, 225, 236, 237, 243], "uniform": [12, 13, 45, 55], "logarithm": [12, 13, 38, 55, 81], "lower": [12, 13, 38, 45, 55, 61, 95, 96, 97, 106, 128, 134, 136, 143, 151, 160, 170, 177, 195, 209, 214, 215, 223, 242, 245], "coordin": [12, 13, 22, 28, 32, 35, 42, 45, 46, 53, 54, 55, 58, 61, 62, 63, 79, 81, 83, 84, 85, 87, 97, 103, 118, 151, 165, 172, 176, 194, 195, 197, 219, 221, 231, 243], "volum": [12, 13, 34, 35, 38, 43, 53, 54, 56, 57, 59, 61, 63, 66, 92, 103, 172, 195, 243], "fiduci": [12, 13, 53, 54, 55, 103], "vertic": [12, 13, 28, 49, 53, 54, 55, 62, 63, 64, 194, 197, 236, 238], "upper": [12, 13, 38, 45, 55, 56, 95, 96, 97, 106, 134, 136, 143, 151, 160, 170, 177, 195, 209, 214, 215, 242], "5x": 12, "angl": [12, 13, 22, 23, 24, 26, 28, 29, 31, 32, 38, 42, 43, 48, 53, 55, 58, 60, 61, 62, 63, 81, 83, 84, 85, 87, 93, 101, 103, 105, 110, 125, 131, 142, 145, 151, 172, 191, 197, 209, 215, 219, 221, 225, 228, 236, 238, 242, 243], "start_ev": [12, 13, 55], "pdf": [12, 13, 44, 55, 57, 118, 131, 197], "scheme": [12, 13, 40, 55, 245], "neg": [12, 13, 28, 40, 42, 55, 61, 122, 160, 218, 247], "per": [12, 13, 22, 28, 35, 38, 42, 43, 52, 53, 54, 55, 56, 59, 61, 63, 79, 83, 85, 87, 103, 110, 118, 122, 124, 134, 137, 153, 164, 165, 167, 170, 174, 197, 202, 203, 204, 205, 206, 207, 211, 225, 228, 242], "smaller": [12, 13, 28, 55, 59, 63, 116, 126, 243], "than": [12, 13, 28, 32, 38, 53, 54, 55, 58, 61, 63, 79, 81, 95, 96, 97, 106, 116, 126, 127, 128, 142, 151, 167, 170, 179, 197, 223, 225, 231, 245], "probabl": [12, 13, 42, 53, 55, 56, 63, 230], "uniformli": [12, 13, 38, 55], "deposit": [12, 13, 38, 53, 54, 55, 92, 103], "memori": [13, 35, 61, 81, 83, 170, 243], "fin": [13, 35, 56], "dictionari": [13, 26, 28, 29, 31, 32, 34, 35, 38, 46, 53, 54, 55, 77, 78, 79, 82, 83, 85, 87, 94, 103, 108, 109, 110, 122, 125, 135, 140, 153, 160, 167, 170, 179, 183, 188, 189, 191, 197, 239, 242], "fit": [13, 28, 32, 45, 46, 55, 58, 61, 63, 103, 118, 121, 124, 131, 145, 151, 160, 170, 174, 189, 191, 198, 199, 206, 209], "95": [13, 55, 63], "percentil": [13, 55], "track": [13, 28, 36, 53, 54, 59, 61, 130, 164, 237, 247], "calcul": [13, 22, 23, 24, 26, 28, 29, 31, 32, 34, 35, 38, 40, 42, 43, 44, 53, 55, 56, 58, 59, 61, 63, 66, 79, 81, 103, 110, 114, 119, 121, 122, 127, 136, 140, 142, 143, 149, 152, 153, 157, 160, 164, 167, 172, 176, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 209, 215, 217, 218, 219, 221, 225, 228, 230, 231, 233, 236, 239, 243, 245, 247], "largest": [13, 61, 151, 194, 236, 243], "data_set": 13, "attribut": [13, 34, 35, 42, 59, 62, 83, 85, 87, 122, 170, 223], "write": [13, 28, 29, 31, 32, 34, 56, 58, 59, 63, 94, 108, 109, 179, 206, 232, 245], "dataset": [13, 53, 54, 170], "easi": [13, 61, 64, 237, 239, 242], "multiprocess": 13, "desir": [13, 25, 52, 55, 62, 131, 137, 138, 139, 156, 167, 177, 197, 223, 227], "part000x": [13, 52], "dict": [13, 22, 24, 25, 26, 28, 29, 31, 32, 35, 38, 77, 78, 79, 81, 83, 85, 87, 94, 97, 103, 108, 109, 110, 122, 124, 125, 134, 135, 137, 140, 164, 167, 170, 188, 189, 197, 202, 203, 204, 205, 206, 207, 214], "meta": [13, 64, 97], "additional_interact": 13, "potenti": [13, 22, 53, 61, 245], "edep": 13, "ccnc": [13, 22, 44, 92, 103], "inelast": [13, 37, 53, 54, 55, 92, 103], "nc": [13, 40, 44, 53, 55, 103], "cc": [13, 22, 40, 44, 53, 55, 103], "slope": [13, 63, 103, 160, 209, 213], "19": [13, 63, 103, 110, 206], "offset": [13, 28, 85, 103, 124, 127, 128, 138, 164, 167, 170, 194, 197, 225], "01": [13, 28, 32, 56, 63, 73, 136, 230, 237], "37": [13, 58], "44": [13, 43], "flux": [13, 37, 48, 55, 215], "rnd": [13, 25, 35, 44], "minumum": 13, "solid": [13, 38, 43, 55, 215], "area": [13, 38, 42, 48, 53, 54, 55, 61, 92, 103, 172, 173, 176, 194, 215], "random": [13, 22, 24, 25, 26, 35, 44, 63, 64, 127, 128, 137, 173, 176, 183, 186, 188, 189], "product": [13, 44, 55, 61], "ie": [13, 29, 31, 164, 170, 188], "secondary_properti": 13, "d": [13, 24, 26, 27, 28, 32, 38, 40, 42, 45, 46, 56, 61, 62, 63, 81, 151, 215, 236, 247], "elaps": [13, 216], "sinc": [13, 60, 61, 62, 63, 103, 128, 130, 136, 137, 164, 231, 236, 237, 242, 246, 247], "present": [13, 28, 29, 31, 32, 55, 59, 61, 63, 81, 83, 85, 87, 109, 124, 164, 170, 179, 189, 223], "spectrum_typ": 13, "enrgi": 13, "certain": [13, 25, 43, 53, 54, 56, 58, 62, 63, 94, 108, 109, 173, 177, 239, 242, 245], "total": [13, 25, 36, 40, 43, 53, 54, 55, 56, 59, 88, 103, 122, 164, 170, 211, 225, 227, 231], "minim": [13, 28, 55, 56, 116, 124, 126, 160], "icecub": [13, 55], "2017": [13, 24, 55, 56, 63], "astrophys": [13, 55], "measur": [13, 25, 28, 32, 45, 46, 55, 56, 58, 60, 61, 72, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 103, 116, 120, 121, 126, 127, 137, 189, 206, 210, 215, 238, 239, 242, 243, 246], "sampl": [13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 44, 53, 54, 55, 56, 61, 63, 64, 79, 83, 85, 87, 95, 96, 97, 103, 106, 121, 122, 124, 125, 128, 135, 137, 138, 139, 151, 153, 156, 160, 164, 165, 167, 170, 173, 176, 186, 189, 197, 203, 204, 213, 217, 218, 221, 225, 231, 233, 238, 242, 243, 246, 247], "doi": [13, 24, 25, 26, 38, 39, 42, 44, 53, 55, 151], "org": [13, 24, 26, 39, 42, 44, 53, 55, 118, 131, 134, 136, 160, 197, 221, 236], "10": [13, 22, 23, 24, 25, 26, 28, 32, 38, 39, 42, 44, 45, 46, 50, 53, 55, 59, 63, 64, 88, 95, 96, 97, 103, 106, 134, 151, 157, 168, 173, 176, 198, 204, 205, 209, 210], "22323": [13, 53, 55], "301": [13, 55], "1005": [13, 55], "gzk": [13, 55], "van": [13, 55], "vliet": [13, 55], "et": [13, 40, 55, 58, 60, 63, 136], "al": [13, 40, 55, 58, 60, 63, 136], "2019": [13, 25, 55, 61], "arxiv": [13, 25, 39, 44, 55, 118, 131, 136, 151, 160, 197, 236], "ab": [13, 39, 53, 55, 56, 136, 151, 160], "1901": [13, 55], "01899v1": [13, 55], "proton": [13, 55], "fraction": [13, 22, 28, 29, 31, 32, 42, 44, 45, 46, 55, 56, 63, 64, 116, 126, 186], "get_proton_10": 13, "sensit": [13, 56, 59, 66, 121, 238], "e2_fluxes3": [13, 57], "ta": 13, "po": [13, 79, 84, 151], "sissa": 13, "395": [13, 53], "338": 13, "combin": [13, 25, 35, 38, 53, 54, 55, 56, 61, 77, 78, 79, 88, 164, 170, 183, 188, 245], "cosmogen": [13, 55], "2022": [13, 58], "helper": [13, 28, 31, 32, 81, 83, 116, 126, 134, 215, 219, 247], "interpret": [13, 24, 25, 26, 61, 82, 94, 108, 109, 124, 137, 151], "dictinari": [13, 170], "rmin": [13, 53, 54, 55, 92, 103], "rmax": [13, 49, 53, 54, 55, 92, 103], "zmin": [13, 49, 53, 54, 55, 92, 103], "zmax": [13, 53, 54, 55, 92, 103], "xmin": [13, 44, 53, 92, 103, 176], "xmax": [13, 22, 44, 53, 61, 92, 103, 151, 176], "ymin": [13, 53, 92, 103, 176], "ymax": [13, 44, 53, 92, 103, 176], "explan": [13, 61, 63, 79], "blow": 13, "mandatori": [13, 63], "pass": [13, 28, 29, 31, 35, 42, 55, 58, 60, 61, 63, 77, 78, 79, 81, 82, 83, 85, 87, 97, 114, 124, 130, 134, 140, 160, 170, 173, 174, 176, 179, 188, 194, 209, 217, 223, 230, 237, 242, 247], "configur": [13, 17, 28, 29, 31, 32, 35, 55, 58, 61, 62, 64, 66, 77, 78, 79, 83, 85, 87, 128, 170, 223, 237, 245], "threshold": [13, 35, 55, 56, 63, 103, 110, 114, 122, 135, 197, 202, 203, 204, 205, 206, 207, 209, 225, 242], "within": [13, 38, 53, 54, 55, 64, 95, 96, 97, 106, 151, 167, 173, 176, 202], "mu": [13, 23, 55, 61], "trigger": [13, 35, 38, 50, 53, 54, 55, 56, 59, 61, 63, 64, 76, 79, 83, 85, 87, 92, 94, 99, 103, 108, 109, 111, 114, 121, 127, 128, 140, 164, 167, 170, 183, 186, 188, 189, 197, 208, 225, 230, 238, 246], "obvious": 13, "sens": [13, 61, 64, 245], "henc": [13, 28, 29, 31, 32, 56, 59, 61, 206, 239], "determind": 13, "depend": [13, 28, 29, 31, 32, 35, 39, 55, 58, 61, 62, 63, 76, 77, 78, 82, 83, 85, 87, 151, 164, 170, 191, 202, 206, 220, 237, 239, 241, 243], "free": [13, 61], "tl": 13, "dr": 13, "larg": [13, 55, 56, 63, 79, 95, 96, 97, 106, 151, 164, 237, 243], "enough": [13, 48, 50, 55, 56, 61, 63, 95, 96, 97, 106, 118, 121, 242, 243], "necessari": [13, 28, 45, 46, 55, 58, 59, 61, 62, 63, 77, 78, 79, 164, 170, 178, 237, 239], "becaus": [13, 28, 53, 54, 55, 56, 58, 61, 63, 64, 79, 236, 238, 246], "cylind": [13, 55], "min": [13, 38, 137, 151], "max": [13, 32, 38, 137, 151, 173], "radiu": [13, 42, 55, 63, 173], "cube": 13, "fiducial_": 13, "full_": 13, "optin": [13, 151], "horizont": [13, 28, 32, 56, 62, 103, 195, 221, 236, 243], "displac": [13, 61, 128, 236], "x0": [13, 22, 28, 81, 103], "y0": [13, 81], "shift": [13, 45, 46, 60, 95, 96, 97, 106, 127, 143, 151, 153, 182, 197, 209, 221, 243], "via": [13, 24, 25, 26, 28, 29, 31, 32, 53, 54, 55, 58, 63, 81, 103, 127, 209, 210, 225, 237, 242, 245, 246], "dicitionari": 13, "bound": [13, 56, 95, 96, 97, 106, 136, 143, 160, 170, 195, 215], "intersect": [13, 103, 151, 221], "between": [13, 22, 23, 24, 25, 26, 28, 29, 31, 32, 45, 46, 53, 55, 56, 58, 60, 61, 62, 63, 81, 103, 110, 118, 120, 122, 127, 128, 131, 136, 137, 143, 151, 160, 164, 167, 170, 173, 176, 191, 194, 195, 197, 203, 204, 211, 215, 219, 221, 225, 231, 233, 237, 242, 243, 245, 247], "align": [13, 238], "box": [13, 59, 73], "adapt": [13, 42, 58, 119, 232], "www": 13, "scratchapixel": 13, "lesson": 13, "3d": [13, 28, 29, 31, 32, 53, 54, 62, 97, 219, 238], "simpl": [13, 25, 28, 42, 45, 46, 48, 53, 55, 56, 60, 61, 62, 63, 64, 80, 86, 94, 108, 109, 138, 202, 207, 209, 222, 237, 246, 247], "shape": [13, 25, 28, 29, 31, 32, 46, 53, 54, 56, 60, 97, 118, 124, 135, 176, 209, 210, 214, 225, 231], "definit": [13, 28, 61, 103, 135, 164, 232, 238], "definiton": 13, "dim": [13, 32, 42, 79, 83, 85, 87, 97, 131, 145], "vector": [13, 22, 25, 28, 29, 31, 32, 35, 42, 53, 54, 61, 62, 63, 79, 81, 83, 84, 85, 87, 88, 93, 97, 101, 103, 105, 118, 151, 209, 219, 221, 236, 238], "fiducial_rmax": [13, 53, 54, 55, 59, 92, 103], "plus_minu": [13, 55], "mix": [13, 55], "proposal_kwarg": 13, "max_n_events_batch": 13, "100000": 13, "atmospher": [13, 61, 103, 151, 221], "studi": [13, 55, 56, 61, 63, 76, 87, 188, 189, 237, 245], "plu": [13, 55, 61, 97, 164], "els": [13, 55, 165, 223], "cross": [13, 28, 35, 40, 43, 55, 61, 63, 142, 151, 203, 204, 209, 211], "1e6": [13, 59], "numb": 13, "batch": [13, 59, 170, 243], "cut": [13, 32, 35, 38, 42, 63, 131, 138, 170, 177, 189, 208, 209, 210, 230, 231, 233, 246], "appli": [13, 28, 29, 31, 32, 35, 38, 56, 60, 61, 62, 63, 85, 88, 95, 96, 97, 99, 106, 110, 116, 120, 121, 124, 125, 126, 127, 128, 134, 135, 143, 154, 155, 159, 160, 161, 164, 170, 194, 195, 197, 202, 206, 209, 217, 219, 223, 225, 230, 231, 239, 243, 245, 246], "state": [13, 28, 237, 242], "proposal_config": [13, 55], "proposal_tables_path": 13, "write_ev": 13, "0deg": [13, 60, 81, 83, 84, 85, 87, 236, 238], "48550": 13, "2111": 13, "10299": 13, "atrribut": 13, "chose": 13, "exclus": [13, 79], "skeleton": 15, "tarbal": 17, "desi": [17, 216], "precalcul": 17, "storag": [17, 243], "araeventlist_filenam": 18, "hdf5_filenam": 18, "arz": [20, 24, 53, 54, 103], "get_vector_potenti": [20, 21, 22], "get_vector_potential_numba": [20, 21, 22], "thetaprime_to_theta": [20, 21, 22], "theta_to_thetaprim": [20, 21, 22], "arz_tabul": [20, 21, 22], "hcrb2017": [20, 24], "get_time_trac": [20, 21, 22, 23, 24, 25, 26, 61], "get_frequency_spectrum": [20, 23, 24, 25, 61, 92, 95, 96, 97, 106, 242, 243], "gauss": [20, 23, 151], "get_n_askdeptha": [20, 23], "emitt": [20, 28, 35, 61, 62, 66, 92, 99, 103, 107, 242], "parametr": [20, 24, 42, 81, 191, 215], "logger": [20, 26, 35, 36, 79, 88, 111, 125, 130, 151, 170, 174, 223, 233, 245], "get_parametr": [20, 26], "em_fract": [21, 22], "set_se": [21, 22], "set_interpolation_factor": [21, 22], "set_interpolation_factor2": [21, 22], "get_shower_profil": [21, 22], "get_last_shower_profile_id": [21, 22], "get_vector_potential_fast": [21, 22], "shower_energi": [22, 53, 54, 61, 63, 92, 103], "n": [22, 23, 24, 25, 26, 27, 28, 32, 45, 46, 53, 56, 58, 59, 60, 61, 62, 63, 81, 120, 128, 151, 153, 161, 165, 167, 191, 209, 210, 213, 215, 218, 219, 220, 221, 225, 228, 233, 236, 243, 246], "dt": [22, 23, 24, 25, 26, 35, 53, 54, 56, 61, 81, 92, 103, 203, 204, 205, 218, 243], "profile_depth": 22, "profile_c": 22, "af": 22, "freq_po": 22, "freq_neg": 22, "exp_po": 22, "exp_neg": 22, "t0_po": 22, "t0_neg": 22, "had": [22, 23, 24, 26, 53, 55, 56, 61, 63, 103, 191, 243, 245], "n_index": [22, 23, 24, 26, 61, 81, 131, 145, 198, 243], "78": [22, 45, 58, 60, 61, 63], "interp_factor": [22, 24, 61], "interp_factor2": [22, 24, 61], "100": [22, 24, 26, 28, 32, 55, 56, 58, 59, 61, 62, 63, 72, 103, 122, 151, 157, 189, 197, 209, 221, 225, 228, 236, 237], "shift_for_xmax": [22, 61], "em_factor": 22, "fast": [22, 38, 61, 209, 247], "interpol": [22, 24, 28, 29, 31, 32, 45, 46, 48, 58, 62, 63, 72, 81, 127, 128, 136, 151, 172, 215, 221, 236], "domain": [22, 23, 24, 25, 26, 81, 95, 96, 97, 106, 122, 124, 128, 134, 137, 161, 197, 213, 218, 225, 242, 246, 247], "puls": [22, 23, 24, 25, 26, 28, 58, 60, 61, 64, 93, 101, 103, 105, 116, 121, 126, 138, 142, 153, 160, 191, 194, 209, 211, 213, 228, 242, 243, 246], "excess": [22, 24, 61, 103, 116, 126], "deriv": [22, 28, 103, 209], "efield": [22, 25, 28, 29, 31, 32, 35, 56, 63, 97, 103, 125, 150, 153, 177, 210, 219, 231], "integr": [22, 28, 29, 31, 35, 42, 43, 48, 53, 61, 62, 103, 110, 151, 197, 205, 213, 215, 225], "wa": [22, 36, 53, 54, 56, 58, 60, 63, 70, 78, 83, 85, 87, 94, 95, 96, 97, 99, 103, 106, 108, 109, 122, 130, 135, 143, 151, 164, 168, 178, 194, 208, 223, 236, 237, 238, 239, 242, 245, 246], "sum": [22, 28, 38, 48, 53, 54, 55, 56, 59, 79, 81, 143, 151, 197, 218, 221, 225, 242, 243], "trapezoid": [22, 61], "rule": [22, 55, 61], "size": [22, 32, 38, 42, 61, 81, 97, 110, 121, 122, 124, 134, 141, 151, 167, 168, 179, 189, 194, 195, 221, 233, 236, 237, 243], "bin": [22, 23, 24, 25, 26, 38, 43, 53, 54, 55, 59, 61, 63, 81, 95, 96, 97, 106, 137, 197, 202, 203, 204, 205, 207, 218, 221, 225, 247], "depth": [22, 28, 32, 39, 42, 45, 46, 56, 58, 61, 62, 64, 79, 83, 85, 87, 103, 151, 194, 195, 220, 238, 243], "em": [22, 23, 24, 26, 53, 55, 61, 63, 103, 246], "refract": [22, 23, 24, 26, 28, 29, 30, 31, 32, 45, 46, 53, 58, 60, 61, 62, 81, 94, 103, 108, 109, 131, 143, 145, 151, 194, 195, 197, 220, 221, 225, 231, 236], "1km": 22, "observ": [22, 23, 24, 26, 28, 29, 31, 32, 35, 46, 58, 61, 62, 63, 93, 101, 103, 105, 151, 165, 172, 173, 174, 175, 176, 221, 246], "amplitud": [22, 23, 24, 25, 26, 35, 38, 53, 54, 56, 60, 61, 62, 63, 88, 92, 103, 116, 124, 125, 126, 134, 137, 149, 151, 160, 191, 197, 202, 206, 207, 211, 213, 217, 219, 221], "scale": [22, 38, 45, 46, 56, 60, 61, 62, 63, 116, 126, 215], "factor": [22, 35, 53, 61, 62, 63, 110, 114, 122, 128, 135, 197, 215, 225, 231, 232], "precis": [22, 55, 103, 164, 170, 221, 246], "benefici": 22, "slow": [22, 55, 61, 136, 151, 170, 209, 225, 237, 243], "down": [22, 45, 46, 55, 64, 81, 83, 84, 85, 87, 236, 238, 242, 243], "proport": 22, "just": [22, 26, 28, 48, 55, 56, 61, 62, 63, 64, 81, 124, 134, 138, 142, 151, 164, 207, 223, 241, 242, 243, 246], "around": [22, 28, 30, 32, 55, 56, 63, 95, 96, 97, 106, 116, 126, 140, 141, 144, 151, 194, 218, 230, 238, 242, 243, 246, 247], "peak": [22, 61, 103, 121, 135, 151], "rel": [22, 25, 53, 55, 61, 63, 79, 83, 85, 87, 97, 103, 120, 126, 140, 143, 151, 153, 160, 165, 195, 208, 238, 242, 246], "thetaprim": 22, "r_prime": 22, "amount": [22, 63, 81, 197, 232], "matter": [22, 151], "travers": 22, "carri": [22, 44, 77, 78, 217, 237], "iN": [22, 25, 61], "slant": [22, 103, 151], "same_show": [22, 24, 26, 61], "output_mod": [22, 61, 173, 176], "maximum_angl": 22, "3490658503988659": 22, "field": [22, 24, 25, 28, 29, 31, 32, 35, 43, 45, 46, 53, 54, 55, 58, 60, 61, 62, 63, 64, 81, 83, 85, 87, 93, 94, 97, 101, 103, 105, 108, 109, 125, 127, 128, 143, 151, 153, 154, 155, 156, 157, 160, 161, 176, 179, 191, 195, 209, 210, 211, 219, 231, 245], "realiz": [22, 26, 53, 54, 61, 81, 127, 236], "choosen": [22, 26, 173, 176], "solut": [22, 24, 25, 26, 28, 29, 31, 32, 35, 38, 53, 54, 61, 62, 63, 64, 97, 103, 106, 143, 149, 191, 238], "charge_excess": [22, 61], "angular": [22, 28], "cherenkov": [22, 24, 26, 32, 61, 63, 228], "empti": [22, 26, 28, 34, 63, 95, 96, 97, 106, 110, 153, 197], "librari": [22, 24, 28, 53, 54, 61, 62, 63, 135], "efield_trac": 22, "er": [22, 25, 28, 32, 35, 97, 231], "etheta": [22, 24, 25, 26, 28, 32, 35, 63, 81, 97, 103, 131, 210, 211, 219, 231, 236], "ephi": [22, 25, 28, 32, 35, 63, 81, 97, 103, 131, 210, 211, 219, 231, 236], "kei": [22, 26, 28, 29, 31, 32, 35, 38, 53, 54, 55, 60, 77, 78, 79, 81, 87, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 122, 124, 134, 137, 153, 164, 167, 170, 179, 183, 197, 202, 203, 204, 205, 206, 207, 221, 237, 239], "deprec": [22, 35, 87, 103, 130, 237], "trapeoiz": 22, "transcript": 22, "fortran": 22, "NOT": [22, 38, 45, 46, 55, 61, 64, 116, 126, 164], "1234": 22, "theta_refer": 22, "relativ": [22, 116, 172], "is_em_show": 23, "lpm": [23, 61], "viewangl": [23, 24, 26], "sight": [23, 24, 26, 61], "width": [23, 24, 25, 26, 28, 95, 96, 97, 103, 106, 125, 144, 151, 194, 203, 204], "invers": [23, 24, 25, 26, 28, 53, 54, 61, 95, 96, 97, 103, 106, 203, 204], "rate": [23, 24, 25, 26, 28, 29, 31, 32, 53, 54, 56, 61, 63, 95, 96, 97, 103, 106, 124, 125, 128, 137, 139, 156, 170, 197, 203, 204, 213, 215, 217, 218, 225, 231, 233, 242, 243, 247], "enabl": [23, 24, 25, 26, 125, 153, 191, 209, 223], "disabl": [23, 125, 153], "lpd": 23, "effect": [23, 28, 29, 31, 32, 34, 35, 38, 43, 45, 46, 53, 55, 56, 57, 59, 61, 62, 63, 66, 79, 81, 88, 116, 126, 137, 191, 208, 215, 218, 223, 236, 246], "nont": 23, "complex": [23, 24, 25, 26, 45, 46, 53, 60, 61, 62, 79, 81, 88, 103, 116, 126, 134, 191, 218, 225, 231, 236, 246], "frequenc": [23, 24, 25, 26, 28, 29, 31, 32, 39, 58, 60, 62, 63, 64, 70, 72, 79, 80, 81, 83, 85, 86, 87, 88, 92, 95, 96, 97, 103, 106, 110, 116, 119, 122, 124, 126, 127, 128, 134, 135, 136, 137, 142, 143, 151, 164, 167, 177, 191, 197, 209, 213, 214, 217, 218, 225, 228, 231, 236, 238, 242, 246, 247], "sigma": [23, 25, 63, 114, 134, 177, 209, 214], "fudge_lpm": 23, "gaussian": [23, 25, 60, 61, 124, 125, 134, 151, 189, 214], "greisen": 23, "gaisser": 23, "hilla": 23, "flag": [23, 103, 122, 152, 158, 225], "1103": [23, 24, 26, 38], "physrevd": [23, 24, 26, 38], "82": [23, 55, 58], "074017": 23, "parameter": [23, 24, 26, 40, 42], "compat": [23, 63, 79, 82, 83, 85, 87, 164, 222, 237], "regim": 23, "neglig": [23, 55, 61, 218], "switch": [23, 113, 116, 126, 142, 170, 245], "rescal": [23, 25, 38, 81, 236], "match": [23, 28, 29, 31, 32, 35, 53, 77, 78, 151, 170, 186, 189, 225, 242], "e_lpm": 23, "full_output": [24, 25, 26, 205], "obtain": [24, 25, 26, 28, 29, 31, 32, 55, 56, 61, 63, 76, 116, 126, 206, 214, 218, 231], "fft": [24, 25, 26, 95, 96, 97, 103, 106, 212], "standard": [24, 25, 26, 40, 44, 55, 57, 58, 61, 72, 83, 85, 87, 110, 127, 142, 212, 217, 230, 237, 245], "approach": [24, 25, 26, 28, 53, 54, 247], "assur": [24, 25, 26], "fourier": [24, 25, 26, 61, 95, 96, 97, 106, 120, 135, 209, 211, 218, 231, 242, 246], "transform": [24, 25, 26, 28, 55, 61, 93, 101, 105, 128, 135, 218, 231, 242, 246], "known": [24, 25, 26, 164, 239], "arz2019": [24, 61, 63, 243], "zhs1992": [24, 26, 61], "zh": [24, 26, 61], "za": [24, 26], "f": [24, 26, 38, 43, 44, 53, 54, 59, 61, 81, 120, 135, 137, 151, 189, 214], "halzen": [24, 26], "stanev": [24, 26], "phy": [24, 26, 38, 40, 63, 155], "rev": [24, 26, 38, 40, 63], "45": [24, 26, 63, 142, 228, 242], "362": [24, 26], "1992": [24, 26], "phase": [24, 26, 35, 45, 46, 61, 72, 76, 79, 81, 83, 85, 87, 88, 110, 113, 116, 122, 126, 127, 128, 137, 160, 165, 197, 209, 213, 225, 230, 231, 236, 237], "alvarez2000": [24, 26, 61, 63, 191], "mainli": [24, 26, 61, 242], "j": [24, 26, 44, 59, 61, 165, 215], "alvarez": [24, 26], "muniz": [24, 26], "vazquez": [24, 26], "d62": [24, 26], "2000": [24, 26, 151, 173], "84": [24, 26, 55], "103003": [24, 26], "alvarez2009": [24, 26, 61, 63, 103], "w": [24, 26, 28, 43, 56, 59, 61, 151], "carvalho": [24, 26, 151], "tuero": [24, 26], "coher": [24, 26, 61, 151, 218], "eev": [24, 26, 55, 61], "astroparticl": [24, 26], "35": [24, 64], "2012": [24, 26], "287": [24, 26], "299": [24, 26], "c": [24, 26, 28, 32, 39, 43, 45, 46, 58, 62, 151, 164, 231, 241], "jame": [24, 26], "prothero": [24, 26], "thin": [24, 26, 55], "energet": 24, "dens": [24, 26], "media": [24, 26, 55, 62, 236], "applic": [24, 26, 61, 223, 237, 241, 245], "32": [24, 26, 103, 197, 203], "2009": [24, 26], "111": [24, 26, 55, 103], "hanson": 24, "connolli": [24, 40, 63], "91": [24, 55, 136], "75": [24, 39, 58, 197], "89": [24, 55], "semi": 24, "mc": [24, 44, 57, 61, 99, 103, 128, 151, 188, 189, 197, 242, 246], "mu\u00f1iz": 24, "romero": 24, "wolf": 24, "2011": [24, 40, 63], "accur": [24, 55, 61, 124, 239], "radiat": [24, 55, 61, 62, 81, 103, 219], "gravit": 24, "cosmologi": 24, "arz2020": [24, 61, 63], "updat": [24, 36, 55, 61, 63, 68, 75, 77, 78, 79, 83, 84, 85, 87, 151, 236, 237], "taken": [24, 28, 39, 55, 61, 62, 63, 77, 78, 87, 103, 174, 197, 215, 223, 231, 246], "p": [24, 28, 40, 53, 55, 63, 120, 219], "hansen": 24, "101": [24, 38, 56, 63, 103, 125], "2020": [24, 25, 55, 58, 60, 63, 236], "083005": 24, "behviour": 24, "pick": [24, 164, 189, 195], "voltag": [25, 35, 53, 61, 63, 81, 103, 110, 124, 127, 128, 137, 143, 153, 154, 160, 170, 191, 195, 197, 203, 204, 205, 206, 210, 211, 213, 217, 218, 231, 238, 242, 243, 245], "strength": 25, "three": [25, 42, 58, 61, 63, 64, 77, 78, 164, 238, 243], "pulser": 25, "antena": 25, "1m": [25, 59, 236], "fold": [25, 136, 143, 191, 209, 243, 246], "respons": [25, 35, 53, 55, 56, 63, 64, 68, 70, 73, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 103, 116, 125, 126, 127, 128, 134, 136, 143, 149, 153, 154, 197, 206, 210, 214, 216, 217, 231, 243, 245, 246], "pattern": [25, 35, 56, 61, 81, 103, 173, 174, 176, 188, 191, 209, 237], "delta_puls": [25, 60], "delta": [25, 53, 55, 211], "cw": [25, 60, 103, 135], "sinusoid": 25, "wave": [25, 28, 61, 135, 219, 221, 243, 246], "squar": [25, 53, 60, 61, 103, 151, 205, 209, 210, 213], "rectangular": [25, 60, 95, 96, 97, 103, 106, 134, 144, 151, 155, 209, 214], "amplitued": 25, "tone_burst": [25, 103], "sine": 25, "idl1": 25, "hvsp1": 25, "waveform": [25, 35, 61, 63, 64, 79, 110, 127, 135, 142, 143, 160, 170, 189, 194, 195, 197, 221, 225, 238, 242, 243], "ku": [25, 236], "lab": 25, "half": [25, 43, 55, 61, 128, 134, 227], "ara02": 25, "calpuls": 25, "depict": [25, 61], "02": 25, "efield_idl1_spic": [25, 60], "spice": 25, "calibr": [25, 120, 164, 165, 167, 170, 182, 183, 237, 239, 246], "campaign": [25, 239], "2018": [25, 35, 42, 134, 137, 236, 237], "journal": 25, "instrument": 25, "15": [25, 55, 76, 103, 126], "p09039": 25, "1088": [25, 151], "1748": [25, 151], "0221": [25, 151], "09": [25, 63, 164, 165], "2006": [25, 151], "03027": 25, "efield_delta_puls": 25, "unpolar": [25, 211], "preserv": [25, 211], "power": [25, 53, 55, 114, 122, 136, 137, 151, 197, 205, 211, 217, 218, 221], "a_theta": 25, "sqrt": [25, 211, 218], "a_phi": 25, "emitter_frequ": 25, "half_width": [25, 92, 103], "1d": [25, 45, 46, 122, 164, 165, 225, 231], "electric_field": [25, 92, 94, 108, 109, 231, 246], "component": 25, "nuradiologg": [26, 151, 212, 223, 245], "statu": [26, 63, 78, 130, 151, 206, 212, 223, 245], "exchang": 26, "k_l": [26, 92, 103], "average_show": 26, "energyshow": 26, "fromhadron": 26, "physics35": 26, "energeticshow": 26, "drawn": [26, 28, 55, 61, 137, 160, 189], "averag": [26, 38, 45, 46, 55, 58, 61, 83, 85, 87, 88, 97, 122, 142, 164, 217, 228, 231], "analyticraytrac": [27, 62], "speed_of_light": [27, 28], "get_n_step": [27, 28], "get_seg": [27, 28], "get_z_deep": [27, 28], "get_c0_from_log": [27, 28], "get_i": [27, 28], "get_gamma": [27, 28], "get_turning_point": [27, 28], "get_y_with_z_mirror": [27, 28], "get_y_turn": [27, 28], "get_delta_i": [27, 28], "obj_delta_y_squar": [27, 28], "get_reflection_point": [27, 28], "get_z_unmirror": [27, 28], "get_y_diff": [27, 28], "ray_tracing_2d": [27, 28, 29, 31, 62], "get_c_1": [27, 28], "get_c": [27, 28], "get_z_mirror": [27, 28], "get_path_length": [27, 28, 29, 31, 32, 62], "get_path_length_analyt": [27, 28], "get_travel_tim": [27, 28, 29, 31, 32, 62], "get_travel_time_analyt": [27, 28], "get_attenuation_along_path": [27, 28], "get_path_seg": [27, 28], "get_angl": [27, 28, 162, 171, 172], "get_launch_angl": [27, 28], "get_receive_angl": [27, 28], "get_reflection_angl": [27, 28, 29, 31, 32], "get_path": [27, 28, 29, 31, 32, 62], "get_path_reflect": [27, 28], "obj_delta_i": [27, 28], "determine_solution_typ": [27, 28], "find_solut": [27, 28, 29, 31, 32, 62], "plot_result": [27, 28], "get_angle_from_c_0": [27, 28], "get_angle_from_logc_0": [27, 28], "get_c_0_from_angl": [27, 28], "get_z_from_n": [27, 28], "get_surf_skim_angl": [27, 28], "is_in_refraction_zon": [27, 28], "get_tof_for_straight_lin": [27, 28], "get_surface_puls": [27, 28], "angular_diff": [27, 28], "apply_propagation_effect": [27, 28, 29, 31, 32], "get_attenu": [27, 28, 29, 31, 32, 62], "get_config": [27, 28, 29, 31, 32, 33, 35], "get_launch_vector": [27, 28, 29, 31, 32, 62], "get_number_of_raytracing_solut": [27, 28, 29, 31, 32], "get_number_of_solut": [27, 28, 29, 31, 32, 62], "get_output_paramet": [27, 28, 29, 31, 32], "get_raytracing_output": [27, 28, 29, 31, 32, 103], "get_receive_vector": [27, 28, 29, 31, 32, 62], "get_result": [27, 28, 29, 31, 32, 62], "get_solution_typ": [27, 28, 29, 31, 32, 62], "has_solut": [27, 28, 29, 31, 32], "reset_solut": [27, 28, 29, 31, 32], "set_config": [27, 28, 29, 31, 32], "set_start_and_end_point": [27, 28, 29, 31, 32, 62], "use_optional_funct": [27, 28, 29, 31, 32], "ray_trac": [27, 28, 62], "set_solut": [27, 28, 32], "get_effective_index_birefring": [27, 28], "get_polarization_birefringence_simpl": [27, 28], "get_polarization_birefring": [27, 28], "on_sky_birefring": [27, 28], "get_pulse_propagation_birefring": [27, 28], "get_path_properties_birefring": [27, 28], "get_focus": [27, 28, 32], "get_ray_path": [27, 28], "directraytrac": 27, "direct_ray_trac": [27, 29], "get_propagation_modul": [27, 30, 62], "propagation_base_class": 27, "ray_tracing_bas": [27, 28, 29, 31, 32], "radioproparaytrac": 27, "radiopropa_ray_trac": [27, 32], "set_shower_axi": [27, 28, 29, 31, 32], "set_iterative_sphere_s": [27, 28, 29, 31, 32], "set_iterative_step_s": [27, 32], "activate_auto_step_s": [27, 32], "deactivate_auto_step_s": [27, 32], "set_cut_viewing_angl": [27, 32], "set_maximum_trajectory_length": [27, 32], "raytracer_it": [27, 32], "set_minimizer_toler": [27, 32], "raytracer_birefring": [27, 32], "raytracer_minim": [27, 32], "get_path_candid": [27, 32], "get_launch_vector_analyt": [27, 32], "get_correction_path_length": [27, 32], "get_correction_travel_tim": [27, 32], "get_frequencies_for_attenu": [27, 32], "delta_theta_direct": [27, 32], "delta_theta_bottom": [27, 32], "delta_theta_reflect": [27, 32], "299792458": 28, "optim": [28, 97, 124, 160, 191], "algorithm": [28, 32, 44, 61, 122, 138, 170, 191, 209, 225], "attenu": [28, 29, 31, 32, 35, 37, 53, 62, 63, 64, 66, 88, 191, 206], "along": [28, 29, 31, 32, 35, 42, 45, 46, 53, 54, 55, 61, 63, 79, 81, 83, 85, 87, 103, 151, 221, 237, 238, 242], "overwritten": [28, 109, 170, 224, 227], "init": [28, 81, 151], "x1": [28, 29, 31, 32, 81], "x2": [28, 29, 31, 32], "dx": [28, 44], "segment": [28, 29], "approx": [28, 120], "equi": 28, "dist": 28, "np": [28, 29, 31, 32, 38, 45, 46, 53, 55, 56, 57, 61, 62, 63, 79, 88, 93, 95, 96, 97, 101, 105, 106, 118, 121, 135, 151, 164, 165, 170, 209, 218, 221, 225, 243], "linspac": [28, 62], "ice_param": 28, "z_deep": 28, "homogen": [28, 55, 61], "know": [28, 55, 61, 63, 239, 245, 247], "035": 28, "awai": [28, 55, 61, 84, 121, 231], "monoton": [28, 174], "increas": [28, 35, 55, 56, 88, 122, 124, 136, 151, 160, 170, 174], "logc0": 28, "n_ice": [28, 45, 46, 58, 220], "c_0": [28, 62], "likelihood": 28, "better": [28, 61, 72, 76, 126, 136, 160, 225, 239, 243], "gamma": [28, 55, 62, 103], "c_1": [28, 62], "z_0": [28, 45, 46, 58, 62], "exponenti": [28, 30, 45, 46, 58, 62, 209], "delta_n": [28, 45, 46, 58, 62], "turn": [28, 53, 55, 61, 95, 96, 97, 106, 245], "off": [28, 53, 61, 62, 63, 95, 96, 97, 106, 151, 195, 223, 242], "saddl": 28, "transit": [28, 45, 53], "go": [28, 53, 55, 62, 63, 76, 113, 116, 126, 237, 238], "technic": [28, 164], "relat": [28, 53, 62, 81, 94, 108, 109, 121, 210, 242], "typl": [28, 85], "mirror": [28, 62, 216], "medium_reflect": 28, "c0rang": 28, "reflection_cas": 28, "logc_0": 28, "c0": [28, 62], "bottom": [28, 29, 31, 32, 38, 45, 46, 53, 58, 62, 63, 242], "shelf": [28, 44, 58], "unmirror": 28, "z_raw": 28, "in_air": 28, "dy": 28, "dz": [28, 32], "attenuation_model": [28, 29, 31, 32, 58, 62, 63, 191], "sp1": [28, 29, 31, 32, 39, 56, 58, 62, 63, 191], "n_frequencies_integr": [28, 29, 31, 32, 62], "25": [28, 32, 35, 42, 58, 61, 62, 63, 103, 130, 223, 245], "use_optimized_start_valu": 28, "overwrite_speedup": 28, "use_cpp": 28, "compile_numba": 28, "loglevel": 28, "verbos": [28, 77, 78, 79, 88, 125, 164, 170, 174, 188, 233], "notset": [28, 29, 31, 32, 79, 88, 118, 120, 121, 122, 125, 167, 168, 170, 174, 179, 188, 189, 233, 245], "paramt": [28, 81, 137], "skim": 28, "ineffici": 28, "approxim": [28, 35, 42, 55, 56, 60, 61, 63, 124, 128, 170, 177, 218], "discret": [28, 128], "loss": [28, 53, 55, 72, 120, 122], "accuraci": [28, 61, 136, 186, 243], "pr": [28, 170], "507": 28, "speedup_attenuation_model": 28, "gl3": [28, 39], "deactiv": 28, "routin": [28, 218], "constant": [28, 40, 42, 55, 58, 61, 62, 63, 83, 85, 87, 88, 122], "zero": [28, 29, 31, 32, 36, 53, 55, 56, 63, 83, 85, 87, 95, 96, 97, 106, 116, 122, 126, 141, 144, 164, 183, 209, 218, 223, 231, 246], "ben": [28, 114], "hokanson": [28, 114], "fase": 28, "pyrex": [28, 70, 114], "travel": [28, 29, 31, 32, 38, 53, 54, 61, 62, 143, 164, 194, 195, 219], "flight": [28, 55, 61], "max_detector_freq": [28, 29, 31, 32], "stop": [28, 29, 31, 32, 36, 55, 103, 141, 151, 182, 223, 246], "larger": [28, 53, 54, 55, 61, 63, 95, 96, 97, 106, 136, 137, 142, 143, 243], "x_start": 28, "occur": [28, 50, 53, 203, 204], "n_point": [28, 29, 31, 32], "1000": [28, 29, 31, 55, 56, 64, 88, 122, 134, 135, 151, 155, 170, 236, 237, 246], "purpos": [28, 50, 55, 61, 88, 128, 242], "valid": [28, 87, 97], "problem": [28, 61, 95, 96, 97, 106, 164, 223, 243], "yy": [28, 49, 53, 54, 55, 56], "zz": [28, 49, 53, 54, 55, 62], "presenc": 28, "construct": [28, 45, 46, 53, 54, 62, 122, 151, 237], "call": [28, 55, 58, 61, 62, 63, 79, 164, 167, 194, 195, 223, 236, 237, 239, 242, 245], "put": [28, 61, 122, 167, 236], "togeth": [28, 58, 61, 167, 197, 238], "finder": 28, "2dim": [28, 32], "solution_typ": [28, 29, 31, 32, 62], "prerequesit": 28, "violat": 28, "univers": 28, "achiev": [28, 56, 127, 128, 245], "ax": [28, 38, 49, 56, 57, 135, 161, 215], "visual": [28, 237, 238], "z_po": 28, "angoff": 28, "sought": 28, "smallest": [28, 236], "possibl": [28, 32, 62, 77, 78, 106, 127, 128, 164, 197, 237, 242, 243, 245], "veri": [28, 58, 80, 116, 126, 151, 182, 207, 218, 237, 243], "chang": [28, 29, 31, 32, 42, 53, 55, 58, 61, 63, 76, 78, 87, 95, 96, 97, 106, 161, 164, 223, 236, 238, 239, 242, 245, 246], "prevent": 28, "invalid": [28, 170], "rang": [28, 32, 38, 42, 53, 55, 56, 62, 63, 103, 116, 126, 127, 136, 151, 170, 177, 215, 236], "exactli": 28, "nome": 28, "impli": [28, 55, 218, 242, 246], "anglaunch": 28, "procedur": [28, 61, 63, 118, 237, 246], "optimis": 28, "equat": [28, 53, 57, 61, 62, 210], "get_n": 28, "solv": [28, 62, 209, 210], "beam": [28, 103, 110, 118, 131, 151, 197, 221, 225], "90": [28, 55, 56, 61, 63, 145, 236, 237, 238], "zone": [28, 61, 84, 128], "c0crit": 28, "critic": [28, 212, 223], "thcrit": 28, "receiv": [28, 29, 31, 32, 35, 45, 46, 53, 54, 62, 103, 164, 170, 223, 243], "oposit": [28, 32], "shadow": [28, 61], "process": [28, 35, 50, 55, 63, 64, 121, 122, 167, 217, 237, 242, 243, 245], "statement": [28, 245], "necessarili": [28, 53, 54, 62, 79, 164, 246], "nonetheless": 28, "todo": [28, 151, 246], "why": [28, 61, 217], "seem": [28, 61], "lie": [28, 55, 197], "ycheck": 28, "ycrit": 28, "give": [28, 35, 61, 62, 63, 64, 77, 78, 88, 122, 164, 237, 243], "idea": [28, 61, 164, 245, 247], "close": [28, 53, 54, 56, 61, 62, 143, 164], "could": [28, 53, 56, 61, 79, 122, 164, 210, 245], "grai": 28, "far": [28, 29, 31, 44, 53, 56, 61, 79, 83, 84, 85, 87, 151, 209, 243], "hypothat": 28, "straight": [28, 29, 30, 61, 81, 83, 84, 85, 87, 134, 151, 155, 197, 214, 221, 236, 238], "Such": [28, 243], "fermat": 28, "principl": [28, 56, 61, 62, 134, 237, 238, 245], "explic": 28, "geometr": [28, 118, 119, 151, 246], "optic": [28, 61, 62], "infirn": 28, "chdraw": 28, "label": [28, 38, 56, 57, 62, 77, 78, 135], "brewster": 28, "firn": [28, 83, 84, 85, 87, 236], "enter": 28, "boolean": [28, 32, 53, 54, 62, 78, 95, 96, 97, 106, 114, 143, 160, 168, 178, 189, 194, 206, 209, 231, 233], "leav": [28, 61], "neither": 28, "warn": [28, 29, 31, 32, 64, 79, 88, 94, 95, 96, 97, 103, 106, 108, 109, 212, 223, 225, 245], "draw": [28, 30, 44, 55, 61, 189, 243], "pyplot": [28, 57, 62, 63, 242], "dot": [28, 209], "red": 28, "figur": [28, 151, 170, 191], "x_refl": 28, "z_refl": [28, 32], "pulser_po": 28, "receiver_po": 28, "ipulssol": 28, "irxsol": 28, "subject": [28, 61], "specular": 28, "transmiss": [28, 46, 58, 62], "interfac": [28, 77, 78, 79, 88, 94, 103, 108, 109, 164, 170, 220, 240], "emiss": [28, 53, 61, 63, 103, 136, 151, 164, 242], "hit": [28, 62], "directli": [28, 35, 58, 61, 124, 194, 243, 246], "equival": [28, 38, 55, 231, 238, 242], "fashion": [28, 137], "raytr": 28, "x_refl_start": 28, "treat": [28, 87], "predefin": [28, 46], "emisss": 28, "would": [28, 55, 56, 61, 63, 128, 136, 231, 237, 242, 243, 245, 246], "ofoptim": 28, "exact": [28, 53, 164], "defint": 28, "i_solut": [28, 29, 31, 32, 62, 103], "weaken": [28, 29, 31, 32], "account": [28, 29, 31, 32, 53, 55, 58, 60, 61, 62, 63, 64, 79, 103, 122, 164, 208, 215, 218, 231, 246], "electricfield": [28, 29, 31, 32, 92, 97, 153, 179, 231, 242], "raytrac": [28, 29, 31, 32, 35, 45, 46, 53, 62, 108, 143, 243], "due": [28, 29, 31, 32, 42, 55, 61, 62, 63, 79, 116, 126, 164, 170, 191, 225, 236, 239, 243, 246], "higher": [28, 29, 31, 32, 56, 61, 128, 197, 231, 242, 245], "interv": [28, 29, 31, 32, 36, 53, 54, 61, 141, 144, 183, 197, 215, 225], "visibl": [28, 29, 31, 32, 116, 126], "finer": [28, 29, 31, 32, 38, 195, 243], "falloff": [28, 29, 31, 32], "3dim": [28, 29, 31, 32, 45, 46, 210], "pair": [28, 29, 31, 32, 35, 53, 55, 122, 145, 164, 179, 194, 195, 237, 243], "structur": [28, 29, 31, 32, 35, 63, 64, 67, 72, 76, 103, 167, 211, 248, 249], "ndim": [28, 29, 31, 32], "receive_vector": [28, 29, 31, 32, 53, 54, 62], "shall": [28, 29, 31, 83, 85, 87, 136, 138, 142, 161, 173, 175, 176, 179, 189, 194, 195, 247], "reset": [28, 29, 31, 32, 36, 85, 167], "previou": [28, 29, 31, 32, 55, 61, 63, 95, 96, 97, 106], "function_nam": [28, 29, 31, 32], "noth": [28, 29, 31, 32, 35, 87, 170, 208], "neseccari": [28, 29, 31, 32], "comma": [28, 29, 31, 32], "keyword": [28, 29, 31, 32, 61, 82, 83, 223], "sphere_s": [28, 29, 31, 32], "arai": [28, 29, 31, 32], "n_reflect": [28, 29, 31, 32, 38, 53, 62, 63], "ray_tracing_2d_kward": [28, 29, 31], "wrapper": [28, 30, 46, 61, 218, 242, 247], "arbitrari": [28, 30, 55, 62, 208], "initil": [28, 29, 31, 32], "describ": [28, 29, 31, 32, 42, 45, 46, 56, 57, 63, 78, 79, 120, 122, 127, 160, 209, 213, 218, 221, 236, 237, 238, 239, 243, 246], "log_nam": 28, "thing": [28, 55, 59, 61, 63, 134, 164, 247], "info": [28, 29, 31, 32, 64, 77, 78, 212, 223, 245], "linear": [28, 29, 31, 32, 62, 63, 81, 88, 116, 126, 151, 153, 160, 206, 221], "intial": 28, "_config": 28, "attenuate_ic": [28, 32, 62, 63], "focusing_limit": [28, 32, 62, 63], "focus": [28, 32, 53, 61, 62, 63, 191], "birefring": [28, 32, 45, 46, 62], "back": [28, 32, 56, 59, 61], "accident": [28, 223], "raytracing_result": [28, 32], "nx": [28, 45, 46, 58, 120], "ny": [28, 45, 46, 58], "nz": [28, 45, 46, 58], "link": [28, 32, 45, 46, 210], "springer": [28, 32, 45, 46, 210], "articl": [28, 32, 45, 46, 53, 210], "1140": [28, 32, 45, 46, 210], "epjc": [28, 32, 45, 46, 210], "s10052": [28, 32, 45, 46, 210], "023": [28, 32, 45, 46], "11238": [28, 32, 45, 46], "n1": [28, 219], "n2": [28, 219], "special": [28, 58, 59, 62, 223, 239], "diagon": 28, "dielectr": [28, 60], "tensor": 28, "ndarrai": [28, 32, 118, 121, 135, 137, 165], "faster": [28, 55, 61, 62, 124, 170], "coordinatesystem": [28, 93, 101, 105, 151, 231], "cstrafo": [28, 93, 101, 105, 151, 231], "transform_from_ground_to_onski": 28, "px": 28, "pz": 28, "samp_rat": 28, "bire_model": [28, 32, 45, 46], "southpole_a": [28, 45, 58], "explain": [28, 32, 53, 54, 55, 59, 60, 63, 242], "paper": [28, 32, 55, 61, 62, 120, 122, 210, 213, 236], "birefringence_model": [28, 32, 45, 46, 58], "model_descript": [28, 32, 45, 46], "radial": [28, 32, 61, 238], "alter": [28, 248, 249], "extract": [28, 62, 77, 78, 81, 114, 127, 167], "eigenvector": 28, "increment": 28, "delai": [28, 53, 79, 81, 83, 85, 87, 88, 110, 118, 119, 128, 132, 164, 167, 197, 208, 219, 221, 225, 231, 239, 243, 246], "path_properti": 28, "granular": 28, "nirefring": 28, "nominal_refractive_index": 28, "nomin": [28, 127, 164], "densiti": [28, 37, 38, 40, 42, 45, 46, 61, 63, 218], "were": [28, 38, 53, 54, 55, 60, 94, 99, 108, 109, 164, 174, 237, 239], "refractive_index_x": 28, "refractive_index_i": 28, "refractive_index_z": 28, "first_refractive_index": 28, "second_refractive_index": 28, "first_polarization_vector": 28, "second_polarization_vector": 28, "first_time_delai": 28, "second_time_delai": 28, "reflection_angl": [28, 29, 31, 32], "infinitesim": [28, 32], "1cm": [28, 32, 236], "gain": [28, 32, 56, 63, 72, 76, 81, 88, 113, 116, 120, 126, 127, 134, 153, 183, 214], "output_dict": [28, 122], "load": [29, 31, 56, 61, 63, 72, 76, 77, 78, 81, 120, 122, 125, 164, 167, 170, 222, 237], "yaml": [29, 31, 32, 35, 38, 53, 54, 58, 59, 62, 63, 64], "th": 29, "vari": 29, "support": [30, 42, 58, 63, 109, 134, 153, 158, 237], "direct_rai": 30, "dummi": [30, 35], "ignor": [30, 55, 56, 61, 62, 64, 87, 134, 137, 144, 164, 214], "prodid": 31, "icemodel": [32, 37, 45, 46, 191], "speedup": [32, 35, 63], "delta_c_cut": [32, 61, 63], "40": [32, 42, 56, 63, 157], "degre": [32, 55, 58, 61, 63, 79, 83, 85, 87, 103, 142, 165, 228, 232], "iter": [32, 62, 99, 109, 118, 124, 151, 160, 170, 189, 209, 242], "max_traj_length": 32, "10000": [32, 121, 167, 217], "iter_steps_channel": 32, "auto_step_s": 32, "iter_steps_zenith": 32, "05": [32, 59, 81, 124, 137, 151, 217], "005": [32, 151], "loop": [32, 55, 56, 59, 63, 99, 142, 170, 178, 191, 209, 223, 225, 228, 245], "prepar": [32, 167], "shower_axi": [32, 35, 151], "sphere": 32, "big": [32, 61, 242], "channel": [32, 35, 38, 53, 54, 55, 56, 61, 62, 63, 72, 73, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 92, 95, 97, 103, 106, 108, 109, 110, 114, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 152, 153, 154, 160, 167, 170, 179, 188, 189, 191, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 225, 228, 230, 231, 237, 238, 239, 243, 245], "step_zenith": 32, "steps_siz": 32, "lenght": 32, "_sphere_s": 32, "auto_step": 32, "step_siz": [32, 110, 225], "won": [32, 64], "trajectori": [32, 55, 58, 61, 62, 221], "maxmim": 32, "abort": 32, "bigger": [32, 137], "search": [32, 77, 78, 121, 151, 188, 189, 194, 195, 223, 243, 249], "xtol": 32, "7453292519943296e": 32, "ztol": 32, "001": [32, 44, 124, 137], "launch_v": 32, "spec": [32, 218], "s_rate": 32, "ice_model": [32, 35, 45, 58, 62, 63], "southpole_2015": [32, 37, 45, 58, 62, 63], "e_field": 32, "componentnt": 32, "moment": [32, 44, 83, 85, 87, 164], "further": [32, 56, 81, 120, 121, 242], "improv": [32, 122, 160, 243], "candid": [32, 35, 108], "ref_index_model": [32, 58, 62], "1dim": 32, "freq": [32, 81, 88, 128, 135, 137, 197, 212, 218, 236], "n_bottom_reflect": 32, "output_writer_hdf5": 33, "outputwriterhdf5": [33, 34], "add_event_group": [33, 34], "write_empty_output_fil": [33, 34], "write_output_fil": [33, 34], "calculate_veff": [33, 34], "merge_config": [33, 35], "calculate_sim_efield": [33, 35], "calculate_sim_efield_for_emitt": [33, 35], "apply_det_response_sim": [33, 35], "apply_det_respons": [33, 35], "build_dummy_ev": [33, 35], "build_nuradioevents_from_hdf5": [33, 35], "calculate_polarization_vector": [33, 35], "increase_sign": [33, 35], "calculate_particle_weight": [33, 35], "group_into_ev": [33, 35], "read_input_hdf5": [33, 35], "remove_all_trac": [33, 35], "get_vrm": [33, 35], "get_sampling_r": [33, 35, 92, 95, 96, 97, 106], "get_bandwidth": [33, 35], "integrated_channel_respons": [33, 35], "time_logg": [33, 35], "pretty_time_delta": [33, 36], "timelogg": [33, 36], "reset_tim": [33, 36], "start_tim": [33, 36, 95, 96, 97, 106, 167], "stop_tim": [33, 36], "show_tim": [33, 36], "output_filenam": [34, 47, 51, 52, 59, 237, 242], "station_id": [34, 35, 53, 54, 56, 63, 77, 78, 79, 83, 84, 85, 87, 88, 94, 98, 99, 105, 107, 108, 109, 116, 126, 134, 140, 172, 173, 175, 182, 188, 189, 194, 195, 225, 228, 237, 242], "number_of_ray_tracing_solut": 34, "particle_mod": [34, 35], "event_buff": 34, "group": [34, 35, 36, 38, 53, 54, 55, 79, 81, 83, 85, 87, 88, 96, 103, 106, 109, 164, 167, 239, 243], "fin_attr": [34, 35], "callabl": [34, 170, 223], "veff": [34, 37, 43, 57, 64], "recurs": [35, 189], "channel_id": [35, 38, 56, 63, 77, 78, 79, 83, 84, 85, 87, 88, 94, 96, 97, 106, 108, 109, 110, 116, 124, 126, 128, 134, 137, 138, 143, 153, 160, 172, 194, 195, 198, 208, 237], "det": [35, 56, 63, 82, 88, 113, 114, 116, 126, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 174, 177, 179, 186, 188, 189, 191, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 237], "min_efield_amplitud": [35, 63], "distance_cut": [35, 63], "identifi": [35, 46, 77, 78, 79, 83, 84, 85, 87, 96, 97, 99, 106, 108, 121, 160, 167, 236], "simefield": 35, "antenna_pattern_provid": [35, 210, 231], "belwo": 35, "sim_stat": [35, 92, 109, 151, 172, 177], "detector_simulation_filter_amp": 35, "evt": [35, 56, 63, 113, 114, 116, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 167, 170, 174, 177, 179, 186, 188, 191, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211], "event_tim": [35, 99], "detector_simulation_part1": 35, "readout": [35, 95, 96, 97, 106, 110, 208, 246], "analog": [35, 63, 103, 127, 128, 238, 239, 242], "chain": [35, 63, 76, 77, 78, 79, 88, 103], "simchannel": [35, 92, 106, 108, 154, 160, 179], "simstat": [35, 92, 94, 108, 109, 154, 179], "filter": [35, 53, 56, 60, 63, 76, 86, 95, 96, 97, 106, 110, 116, 122, 125, 126, 127, 128, 134, 135, 141, 143, 144, 146, 155, 160, 164, 165, 170, 191, 194, 195, 202, 206, 209, 212, 214, 217, 223, 225, 230, 231, 242, 245, 246], "amplifi": [35, 56, 63, 72, 76, 79, 80, 83, 85, 87, 116, 120, 126, 143, 153, 237, 246], "regist": [35, 99, 130, 237], "flexibl": [35, 55, 242], "add_nois": 35, "vrms_per_channel": 35, "noiseless_channel": 35, "detector_simulation_part2": 35, "nois": [35, 53, 54, 60, 63, 79, 83, 85, 87, 103, 110, 114, 116, 120, 121, 126, 127, 136, 137, 140, 143, 177, 186, 188, 189, 197, 212, 217, 218, 230], "rm": [35, 53, 63, 83, 85, 87, 103, 114, 127, 135, 197, 217, 225], "s21": [35, 77, 78, 239], "bandwidth": [35, 53, 54, 92, 103, 134, 135, 137, 217], "amplif": [35, 62, 63, 103, 127, 191], "idx": [35, 151], "event_group": 35, "perform": [35, 43, 55, 56, 60, 61, 62, 63, 64, 78, 81, 95, 96, 97, 106, 124, 127, 128, 137, 170, 195, 197, 203, 204, 211, 218, 221, 225, 231, 236, 243, 245, 246, 247], "cfg": 35, "concept": [35, 239, 242], "surviv": 35, "propabl": 35, "weight": [35, 38, 42, 49, 53, 54, 55, 63, 79, 88, 92, 103, 151, 165, 172], "calul": 35, "eventgroup": 35, "assign": [35, 63, 224, 247], "split_event_time_diff": 35, "zerosign": [35, 63], "fin_stat": 35, "remov": [35, 38, 46, 60, 61, 68, 79, 88, 94, 108, 109, 122, 124, 128, 130, 137, 170, 189, 223, 239, 246], "inputfilenam": [35, 63, 173, 176], "outputfilenam": [35, 63, 81], "detectorfil": [35, 63], "det_kwarg": 35, "outputfilenamenuradioreco": [35, 63], "evt_tim": 35, "datetim": [35, 77, 78, 79, 83, 85, 87, 94, 108, 109, 164, 183], "default_detector_st": [35, 63], "default_detector_channel": 35, "file_overwrit": 35, "write_detector": 35, "event_list": 35, "log_level_propag": 35, "30": [35, 36, 61, 62, 103, 127], "trigger_channel": [35, 127], "altern": [35, 124, 209, 210, 225, 241], "json": [35, 38, 53, 54, 56, 59, 63, 64, 79, 82, 83, 85, 87, 125, 127, 167, 238], "sim": [35, 63, 64, 99, 103, 143, 154, 172, 174, 242, 246], "overwrit": [35, 45, 46, 79, 170, 245, 247], "nur": [35, 53, 54, 63, 64, 179, 189, 237, 241], "custom": [35, 63, 64, 70, 103, 111, 130, 223, 242, 245], "durat": [36, 97, 225], "xdxhxmx": 36, "dai": 36, "__pretty_time_delta": 36, "3665": 36, "0d1h1m5": 36, "7200": 36, "0d2h0m0": 36, "120": [36, 103, 140, 228], "0d0h2m0": 36, "0d0h0m30": 36, "update_interv": 36, "categori": 36, "timer": 36, "n_event_group": 36, "i_event_group": 36, "progress": 36, "category1": 36, "category2": 36, "record": [36, 60, 79, 95, 96, 97, 106, 164, 167, 186, 188, 223, 242, 245], "rais": [36, 79, 99, 122, 124, 134, 154, 170, 179, 208, 223], "keyerror": 36, "runtimeerror": 36, "remove_duplicate_trigg": [37, 38], "fc_limit": [37, 38], "get_veff_water_equival": [37, 38], "get_veff_output": [37, 38], "get_veff_aeff_singl": [37, 38], "get_veff_aeff_single_wrapp": [37, 38], "get_veff_aeff": [37, 38], "get_veff_aeff_arrai": [37, 38], "get_index": [37, 38], "fit_gl1": [37, 39], "get_temperatur": [37, 39], "get_attenuation_length": [37, 39, 58], "cross_sect": [37, 42], "param": [37, 40, 83], "csm": [37, 40, 42, 63], "get_nu_cross_sect": [37, 40], "get_interaction_length": [37, 40], "dump_hdf5": 37, "dump": [37, 41, 56, 79, 81, 237], "earth_attenu": 37, "get_weight": [37, 42], "get_simple_weight": [37, 42], "get_core_mantle_crust_weight": [37, 42], "prem": [37, 42, 63], "earth_radiu": [37, 42], "radii": [37, 42], "slant_depth": [37, 42], "coremantlecrustmodel": [37, 42], "get_limit_from_aeff": [37, 43], "get_limit_flux": [37, 43], "get_limit_e1_flux": [37, 43], "get_limit_e2_flux": [37, 43], "get_number_of_events_for_flux": [37, 43], "get_exposur": [37, 43], "get_integrated_exposur": [37, 43], "get_fluence_limit": [37, 43], "get_neutrino_inelast": [37, 44], "get_ccnc": [37, 44], "random_tau_branch": [37, 44], "inelasticity_tau_decai": [37, 44], "rejection_sampl": [37, 44], "southpole_simpl": [37, 45, 58, 63], "add_reflective_bottom": [37, 45, 46, 58], "get_average_index_of_refract": [37, 45, 46, 58], "get_gradient_of_index_of_refract": [37, 45, 46, 58], "get_ice_model_radiopropa": [37, 45, 46, 58], "get_index_of_refract": [37, 45, 46, 58, 243], "set_ice_model_radiopropa": [37, 45, 46], "arasim_southpol": [37, 45, 58, 63], "ara_2022": [37, 45], "birefringence_medium": [37, 45], "get_birefringence_index_of_refract": [37, 45, 46], "mooresbay_simpl": [37, 45, 58, 63], "mooresbay_simple_2": [37, 45, 58], "greenland_simpl": [37, 45, 58, 62, 63, 243], "greenland_firn": [37, 45, 58], "greenland_perturb": [37, 45], "uniform_ic": [37, 45], "get_ice_model": [37, 45, 58, 62, 243], "medium_bas": [37, 58], "icemodelsimpl": [37, 45, 46], "icemodelbirefring": [37, 45, 46], "radiopropaicewrapp": [37, 45, 46], "get_modul": [37, 46, 58], "add_modul": [37, 46, 58], "remove_modul": [37, 46, 58], "replace_modul": [37, 46, 58], "get_scalar_field": [37, 46, 58], "scalarfieldbuild": [37, 46], "getvalu": [37, 46], "getgradi": [37, 46], "merge_hdf5": [37, 59], "merge2": [37, 47], "muon_flux": 37, "muonflux": [37, 48], "get_mu_flux": [37, 48], "get_interp_angle_mu_flux": [37, 48], "get_int_angle_mu_flux_buff": [37, 48], "get_e_grid": [37, 48], "plot_vertex_distribut": [37, 49], "runner": [37, 70, 72, 76, 81, 110], "nuradiomcrunn": [37, 50], "get_outputfilenam": [37, 50], "runner_exampl": 37, "task": [37, 50, 51, 245], "split_hdf5": 37, "split_hdf5_input_fil": [37, 52], "gid": 38, "duplic": 38, "overestim": 38, "68": 38, "confid": 38, "belt": 38, "feldman": 38, "cousin": 38, "57": [38, 61, 236], "3873": 38, "low_limit": 38, "upper_limit": 38, "density_medium": 38, "723464435717068e": [38, 40], "39": [38, 40, 42], "density_wat": 38, "241509744511524e": 38, "dentity_medium": 38, "equivalen": 38, "all_ev": 38, "trigger_nam": [38, 49, 53, 54, 56, 63, 94, 99, 108, 109, 114, 197, 202, 203, 204, 205, 206, 207, 208], "trigger_names_dict": 38, "trigger_combin": 38, "veff_aeff": 38, "bounds_theta": 38, "multipli": [38, 61, 88, 122, 218, 231, 247], "4pi": 38, "map": [38, 103, 136, 164, 165, 170, 188, 189, 191, 226], "again": [38, 61, 64, 225], "individu": [38, 53, 54, 61, 72, 73, 88, 136, 151, 154, 172, 217, 237, 239, 245], "OR": [38, 170], "effici": [38, 43, 55, 225], "paramater": 38, "snr": [38, 92, 103, 118, 121, 140, 243], "vmax": 38, "vrm": [38, 53, 54, 56, 63, 92, 103, 127, 128, 197, 203, 225], "curv": [38, 120], "shortest": 38, "caus": [38, 61, 110, 170, 197, 225, 246], "specifii": [38, 77, 78], "aeff_surface_muon": 38, "restrict": 38, "wrt": [38, 79, 83, 85, 87], "co": [38, 62, 120, 211], "item": [38, 54, 55, 164], "care": [38, 55, 58, 88, 217], "n_core": [38, 173, 176], "oversampling_theta": 38, "conain": 38, "oversampl": 38, "equal": [38, 55, 61, 62, 63, 110, 134, 137, 164, 197, 218, 231, 246], "multi": [38, 66, 225], "slice": [38, 151, 225], "triggernam": 38, "uncertainti": [38, 55, 58, 153, 160, 242, 243], "get_veff": [38, 57], "n_energi": 38, "n_zenith_bin": 38, "n_triggernam": 38, "uniqu": [38, 53, 54, 55, 56, 77, 78, 79, 83, 85, 87, 97, 99, 106, 110, 114, 164, 202, 203, 204, 205, 206, 207, 236, 238], "edg": [38, 151, 230], "all_trigg": 38, "uenergi": 38, "uzenith_bin": 38, "utrigger_nam": 38, "zenith_weight": 38, "get_veff_arrai": 38, "fig": [38, 39, 49, 56, 57], "plt": [38, 56, 57, 62, 63, 215, 242], "subplot": [38, 56], "tname": 38, "vefferror": 38, "errorbar": 38, "pi": [38, 55, 57], "yerr": 38, "fmt": 38, "o": [38, 59, 63], "legend": [38, 56, 62], "semilogi": [38, 56], "semilogx": 38, "tight_layout": [38, 56], "declin": 38, "band": [38, 48, 60, 122, 124, 134, 151, 164, 170, 177, 225], "lpda_2of4_100hz": 38, "iz": 38, "9": [38, 81, 103, 127, 164, 198, 217, 236], "0f": 38, "export_format": 38, "getveff": 38, "mhz": [39, 56, 58, 60, 62, 63, 88, 124, 134, 135, 146, 155, 164, 167, 209, 225, 230, 236], "3189": 39, "2015jog15j057": 39, "temperatur": [39, 53, 54, 63, 76, 78, 83, 85, 87, 103, 110, 126, 136, 206, 218], "celsiu": 39, "variou": [39, 63, 88, 103, 140], "gl1": [39, 58, 62, 63], "1409": 39, "5413": 39, "gl2": 39, "2021": [39, 236], "bogorodski": 39, "2201": 39, "07846": 39, "macgregor": 39, "mb1": [39, 58, 63], "2015jog14j214": 39, "phd": [39, 213], "thesi": [39, 213], "persichilli": 39, "inttyp": [40, 43], "ctw": [40, 42, 43, 63], "amanda": 40, "cooper": [40, 63], "sarkar": [40, 63], "philipp": 40, "mertsch": [40, 63], "subir": 40, "jhep": [40, 63], "08": [40, 58, 63], "042": [40, 63], "cross_section_typ": [40, 42, 63], "momenta": 40, "ghandi": [40, 42, 63], "thorn": [40, 63], "83": [40, 55, 63], "113009": [40, 63], "d58": [40, 63], "093009": [40, 63], "1998": [40, 63], "enu": 40, "917": [40, 58], "cm": [40, 42, 55, 103, 151], "l_int": 40, "theta_nu": 42, "pnu": 42, "vertex_posit": 42, "phi_nu": 42, "absorpt": 42, "momentum": 42, "core_mantle_crust_simpl": 42, "core_mantle_crust": [42, 63], "fuction": 42, "shelfmc": [42, 44], "arasim": [42, 58, 81, 217], "preliminari": 42, "dziewonski": 42, "anderson": 42, "planetari": 42, "interior": 42, "297": 42, "356": 42, "1981": 42, "1016": [42, 44], "0031": 42, "9201": 42, "81": [42, 55, 136], "90046": 42, "boundari": [42, 45, 46, 58, 83, 85, 87, 103, 134, 214, 231], "divid": [42, 56, 60, 61, 88, 116, 126, 164, 170, 218, 247], "scalar": [42, 46, 58, 209], "denot": [42, 55, 58], "6371000": 42, "1221500": 42, "3480000": 42, "5701000": 42, "5771000": 42, "5971000": 42, "6151000": 42, "6346600": 42, "6356000": 42, "6368000": 42, "lambda": [42, 170], "810037825908342e": 42, "6227925335729963e": 42, "366339939401755e": 42, "array_lik": [42, 122], "endpoint": 42, "500": [42, 56, 121, 209], "column": 42, "chord": [42, 55], "materi": 42, "thick": 42, "mass": [42, 61], "third": [42, 59, 238], "mantl": [42, 63], "crust": [42, 63], "6378140": 42, "3464101": 42, "6151377545": 42, "6338140": 42, "738113642316134e": 42, "122113313133918e": 42, "aeff": 43, "livetim": [43, 57], "signaleff": 43, "energybinsperdecad": 43, "upperlimonev": 43, "decad": 43, "neyman": 43, "ul": 43, "background": [43, 55, 136], "veff_sr": 43, "nucrsscn": 43, "expect": [43, 55, 64, 66, 103, 127, 143, 160, 194, 231, 243], "assumpt": [43, 55], "log10": [43, 63, 136, 215], "equidist": 43, "loge": 43, "field_of_view": 43, "exposur": 43, "exp_func": 43, "e_low": 43, "e_high": 43, "de": [43, 77, 78, 134, 216], "int_exp": 43, "fluenc": [43, 103, 160, 209], "scatter": 44, "port": 44, "inelastici": 44, "cpc": 44, "2013": 44, "04": 44, "tau_energi": 44, "1607": 44, "00193": 44, "tau_mu": [44, 55], "tau_": 44, "tau_had": [44, 55, 103], "reject": [44, 61, 170], "initiaion": [45, 46], "condit": [45, 46, 53, 54, 56, 58, 61, 83, 85, 87, 110, 114, 151, 179, 197, 202, 203, 204, 205, 207, 242], "latter": [45, 46, 77, 78, 137, 218, 239], "add_reflective_lay": [45, 46], "z_shift": [45, 46, 58], "almost": [45, 46, 61], "never": [45, 46, 237], "reli": [45, 46, 167], "exp": [45, 46, 58, 62], "z_air_boundari": [45, 46], "nuradio": [45, 46, 62, 67, 81, 135, 215, 216, 223, 248], "glacier": [45, 46], "z_bottom": [45, 46, 58], "dimensionless": [45, 46, 217], "bulk": [45, 46], "snow": [45, 46, 79, 83, 85, 87, 94, 108, 109, 238], "od": [45, 46], "refl_z": [45, 46, 58], "refl_coef": [45, 46, 58], "refl_phase_shift": [45, 46, 58], "angukar": [45, 46], "shoft": [45, 46], "position1": [45, 46, 58], "position2": [45, 46, 58], "mother": [45, 46], "n_averag": [45, 46], "gradient": [45, 46, 61], "n_nabla": [45, 46], "hold": [45, 46, 58, 125, 218, 242, 246], "scalarfield": [45, 46], "moduld": [45, 46], "_compute_default_ice_model_radiopropa": [45, 46], "seper": [45, 46], "posibl": [45, 46], "adjust": [45, 46, 58, 59, 116, 126, 127, 208, 242, 245, 246], "lose": [45, 46], "ice_model_radiopropa": [45, 46], "ice_model_radioprop": [45, 46], "bir_model": [45, 46], "evalu": [45, 46, 48, 120, 122, 136, 206, 209, 215, 221], "z_firn": 45, "_firn": 45, "inheret": 46, "reimplement": 46, "everytim": 46, "inherit": [46, 58, 63, 242, 245], "indiec": 46, "differnt": 46, "ice_model_nuradio": [46, 58], "scalar_field": [46, 58], "smooth": [46, 61], "handel": 46, "discontinu": [46, 58, 62], "daugther": 46, "new_modul": [46, 58], "stead": 46, "much": [46, 61, 97, 243], "slower": [46, 61], "vector3d": 46, "altitud": [48, 63, 84, 103, 151], "3200": 48, "interaction_model": 48, "sibyll23c": 48, "primary_model": 48, "crflux": 48, "globalsplinefitbeta": 48, "total_mu": 48, "cr": [48, 103, 118, 121, 125, 142], "theta_min": 48, "rad": [48, 55, 88, 219], "theta_max": 48, "n_step": 48, "e_grid": 48, "grid": [48, 56, 59, 151, 176, 194, 243], "steradian": [48, 232], "get_int_angle_mu_flux": 48, "riemannian": 48, "cach": [48, 134, 135], "meter": [48, 58, 103, 151, 232], "8726646259971648": [48, 215], "theta_deg": 48, "xx": [49, 53, 54, 55, 56, 62], "beauti": 49, "n_worker": 50, "output_path": [50, 194], "max_runtim": 50, "691200": 50, "n_triggers_max": 50, "max_crash": 50, "node": [50, 59], "submiss": 50, "soon": [50, 239], "job": [50, 55, 164], "finish": [50, 160], "kept": [50, 121, 138, 144, 225], "busi": 50, "acquir": 50, "crash": [50, 59, 170], "q": [51, 59, 97, 231], "isim": 51, "nu_energi": [51, 92, 103], "nu_energy_max": 51, "detectordescript": [51, 63], "input_filenam": 52, "number_of_events_per_fil": 52, "subfil": 52, "outlin": [53, 54, 55, 63], "v3": 53, "v2": [53, 130], "hdf5_file": [53, 54], "attr": [53, 54, 56], "ran": [53, 54, 236], "parallel": [53, 54, 55, 59, 61, 83, 85, 87, 145, 219, 238], "simultan": [53, 54, 56, 168], "interfer": [53, 54], "event_group_id": [53, 54], "shower_id": [53, 54, 92, 93, 97, 99, 103, 105, 106, 108], "event_id": [53, 54, 55, 87, 99, 167, 168, 170, 183], "thought": [53, 54, 61], "top": [53, 54, 58, 242], "station_": [53, 54], "slightli": [53, 54, 55, 61, 124, 232], "nuradiomc_evtgen_vers": [53, 54, 55, 92, 103], "nuradiomc_evtgen_version_hash": [53, 54, 55, 92, 103], "nuradiomc_vers": [53, 54, 92, 103], "nuradiomc_version_hash": [53, 54, 92, 103], "hash": [53, 81, 103, 234], "those": [53, 54, 61, 64, 77, 78, 87, 94, 99, 108, 109, 128, 151, 188, 223, 237, 239, 242], "did": [53, 54, 103, 223, 239], "fiducial_xmax": [53, 92, 103], "fiducial_xmin": [53, 92, 103], "fiducial_ymax": [53, 92, 103], "fiducial_ymin": [53, 92, 103], "fiducial_zmax": [53, 54, 55, 59, 92, 103], "fiducial_zmin": [53, 54, 55, 59, 92, 103], "fiducial_rmin": [53, 54, 55, 59, 92, 103], "qubic": 53, "cylindr": [53, 64, 103, 194, 195, 243], "tnois": [53, 54, 92, 103], "explicit": [53, 54], "n_sampl": [53, 54, 61, 92, 95, 96, 97, 103, 106, 137, 151, 160, 217, 225, 243], "style": [53, 54], "resolut": [53, 54, 136, 153, 224, 246], "thermal": [53, 183, 225], "floor": [53, 128], "v_": 53, "k_": 53, "wiki": [53, 221], "filt": [53, 83, 85, 87, 225], "trapz": 53, "ff": [53, 72, 81], "antenna_posit": [53, 58], "n_shower": [53, 54], "n_trigger": [53, 54], "row": 53, "belong": [53, 63, 77, 78, 96, 106, 246], "len": [53, 61, 97, 151, 231], "vertex_tim": [53, 54, 55, 92, 103], "cascad": [53, 55, 61], "multiple_trigg": [53, 54], "fire": [53, 62, 94, 108, 109], "trigger_tim": [53, 110, 170, 197, 225, 246], "earliest": [53, 94, 108, 109, 197, 208, 246], "n_interact": [53, 54, 55, 92, 103], "hierarch": [53, 103, 104, 242], "counter": [53, 103, 219], "shower_realization_arz": [53, 54], "1231": 53, "m_event": 53, "m_shower": 53, "captur": 53, "ambigu": [53, 174, 242], "analys": [53, 122], "retriev": [53, 54, 55, 58, 122, 167, 245], "event_group_id_per_show": [53, 54], "event_id_per_show": [53, 54], "max_amp_shower_and_rai": [53, 54], "n_channel": [53, 54, 225], "n_ray_tracing_solut": [53, 54], "maximum_amplitud": [53, 54, 92, 103], "maximum_amplitudes_envelop": [53, 54, 56], "hilbert": [53, 54, 103, 145, 191, 202], "envelop": [53, 54, 103, 145, 191, 202, 230], "fulfil": [53, 54, 56, 61, 110, 189, 197, 203, 225], "translat": [53, 54, 58, 61, 62, 209], "multiple_triggers_per_ev": [53, 54], "rotat": [53, 58, 61, 62, 79, 81, 83, 84, 85, 87, 125, 165, 236, 238, 243, 246], "ray_tracing_c0": [53, 54], "ray_tracing_c1": [53, 54], "ray_tracing_reflect": [53, 54], "ray_tracing_reflection_cas": [53, 54], "ray_tracing_solution_typ": [53, 54], "focusing_factor": [53, 54], "time_shower_and_rai": [53, 54], "daq": 53, "cabl": [53, 72, 78, 79, 83, 85, 87, 116, 120, 126, 132, 164, 237, 239, 246], "travel_dist": [53, 54], "travel_tim": [53, 54, 62], "satisfi": [53, 54, 202, 203, 204, 205, 207, 242], "triggered_per_ev": [53, 54], "trigger_times_per_ev": 53, "outdat": [54, 81], "click": 54, "juli": [55, 63], "realist": 55, "geometri": [55, 58, 61, 62, 83, 85, 87, 93, 101, 103, 105, 151, 186, 236, 246], "constitut": [55, 63], "input_fil": [55, 173, 174, 175, 176, 182, 183], "1e5": 55, "1e18": [55, 59, 64], "2e18": 55, "few": [55, 61, 64, 136, 164, 237, 238, 246], "mixtur": 55, "flavour": [55, 103, 242], "region": [55, 61, 103, 124, 151, 243, 246], "isotrop": [55, 215], "compar": [55, 61, 114, 116, 122, 126, 128], "add_tau_second_bang": 55, "tabulated_tau": 55, "four": [55, 56, 63, 134, 245], "remain": [55, 62, 63, 168], "lot": [55, 56, 61, 63, 64, 87], "ten": [55, 60], "kilometr": 55, "proportion": 55, "ratio": [55, 56, 103, 121, 128, 135, 160, 219, 230], "cosin": 55, "keep": [55, 59, 61, 62, 79, 130, 151, 164, 218, 225, 237, 238, 239, 247], "mind": [55, 61, 62, 151, 218, 239], "project": [55, 61, 215], "confirm": 55, "unforc": 55, "antineutrino": 55, "possess": [55, 61, 128], "stochast": [55, 61], "techniqu": 55, "easili": [55, 242, 245], "advis": [55, 243], "poissonian": 55, "let": [55, 61, 62, 63, 177], "sai": [55, 61], "goe": [55, 63, 121, 144, 246], "n_": [55, 58, 62], "unknown": [55, 164, 239], "priori": 55, "good": [55, 59, 61, 118, 121, 164, 246, 247], "thumb": 55, "reduc": [55, 56, 61, 206, 230, 243], "get_gzk_1": 55, "wish": [55, 61, 245], "law": [55, 219], "realli": [55, 61, 63, 164], "convolv": [55, 56, 116, 126, 134, 149, 153, 214, 217], "whatev": 55, "fanci": [55, 61], "bang": 55, "nativ": 55, "csda": 55, "photonuclear": 55, "tabul": [55, 151, 221], "although": [55, 61, 230, 239], "actual": [55, 61, 83, 85, 87, 134, 138, 164, 170, 194, 195, 236, 245], "jakob": 55, "santen": 55, "gen2": 55, "undergo": 55, "previous": [55, 85, 130], "tudo": 55, "astroparticlephys": 55, "blob": 55, "md": 55, "feed": [55, 238], "wai": [55, 61, 87, 164, 237, 242, 243, 245, 246], "collect": [55, 77, 78, 186, 239], "content": [55, 60, 79, 103, 142, 197, 228], "radian": [55, 225, 232], "identif": [55, 77, 78, 170], "80": [55, 56, 60, 61, 146], "electronvolt": [55, 61], "tau_em": [55, 103], "muonic": 55, "recalcul": 55, "encourag": 55, "expand": [55, 191], "complementari": [55, 242], "photon": 55, "11": [55, 56, 63, 103, 136, 225, 236], "positron": [55, 103, 232], "nu_e": 55, "bar": [55, 215], "_e": 55, "13": [55, 103, 110, 206, 236], "antimuon": 55, "nu_": 55, "antitau": 55, "bremsstrahlung": 55, "gamma_": 55, "brem": 55, "ionis": 55, "blundl": 55, "nuclear": 55, "85": 55, "bundl": 55, "86": 55, "87": 55, "88": [55, 58], "weak": 55, "compton": 55, "pion": [55, 61], "211": 55, "kaon": 55, "k": [55, 61, 126], "311": 55, "321": 55, "2212": 55, "antiproton": 55, "awar": [55, 174], "fewer": [55, 63], "disk": [55, 242], "height": [55, 61, 221], "undergon": 55, "curvatur": 55, "detect": [55, 122, 154, 242], "explor": [55, 67, 248], "statist": [55, 153, 189], "pitfal": 55, "overlap": [55, 131, 197, 246], "unlik": [55, 61], "sometim": [55, 164, 237], "instanc": [55, 61, 62, 63, 83, 99, 116, 126, 134, 224, 247], "proposal_funct": 55, "n_tau": 55, "energy_lepton": 55, "tau_cod": 55, "pev": [55, 63], "member": [55, 170], "li": [55, 61], "upon": 55, "dure": [55, 118, 167, 191, 246], "interest": [55, 61, 164, 223, 239, 245], "similar": [55, 56, 61, 63, 64, 114, 237, 242, 243, 246], "discoveri": 56, "simplifi": [56, 59], "orient": [56, 63, 64, 79, 81, 83, 84, 85, 87, 103, 151, 236, 238], "lpda": [56, 63, 64, 79, 81, 83, 85, 87, 125, 236, 238, 246], "dipol": [56, 63, 79, 81, 83, 85, 87, 120, 164, 167, 236, 238], "orthogon": [56, 210, 238], "2m": [56, 64, 236, 243], "5m": [56, 64, 236], "cover": [56, 63, 136, 170, 172, 197], "50m": 56, "adc_n_sampl": [56, 63, 237], "512": [56, 165, 225], "adc_sampling_frequ": [56, 63, 128, 237, 238], "ant_orientation_phi": [56, 63, 237, 238], "ant_orientation_theta": [56, 63, 237, 238], "ant_position_x": [56, 63, 237], "ant_position_i": [56, 63, 237], "ant_position_z": [56, 63, 237], "ant_rotation_phi": [56, 63, 237, 238], "ant_rotation_theta": [56, 63, 237, 238], "ant_typ": [56, 63, 78, 79, 237], "createlpda_100mhz": [56, 63], "commission_tim": [56, 63, 78], "tinyd": [56, 63], "01t00": [56, 63], "00": [56, 63, 237], "decommission_tim": [56, 63, 78], "2038": [56, 63], "270": 56, "bicone_v8": [56, 63], "04t00": [56, 63], "pos_altitud": [56, 63, 237], "2800": 56, "pos_sit": [56, 63, 237], "nearest": 56, "neighbor": [56, 197], "next": [56, 61, 88, 109, 130, 164, 245], "strongli": [56, 164], "linearli": [56, 81], "domin": [56, 103, 143], "justifi": [56, 61], "eight": 56, "central": [56, 81, 236], "illustr": [56, 58, 61, 238], "copi": [56, 63, 64, 164, 237], "single_posit": 56, "detector_singl": 56, "detector_ful": 56, "insert": [56, 78, 111, 159, 161, 164, 227, 231], "250": [56, 110, 206], "750": 56, "1250": 56, "1500": 56, "horizontal_spacing_detector": 56, "fout": [56, 59], "surround": 56, "bandpass": [56, 97, 125, 134, 137, 143, 146, 155, 195, 206, 209, 213, 214], "mimic": [56, 61, 225], "1xvrm": 56, "rough": [56, 195], "preselect": 56, "criterion": 56, "detector_simul": 56, "efieldtovoltageconverterperchannel": 56, "downsampl": [56, 63, 128], "channelresampl": [56, 63, 111, 128, 186], "sampling_r": [56, 61, 63, 78, 79, 95, 96, 97, 106, 124, 125, 137, 139, 156, 213, 217, 218, 225, 233, 243], "highpass": [56, 83, 85, 87], "channelbandpassfilt": [56, 63, 111, 125], "passband": [56, 63, 95, 96, 97, 103, 106, 110, 134, 136, 137, 143, 146, 155, 160, 194, 195, 202, 214, 231], "filter_typ": [56, 63, 95, 96, 97, 106, 134, 155, 160, 214], "butter10": 56, "triggersimul": [56, 63, 111, 112, 196, 200, 202, 203, 204, 205, 206, 207], "triggered_channel": [56, 63, 110, 114, 197, 202, 203, 204, 205, 206, 207, 225, 230], "number_concid": [56, 63, 114, 203, 204, 205, 207], "pre_trigger_1sigma": 56, "signific": [56, 81, 121], "trick": 56, "pre": [56, 110, 140, 170, 225, 246], "spend": 56, "quick": [56, 178], "3xvrm": 56, "alon": 56, "iF": [56, 59], "sort": [56, 59, 83, 85, 87, 94, 108, 109, 122], "glob": [56, 59, 167, 189], "json_filenam": [56, 82, 83, 85, 87, 237], "max_amps_env": 56, "coincidence_fract": 56, "triggered_near": 56, "empi": 56, "get_number_of_channel": [56, 68, 75, 79, 83, 84, 85, 87, 92, 109], "get_relative_posit": [56, 68, 75, 79, 83, 84, 85, 87], "mask": 56, "php": 56, "get_marker2": 56, "2g": 56, "set_xlabel": 56, "set_ylabel": 56, "set_titl": 56, "savefig": 56, "png": 56, "effective_volume_calcul": 57, "peopl": [57, 61], "get_e2_limit_figur": 57, "diffus": 57, "show_grand_10k": 57, "show_grand_200k": 57, "show_heinz": 57, "show_ta": 57, "show_ara": 57, "show_arianna": 57, "add_limit": 57, "n_station": 57, "200": [57, 58, 61, 103, 153, 164, 167, 203, 204, 205, 207, 230, 236, 237], "my": [57, 59, 62, 64], "year": [57, 215], "linestyl": 57, "color": 57, "blue": 57, "linewidth": 57, "daughter": [58, 99], "planar": [58, 62], "z_airboundari": 58, "reflection_coeffici": 58, "reflection_phase_shift": 58, "index_of_refraction_at_posit": 58, "average_index_of_refraction_between_position1_and_position2": 58, "gradient_index_of_refraction_at_posit": 58, "besid": [58, 61], "mathemat": [58, 62], "math": 58, "deaconu": 58, "hawlei": 58, "allei": 58, "rho": 58, "602": 58, "rho_0": 58, "super": 58, "3000": 58, "51": [58, 124, 136], "handl": [58, 62, 81, 164, 212, 223, 242, 245, 246], "proper": [58, 61, 151, 217], "__ice_model_nuradio": 58, "__scalar_field": 58, "predin": 58, "inher": 58, "confin": 58, "__modul": 58, "stand": 58, "pop": 58, "h": [58, 151, 211, 247], "icemodel_simp": 58, "rp": [58, 95, 96, 97, 106, 134, 214], "z_surfac": 58, "rice2014": 58, "sp": 58, "425": 58, "71": [58, 64, 136], "spice2015": 58, "423": 58, "77": 58, "43": 58, "46": 58, "34": 58, "mb2": 58, "481": 58, "coeffici": [58, 103, 120, 219], "mimick": 58, "ross": 58, "antarctica": 58, "snippet": [58, 243], "independ": [58, 218, 242, 247], "ref_index_medium": 58, "z_coordin": 58, "index_at_antenna": 58, "attenuation_length": 58, "anisotrop": 58, "heyer": 58, "glaser": [58, 213], "2023": 58, "demonstr": 58, "birefringence_exampl": 58, "deal": 58, "read_m": 58, "txt": [58, 63, 81], "angle_to_iceflow": 58, "anisotropi": 58, "jordan": 58, "spline": 58, "freedom": [58, 103], "capit": 58, "letter": 58, "icemodel_interpolation_southpol": 58, "icemodel_interpolation_greenland": 58, "shallow": [58, 61], "southpole_b": 58, "converg": [58, 61], "southpole_c": 58, "southpole_d": 58, "southpole_": 58, "greenland_a": 58, "greenland_b": 58, "greenland_c": 58, "diverg": 58, "act": [58, 63, 161], "term": [58, 61, 151], "131": 58, "roughli": [58, 137, 138, 238], "everyth": [58, 64, 88], "birefringence_propag": 58, "hpc": 59, "uc": 59, "irvin": 59, "000": [59, 64], "coupl": [59, 61, 63], "10m": [59, 236], "million": [59, 63], "10k": 59, "pub": 59, "1e18_n1e6": 59, "1e4": [59, 167], "part0001": 59, "part0100": 59, "schedul": 59, "bash": 59, "steer": 59, "base_dir": 59, "station_design": 59, "detector_sim": 59, "t02runsimul": [59, 64], "detector_filenam": [59, 225], "surface_station_1ghz": [59, 64], "det_dir": 59, "join": [59, 63], "config_5": 59, "working_dir": 59, "suface_station_1ghz": 59, "input_dir": 59, "jcglaser": 59, "yet": [59, 61, 63, 78, 79, 83, 151, 165], "makedir": 59, "current_fold": 59, "dirnam": 59, "detector_fil": [59, 79, 125], "t1": 59, "basenam": 59, "cmd": 59, "engin": 59, "header": [59, 168, 178, 242], "c_": 59, "grb": 59, "grb64": 59, "ckpt": 59, "restart": [59, 241], "pythonpath": 59, "l": [59, 61, 76, 103, 209, 210], "qsub": 59, "often": [59, 164, 242, 246], "consider": [59, 191], "parti": 59, "emitter_model": 60, "anecho": 60, "chamber": [60, 76], "15deg": 60, "30deg": 60, "45deg": 60, "60deg": 60, "75deg": 60, "wavelength": [60, 61], "reson": 60, "300": [60, 62, 63, 73, 146], "unwant": 60, "anker": 60, "pillar": 61, "signalgen": [61, 63, 65, 103, 243], "semianalyt": 61, "motiv": [61, 170], "spectra": [61, 119], "resembl": 61, "predict": [61, 221], "refin": [61, 151], "fine": [61, 128, 151, 243], "fluctuat": [61, 225], "fulli": [61, 237], "reproduc": [61, 186], "kind": [61, 77, 78, 221], "semin": 61, "histor": 61, "incredibli": 61, "quit": [61, 241], "emul": 61, "vividli": 61, "2048": [61, 125, 135], "characteris": [61, 121], "polaris": [61, 151, 167], "perpendicular": [61, 63, 79, 81, 83, 85, 87, 151, 219, 231, 238], "volt": [61, 63, 120, 127, 128, 206, 218, 232, 238, 247], "gigahertz": 61, "adimension": 61, "posess": 61, "longitudin": [61, 103, 151], "formula": 61, "percent": 61, "ghz": [61, 62, 63, 88, 124, 128, 218, 238, 243, 247], "offer": [61, 237, 242, 247], "advantag": [61, 63, 64, 237, 242, 243, 247], "stretch": 61, "maxima": [61, 143, 151], "fair": 61, "shower_profil": 61, "shower_library_vx": 61, "pkl": 61, "nue": 61, "txxxx": 61, "a01preprocess_shower_librari": 61, "pickl": [61, 81, 125, 222, 236, 242], "disadvantag": [61, 243], "integrand": 61, "subdivis": 61, "oppos": 61, "less": [61, 63, 164], "suffic": [61, 63], "rather": [61, 79, 209, 223, 237], "anywai": 61, "piec": 61, "carz": 61, "frame": [61, 93, 101, 105, 223], "e_r": 61, "brief": [61, 63], "obscur": 61, "fed": 61, "absolut": [61, 63, 79, 83, 85, 87, 94, 108, 109, 110, 120, 134, 155, 197, 202, 206, 207, 214, 246], "becom": [61, 62, 223, 246], "kilogram": 61, "hard": [61, 122, 170], "kr": 61, "wavenumb": 61, "fresnel": [61, 103], "express": [61, 62, 128, 134], "2r": 61, "sin": [61, 120], "seriou": 61, "instabl": 61, "artifici": [61, 125], "eq": [61, 62, 210], "word": [61, 81, 99, 221], "ask": [61, 83, 87, 164], "inclin": 61, "bent": 61, "light": 61, "bend": 61, "That": [61, 63, 88, 174, 217, 239], "vicin": 61, "But": [61, 237], "zhair": 61, "corea": [61, 111, 142, 162, 228, 237, 242, 246], "cone": [61, 228, 238], "argu": 61, "affect": [61, 77, 78, 167, 195], "55": [61, 110, 125, 134, 155], "70": [61, 62, 142, 228], "54": 61, "hinder": 61, "48": [61, 164], "concentr": 61, "caustic": 61, "entir": [61, 79, 136, 164, 239], "nice": 61, "settl": 61, "debat": 61, "maxwel": 61, "prove": 61, "harder": [61, 237], "nabla": 61, "cdot": [61, 62], "boldsymbol": 61, "rho_f": 61, "epsilon": [61, 221], "permitt": 61, "partial_t": 61, "lorenz": 61, "gaug": 61, "neglect": 61, "implicitli": [61, 246], "claim": 61, "doesn": [61, 164], "disappear": 61, "hoc": 61, "lost": 61, "sound": 61, "finit": [61, 231], "fdtd": 61, "crucial": 61, "interplai": 61, "subsequ": [61, 122], "middl": [61, 122, 227], "nanosecond": [61, 63, 167, 232, 246], "subnanosecond": 61, "substract": [61, 230], "get_tim": [61, 92, 95, 96, 97, 106, 242, 246], "crude": [61, 177], "bumpi": 61, "nevertheless": 61, "decent": 61, "rigor": 61, "aris": 61, "paremeteris": 61, "futur": [61, 62, 63, 72, 76, 135, 158, 165, 170], "my_se": 61, "42": [61, 237, 242], "sake": 61, "notion": 61, "tell": 61, "mistak": 61, "wast": 61, "sft": 61, "jwft": 61, "wrong": [61, 164, 165], "aggrav": 61, "rfft": 61, "real": [61, 81, 87, 88, 128, 135, 208, 218, 237, 243, 247], "whole": [61, 87, 231], "time2freq": [61, 212, 218], "freq2tim": [61, 212, 218], "sampling_tim": 61, "rfftfreq": 61, "trace_back_in_tim": 61, "focuss": 62, "itself": [62, 109, 161, 223, 237, 242, 246], "attenuation_ic": 62, "n_freq": [62, 63], "rapid": 62, "ll": 62, "frac": [62, 120], "variat": [62, 160], "stationari": 62, "Not": [62, 63, 79, 94, 108, 109, 151, 165], "said": 62, "pm": 62, "ln": 62, "2n_": 62, "attempt": [62, 122, 222], "gsldir": 62, "gnu": 62, "scientif": 62, "gnu_scientific_librari": 62, "cppanalyticraytrac": 62, "setup": [62, 63, 96, 106, 143, 178, 245], "build_ext": 62, "inplac": 62, "standalon": [62, 124], "makefil": 62, "readm": 62, "modular": 62, "eikon": 62, "rung": 62, "kutta": 62, "scan": [62, 180, 195, 243], "manner": 62, "shown": [62, 136, 151, 209, 239], "prop": 62, "initial_point": 62, "final_point": 62, "afterward": [62, 237, 245], "solution_int": 62, "rays_2d": 62, "initial_point_2d": 62, "final_point_2d": 62, "Or": 62, "path_length": 62, "And": 62, "xlabel": 62, "ylabel": 62, "sampling_rate_detector": 62, "nyquist_frequ": 62, "50": [62, 63, 81, 88, 124, 138, 142, 144, 228, 236], "ylim": 62, "simple_radiopropa_trac": 62, "arctan": 62, "heart": 63, "layout": [63, 151], "aspect": [63, 245], "visit": 63, "begin": [63, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 227, 231, 233, 237, 242, 245, 246], "discuss": 63, "mysimul": 63, "_detector_simul": 63, "who": [63, 167], "child": [63, 143, 160, 195, 242], "outpufilenam": 63, "initialis": [63, 95, 96, 97, 106, 245], "convers": [63, 81, 120, 128, 197, 225, 232], "06_webinar": 63, "w02runsimul": 63, "config_default": [63, 64], "overriden": 63, "therein": 63, "weight_mod": 63, "_mantl": 63, "_crust": 63, "_simpl": 63, "parameteris": 63, "At": 63, "1235": 63, "minimum_weight_cut": 63, "skip": [63, 170, 183, 245], "698": 63, "redo_raytrac": 63, "redo": [63, 243], "bia": [63, 110, 206], "amp_per_ray_solut": 63, "max_dist": [63, 173, 194], "intercept": 63, "histogram": [63, 189, 242], "10x10": 63, "distance_cut_intercept": 63, "distance_cut_slop": 63, "9542": 63, "auto": [63, 170], "null": [63, 237], "noise_temperatur": 63, "kelvin": [63, 76, 126, 206, 232], "save_al": 63, "digit": [63, 127, 128, 164, 197, 203, 225, 238], "resampl": [63, 92, 95, 96, 97, 106, 128, 139, 156, 189], "associ": [63, 88, 99, 103, 122, 167, 223, 237, 242, 246], "mark": [63, 152], "boresight": [63, 79, 81, 83, 84, 85, 87, 238], "tine": [63, 79, 81, 83, 84, 85, 87, 236, 238], "xz": 63, "135": 63, "pos_east": [63, 237], "pos_north": [63, 237], "102": [63, 103], "ident": [63, 116, 126, 127, 210, 237], "_default": 63, "adc_id": 63, "256": [63, 138, 170], "adc_nbit": [63, 128, 238], "adc_time_delai": [63, 128], "amp_reference_measur": 63, "amp_typ": [63, 72, 76, 116, 126, 237], "vpol_prototype_50cm_n1": 63, "74": [63, 81], "cab_id": 63, "17": [63, 103, 137], "cab_length": 63, "cab_reference_measur": 63, "cab_time_delai": [63, 237], "cab_typ": 63, "lmr_400": 63, "92": 63, "bicone_v8_inf_n1": 63, "97": 63, "mac_address": 63, "0002f7f2e7b9": 63, "mbed_typ": 63, "v1": 63, "board_numb": 63, "203": [63, 103], "pos_measurement_tim": 63, "pos_posit": 63, "station_typ": [63, 84, 237], "teach": 63, "princip": 63, "constitu": 63, "guidelin": 63, "argpars": 63, "simplethreshold": [63, 111, 200], "highlowthreshold": [63, 111, 200], "channelgenericnoiseadd": [63, 111], "__name__": [63, 223], "__main__": 63, "results_fold": 63, "mkdir": [63, 64], "great": 63, "christoph": 63, "massiv": 63, "heavi": 63, "Be": 63, "comments_detector": 63, "understand": [63, 170, 239], "parser": 63, "argumentpars": 63, "add_argu": 63, "input_3": 63, "2e": 63, "19_1": 63, "0e": 63, "20": [63, 77, 78, 103, 127, 137, 144, 151, 160, 230, 236, 237], "numc_output": 63, "narg": 63, "parse_arg": 63, "incomplet": [63, 87, 237], "design": [63, 87, 137, 188, 189], "lack": [63, 239], "_detector_simulation_filter_amp": 63, "_detector_simulation_trigg": 63, "characterist": [63, 237], "700": [63, 236], "butter": [63, 95, 96, 97, 106, 134, 155, 160, 214], "150": 63, "800": [63, 151], "coincid": [63, 66, 110, 114, 202, 203, 204, 205, 206, 207, 225, 246], "subset": 63, "threshold_high": [63, 110, 203, 204], "_vrm": 63, "threshold_low": [63, 110, 203, 204], "coinc_window": [63, 114, 202, 203, 204, 205, 206, 207], "hilo_2of4_5_sigma": 63, "simple_10_sigma": 63, "default_detector": 63, "01_veff_simul": 64, "home": [64, 70, 72, 76, 81, 110], "cp": 64, "t01generate_event_list": 64, "1e19": 64, "1e19_n1e3": 64, "1e19_n1e3_output": 64, "_c_": 64, "18": [64, 103, 215], "018": 64, "22": [64, 103, 142, 228], "sr": [64, 215], "26m": 64, "binari": 64, "1e18_n1e4": 64, "1e18_n1e4_output": 64, "laptop": 64, "29": [64, 103], "later": [64, 95, 121, 122, 151, 195, 237, 243, 245], "though": [64, 77, 78, 164, 245], "worri": [64, 247], "adc": [64, 110, 120, 127, 128, 170, 183, 197, 203, 225], "bicon": [64, 236], "detector_nam": 64, "easier": [64, 116, 126, 237, 247], "t05visualize_sim_output": 64, "submodul": [65, 147, 235], "api": [67, 77, 78, 248], "analog_compon": [68, 69, 71, 75, 116, 126, 127], "load_system_respons": [68, 69, 70], "get_system_respons": [68, 69, 70], "load_amplifier_respons": [68, 71, 72], "load_amp_measur": [68, 71, 72], "get_amplifier_respons": [68, 71, 72, 75, 79, 83, 85, 87, 116, 126], "get_cable_response_parametr": [68, 71, 72], "get_cable_respons": [68, 71, 72], "get_available_amplifi": [68, 71, 72, 75, 76], "preprocessamprespons": [68, 71], "save_preprocessed_amp": [68, 71, 73], "preprocess_300amp": [68, 71, 73], "rno_g": [68, 82, 103, 111, 162, 184, 206], "load_amp_respons": [68, 75, 76, 127], "db_mongo_read": [68, 75], "dictionarize_nested_list": [68, 75, 77], "dictionarize_nested_lists_as_tupl": [68, 75, 77], "db_mongo_writ": [68, 75], "rnog_detector": [68, 75, 82, 237], "amp": [68, 72, 73, 76, 83, 85, 87, 116, 125, 126, 137, 140, 153, 246], "get_amp_respons": [68, 80], "antennapattern": [68, 236], "interpolate_linear": [68, 81], "interpolate_linear_vector": [68, 81], "get_group_delai": [68, 81], "parse_rnog_xfdtd_fil": [68, 81], "preprocess_rnog_xfdtd": [68, 81], "parse_wipld_fil": [68, 81], "preprocess_wipld_old": [68, 81], "save_preprocessed_wipld_old": [68, 81], "preprocess_wipld": [68, 81], "save_preprocessed_wipld": [68, 81], "save_preprocessed_wipld_forara": [68, 81], "get_pickle_antenna_respons": [68, 81], "parse_aera_xml_fil": [68, 81], "preprocess_aera": [68, 81], "parse_ara_fil": [68, 81], "preprocess_ara": [68, 81], "parse_hfss_fil": [68, 81], "preprocess_hfss": [68, 81], "preprocess_xfdtd": [68, 81], "parse_lofar_txt_fil": [68, 81], "preprocess_lofar_txt": [68, 81], "antennapatternbas": [68, 81], "get_antenna_response_vector": [68, 81], "antennapatternanalyt": [68, 81], "parametric_phas": [68, 81], "antennapatternprovid": [68, 81, 231], "load_antenna_pattern": [68, 81], "detector_bas": [68, 82], "datetimeseri": [68, 83], "obj_class": [68, 83], "decod": [68, 83], "buffer_db": [68, 83], "detectorbas": [68, 83, 85, 87], "assume_inf": [68, 82, 83, 85, 87], "antenna_by_depth": [68, 82, 83, 85, 87], "get_station_id": [68, 75, 77, 78, 79, 83, 85, 87, 92, 98, 99, 105, 107, 163, 164], "get_stat": [68, 75, 79, 83, 85, 87, 92, 99, 163, 167, 242], "has_stat": [68, 75, 79, 83, 85, 87], "get_unique_time_period": [68, 83, 85, 87], "get_detector_tim": [68, 75, 77, 78, 79, 83, 85, 87], "get_channel": [68, 75, 79, 83, 85, 87, 92, 108, 109], "get_devic": [68, 75, 79, 83, 85, 87], "get_absolute_posit": [68, 75, 79, 83, 85, 87, 237], "get_absolute_position_sit": [68, 83, 84, 85, 87], "get_sit": [68, 75, 79, 83, 84, 85, 87], "get_site_coordin": [68, 75, 79, 83, 85, 87], "get_channel_id": [68, 75, 79, 83, 85, 87, 92, 97, 108, 109, 242], "get_parallel_channel": [68, 83, 85, 87], "get_number_of_devic": [68, 83, 85, 87], "get_device_id": [68, 83, 85, 87], "get_cable_delai": [68, 75, 79, 83, 84, 85, 87], "get_cable_type_and_length": [68, 83, 84, 85, 87], "get_antenna_typ": [68, 75, 79, 83, 84, 85, 87], "get_antenna_deployment_tim": [68, 83, 84, 85, 87], "get_antenna_orient": [68, 75, 79, 83, 84, 85, 87], "get_amplifier_typ": [68, 83, 84, 85, 87], "get_amplifier_measur": [68, 83, 85, 87], "get_sampling_frequ": [68, 75, 79, 83, 84, 85, 87], "get_number_of_sampl": [68, 75, 79, 83, 84, 85, 87, 92, 95, 96, 97, 106], "get_antenna_model": [68, 75, 79, 83, 84, 85, 87], "get_channel_group_id": [68, 83, 85, 87], "get_noise_rm": [68, 83, 85, 87, 140], "get_noise_temperatur": [68, 75, 79, 83, 85, 87], "is_channel_noiseless": [68, 75, 79, 83, 85, 87], "detector_sql": 68, "get_everyth": [68, 84], "get_everything_channel": [68, 84], "get_everything_st": [68, 84], "get_everything_posit": [68, 84], "get_antenna_model_fil": [68, 84], "get_station_typ": [68, 84], "detector_sys_uncertainti": 68, "detectorsysuncertainti": [68, 85], "set_antenna_orientation_offset": [68, 85], "reset_antenna_orientation_offset": [68, 85], "set_antenna_position_offset": [68, 85], "reset_antenna_position_offset": [68, 85], "filterrespons": [68, 134, 214], "get_filter_response_mini_circuit": [68, 86], "get_filter_response_mini_circuits2": [68, 86], "get_filter_respons": [68, 86, 160, 212, 214], "generic_detector": [68, 82, 174], "genericdetector": [68, 87, 114, 116, 174, 194, 195], "add_generic_st": [68, 87], "add_station_properties_for_ev": [68, 87, 237], "get_station_properties_for_ev": [68, 87], "set_ev": [68, 87, 237], "get_reference_st": [68, 87], "get_reference_station_id": [68, 87], "get_default_st": [68, 87], "get_default_station_id": [68, 87], "get_default_channel": [68, 87], "get_default_channel_id": [68, 87], "get_raw_st": [68, 87], "get_raw_channel": [68, 87], "get_nam": [68, 88, 92, 101, 110], "get_time_delai": [68, 75, 79, 88, 115, 116, 123, 126], "subtract_time_delay_from_respons": [68, 88], "sql_to_json": 68, "test_detector_db": 68, "visualize_detector": [68, 238], "bhokansonfasig": 70, "tree": [70, 182, 183], "possibli": [72, 76], "amp_measur": 72, "buffer": [72, 77, 78, 79, 81, 83, 168, 237], "cable_typ": [72, 78], "cable_length": 72, "amp_nam": [73, 78, 80], "hardwarerespons": 73, "preprocess": [73, 81, 183], "seri": [73, 95, 96, 97, 106, 120, 151, 218], "ex": [73, 81], "set_database_tim": [75, 77, 78], "set_detector_tim": [75, 77, 78], "get_database_tim": [75, 77, 78], "find_primary_measur": [75, 77, 78], "get_object_nam": [75, 77, 78], "get_collection_nam": [75, 77, 78], "load_board_inform": [75, 77, 78], "get_general_station_inform": [75, 77, 78], "get_general_channel_inform": [75, 77, 78], "get_general_device_inform": [75, 77, 78], "get_collection_inform": [75, 77, 78], "get_quantity_nam": [75, 77, 78], "get_all_available_signal_chain_config": [75, 77, 78], "get_identifi": [75, 77, 78], "get_posit": [75, 77, 78, 92, 97, 242], "get_channel_signal_chain_measur": [75, 77, 78], "get_component_data": [75, 77, 78], "get_complete_station_inform": [75, 77, 78], "get_channel_signal_chain": [75, 77, 78, 79], "get_complete_channel_inform": [75, 77, 78], "get_complete_device_inform": [75, 77, 78], "query_modification_timestamps_per_st": [75, 77, 78], "rename_database_collect": [75, 78], "create_empty_collect": [75, 78], "clone_collection_to_collect": [75, 78], "set_not_work": [75, 78], "add_entry_to_databas": [75, 78], "add_general_station_info": [75, 78], "add_general_channel_info_to_st": [75, 78], "add_general_device_info_to_st": [75, 78], "add_measurement_protocol": [75, 78], "update_current_primari": [75, 78], "change_primary_antenna_measur": [75, 78], "change_primary_cable_measur": [75, 78], "change_primary_iglu_measur": [75, 78], "change_primary_drab_measur": [75, 78], "change_primary_surface_measur": [75, 78], "change_primary_downhole_measur": [75, 78], "decommission_a_st": [75, 78], "decommission_a_channel": [75, 78], "decommission_a_devic": [75, 78], "export_as_str": [75, 79], "get_channel_orient": [75, 79], "get_signal_chain_respons": [75, 79, 88], "get_signal_chain_compon": [75, 79], "get_relative_position_devic": [75, 79], "rno_surfac": 76, "temp": [76, 78, 126, 170], "293": [76, 126], "hardwar": [76, 77, 78, 113, 116, 125, 126, 239, 246], "incorpor": [76, 113, 116, 126], "ri": 76, "hardweareresponseincorpor": 76, "52": 76, "room": 76, "empir": 76, "board": [76, 78, 110, 127, 206], "drab": [76, 77, 78, 79, 239], "fiber": [76, 78, 79, 239], "iglu": [76, 77, 78, 79, 237, 239], "climat": 76, "phased_arrai": 76, "15k": 76, "connect": [77, 78, 79], "preconfigur": [77, 78], "mongo": [77, 78, 79], "client": [77, 78], "freeli": [77, 78], "acces": [77, 78], "db": [77, 78, 79, 83, 88, 135, 170], "database_connect": [77, 78, 79], "rnog_publ": [77, 78, 79], "env_pw_us": [77, 78], "server": [77, 78, 81, 83, 85, 236, 237], "environment": [77, 78], "mongo_serv": [77, 78], "mongo_us": [77, 78], "mongo_password": [77, 78], "rnog_test_publ": [77, 78], "connection_str": [77, 78], "db_mongo_connection_str": [77, 78], "database_nam": [77, 78], "rnog_liv": [77, 78], "mongo_kwarg": [77, 78], "mongocli": [77, 78], "utc": [77, 78, 164, 167], "commiss": [77, 78, 79, 87, 237, 239], "collection_nam": [77, 78], "primary_tim": [77, 78], "identification_label": [77, 78], "data_dict": [77, 78], "object_id": [77, 78], "measurement_id": [77, 78], "surface_board": [77, 78], "iglu_board": [77, 78], "timestamp": [77, 78, 84, 164, 167], "s_paramet": [77, 78, 81], "object_typ": [77, 78], "board_nam": [77, 78], "info_nam": [77, 78], "device_id": [77, 78, 79, 83, 85, 87], "devic": [77, 78, 79, 83, 85, 87], "search_bi": [77, 78], "obj_id": [77, 78], "measurement_nam": [77, 78], "use_primary_time_with_measur": [77, 78], "station_posit": [77, 78, 151, 237], "channel_posit": [77, 78], "signal_chain": [77, 78, 79], "unless": [77, 78, 170], "wanted_quant": [77, 78], "object_nam": [77, 78], "input_d": [77, 78], "golden_iglu": [77, 78], "measurement_temp": [77, 78], "drab_id": [77, 78], "golden_drab": [77, 78], "channel_device_id": [77, 78], "position_id": [77, 78], "channel_signal_id": [77, 78], "component_typ": [77, 78], "component_id": [77, 78], "supplementary_info": [77, 78], "sparamet": [77, 78], "measurement_station_posit": [77, 78], "measurement_channel_posit": [77, 78], "measurement_signal_chain": [77, 78], "measurement_device_posit": [77, 78], "complete_info": [77, 78], "indentifi": [77, 78], "dictinoari": [77, 78], "otherth": [77, 78], "response_chain": [77, 78], "measurement_posit": [77, 78], "modif": [77, 78], "requier": [77, 78, 93, 101, 105], "station_data": [77, 78], "modification_timestamp": [77, 78], "station_commission_timestamp": [77, 78], "station_decommission_timestamp": [77, 78], "former": [77, 78, 239], "comiss": [77, 78, 237], "nested_list": 77, "parent_kei": 77, "nested_field": 77, "nested_kei": 77, "aggreg": 77, "old_nam": 78, "new_nam": 78, "fail": [78, 222], "old_collect": 78, "new_collect": 78, "primary_measur": 78, "breakout_id": 78, "breakout_channel_id": 78, "broken": 78, "dosn": 78, "breakout": 78, "identification_kei": 78, "identification_valu": 78, "primary_measurement_start": 78, "hpol": [78, 79, 191, 236], "vpol": [78, 79, 191, 236], "station_nam": 78, "station_com": 78, "number_of_sampl": [78, 79, 125, 138], "2080": 78, "channel_com": 78, "device_nam": 78, "device_com": 78, "protocol_nam": 78, "utcnow": [78, 239], "antenna_typ": [78, 92, 103, 236], "antenna_nam": [78, 122, 164, 174], "protocol": 78, "units_arr": 78, "function_test": 78, "s11": 78, "cable_nam": 78, "downhol": 78, "board_typ": 78, "laser_id": 78, "iglu_id": 78, "photodiode_id": 78, "breakout_cha_id": 78, "decomm_tim": 78, "decommiss": [78, 87, 237], "over_write_handset_valu": 79, "database_tim": [79, 239], "always_query_entire_descript": 79, "select_st": 79, "acut": 79, "question": [79, 237], "queri": [79, 170, 237], "describt": 79, "descib": 79, "detector_tre": 79, "json_kwarg": 79, "additional_data": 79, "_json_seri": 79, "skip_signal_chain_respons": 79, "dumps_kwarg": 79, "constructor": [79, 194, 195, 237, 242, 245], "idendifi": 79, "channel_info": 79, "station_info": 79, "site": [79, 83, 85, 87, 97, 146, 151, 172, 191, 220], "outward": [79, 81, 83, 85, 87], "symmetri": [79, 81, 83, 85, 87, 236, 238, 243], "counterclockwis": [79, 81, 83, 84, 85, 87, 236, 238], "orientation_theta": [79, 81, 92, 103, 238], "orientation_phi": [79, 81, 92, 103, 238], "rotation_theta": [79, 81, 92, 103, 238], "rotation_phi": [79, 81, 92, 103, 238], "tubl": 79, "channel_signal_chain": 79, "mostli": [79, 237], "repons": [79, 88, 239], "coax": [79, 120, 239], "radiant": [79, 151], "signal_chain_compon": 79, "dictonari": [79, 81], "particlular": 79, "pariti": 79, "antenna_model": [79, 81], "vel": [79, 81], "accronym": 79, "abbrivatipn": 79, "outer": 79, "tempertur": 79, "use_stor": 79, "time_delai": [79, 88, 231], "latitud": [79, 83, 85, 87, 120], "longitud": [79, 83, 85, 87, 120], "ntu": 80, "y1": 81, "interpolation_method": 81, "imaginari": 81, "magnitud": [81, 103, 122, 209, 236], "vector_effective_length": 81, "df": [81, 218], "effecitv": 81, "path_gain": 81, "path_phas": 81, "xfdtd": [81, 236], "THAT": 81, "THE": 81, "IN": 81, "TO": 81, "OF": 81, "ad1": 81, "ra1": 81, "gen_num": 81, "wipld": 81, "s_12": 81, "older": [81, 237, 239], "insuffici": 81, "incid": [81, 210, 219], "circuit": 81, "ohm": [81, 217], "180deg": [81, 83, 84, 85, 87, 236, 238], "ff2": 81, "inicd": 81, "h_phi": [81, 236], "h_theta": [81, 236], "wipl": [81, 236], "verifi": 81, "sha1": [81, 236], "pars": [81, 86, 168, 174, 178, 237], "ascii": 81, "containig": 81, "hfss": 81, "magnitudes_theta": 81, "magnitudes_phi": 81, "phases_phi": 81, "phases_theta": 81, "csv": [81, 170], "path_theta": 81, "path_phi": 81, "lba": [81, 164, 165], "ant": 81, "antennamodel": 81, "do_consistency_check": 81, "interpolation_mod": 81, "magphas": 81, "cutoff_freq": 81, "phase_typ": 81, "theoret": 81, "usag": [81, 237, 247], "occupi": 81, "rnog_mongo": 82, "backward": [82, 83, 85, 87, 164, 218], "alia": 83, "obj": 83, "rtype": 83, "in_memori": 83, "tini": 83, "tb": 83, "getter": [83, 85, 87], "detector_sql_auth": [83, 85], "credenti": [83, 85], "arianna_detector_db": [83, 85, 87], "madel": [83, 85, 87], "_inffirn": [83, 85, 87], "period": [83, 85, 87, 236, 246], "mode_id": [83, 87], "deploi": [83, 85, 87, 239], "lmr240": [83, 85, 87], "deploy": [83, 85, 87, 238], "differenti": [83, 84, 85, 87, 137, 215], "group_id": [83, 85, 87, 96, 106], "stage": [83, 85, 87, 183], "precomput": [83, 85, 87], "deconvolv": [83, 85, 87, 116, 126], "100mhz": [83, 85, 87], "deviat": [83, 85, 87, 110, 127, 177, 217, 243], "noiseless": [83, 85, 87], "proxi": [83, 85, 87], "utm": 84, "connector": [84, 238], "ori_theta": 85, "ori_phi": 85, "rot_theta": 85, "rot_phi": 85, "systemat": [85, 153], "filter_nam": 86, "minicircuit": 86, "default_st": 87, "reference_st": [87, 237], "default_channel": 87, "reference_channel": [87, 237], "default_devic": 87, "reference_devic": 87, "station_dict": 87, "run_numb": [87, 99, 170, 183], "whose": [87, 95, 96, 97, 106, 136, 138, 223, 242, 243], "y_unit": 88, "remove_time_delai": 88, "debug_plot": 88, "attenuator_in_db": 88, "multipi": 88, "trace_at_readout": 88, "trace_at_antenna": 88, "arang": 88, "complex_resp": 88, "mag": 88, "Will": [88, 124, 134, 211], "alongsid": 88, "Its": [88, 245], "expon": 88, "multiplicit": 88, "10db": [88, 206], "ax1": 88, "in_db": 88, "plt_kwarg": 88, "resp": 88, "base_show": 92, "baseshow": [92, 93, 101, 105, 151], "get_id": [92, 93, 94, 96, 98, 99, 101, 104, 105, 106, 107, 108, 109], "get_paramet": [92, 93, 94, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 242], "set_paramet": [92, 93, 94, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 242], "has_paramet": [92, 93, 94, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109], "get_axi": [92, 93, 101, 105], "get_coordinatesystem": [92, 93, 101, 105], "deseri": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 242], "base_st": [92, 208, 210], "basest": [92, 94, 108, 109, 210], "set_parameter_error": [92, 94, 97, 108, 109, 242], "get_parameter_error": [92, 94, 97, 108, 109, 242], "remove_paramet": [92, 94, 108, 109], "set_station_tim": [92, 94, 108, 109], "get_station_tim": [92, 94, 108, 109], "get_station_time_dict": [92, 94, 108, 109], "remove_trigg": [92, 94, 108, 109], "get_trigg": [92, 94, 108, 109], "get_primary_trigg": [92, 94, 108, 109], "get_first_trigg": [92, 94, 108, 109], "has_trigg": [92, 94, 99, 108, 109, 110, 112, 114], "set_trigg": [92, 94, 108, 109, 110], "set_electric_field": [92, 94, 108, 109], "get_electric_field": [92, 94, 108, 109, 242], "get_electric_field_id": [92, 94, 108, 109], "add_electric_field": [92, 94, 108, 109], "get_electric_fields_for_channel": [92, 94, 108, 109, 242], "is_neutrino": [92, 94, 108, 109], "is_cosmic_rai": [92, 94, 108, 109], "set_is_neutrino": [92, 94, 108, 109], "set_is_cosmic_rai": [92, 94, 108, 109], "get_arianna_paramet": [92, 94, 108, 109], "has_arianna_paramet": [92, 94, 108, 109], "set_arianna_paramet": [92, 94, 108, 109], "basetrac": [92, 95, 96, 97, 106, 143, 160, 195, 243], "get_trac": [92, 95, 96, 97, 106, 163, 167, 231, 242], "get_filtered_trac": [92, 95, 96, 97, 106], "set_trac": [92, 95, 96, 97, 106, 242], "set_frequency_spectrum": [92, 95, 96, 97, 106, 242, 243], "set_trace_start_tim": [92, 95, 96, 97, 106, 242], "add_trace_start_tim": [92, 95, 96, 97, 106], "get_trace_start_tim": [92, 95, 96, 97, 106], "get_frequ": [92, 95, 96, 97, 106, 242], "get_hilbert_envelop": [92, 95, 96, 97, 106], "get_hilbert_envelope_mag": [92, 95, 96, 97, 106], "apply_time_shift": [92, 95, 96, 97, 106], "add_to_trac": [92, 95, 96, 97, 106], "get_group_id": [92, 96, 106], "get_unique_identifi": [92, 97, 106], "has_parameter_error": [92, 97], "set_channel_id": [92, 97], "has_channel_id": [92, 97], "get_shower_id": [92, 97, 106, 108], "get_ray_tracing_solution_id": [92, 97, 106], "set_posit": [92, 97], "get_stokes_paramet": [92, 97], "has_station_id": [92, 98, 105, 107], "register_module_ev": [92, 99], "register_module_st": [92, 99], "iter_modul": [92, 99], "get_generator_info": [92, 99], "set_generator_info": [92, 99], "has_generator_info": [92, 99], "set_id": [92, 99], "get_run_numb": [92, 99], "set_event_tim": [92, 99], "get_event_tim": [92, 99], "set_stat": [92, 99], "add_particl": [92, 99], "get_particl": [92, 99], "get_primari": [92, 99], "get_par": [92, 99], "has_particl": [92, 99], "get_interaction_product": [92, 99], "add_show": [92, 99], "get_show": [92, 99, 242], "has_show": [92, 99], "get_first_show": [92, 99, 242], "add_sim_show": [92, 99], "get_sim_show": [92, 99, 242], "get_first_sim_show": [92, 99], "has_sim_show": [92, 99], "add_sim_emitt": [92, 99], "get_sim_emitt": [92, 99, 242], "get_first_sim_emitt": [92, 99], "has_sim_emitt": [92, 99], "get_hybrid_inform": [92, 99, 242], "hybrid_inform": 92, "hybridinform": [92, 100, 242], "add_hybrid_show": [92, 100, 242], "get_hybrid_show": [92, 100, 242], "hybrid_show": [92, 100], "hybridshow": [92, 101, 242], "set_hybrid_detector": [92, 101, 242], "get_hybrid_detector": [92, 101, 242], "parameter_seri": 92, "serialize_covari": [92, 102], "deserialize_covari": [92, 102], "stationparamet": [92, 103, 242], "nu_zenith": [92, 103], "nu_azimuth": [92, 103], "nu_flavor": [92, 103], "nu_vertex": [92, 103, 143], "cr_energi": [92, 103], "cr_zenith": [92, 103, 125, 242], "cr_azimuth": [92, 103, 125], "channels_max_amplitud": [92, 103], "zenith_cr_templatefit": [92, 103], "zenith_nu_templatefit": [92, 103], "cr_xcorrel": [92, 103], "nu_xcorrel": [92, 103], "station_tim": [92, 103, 246], "cr_energy_em": [92, 103], "nu_inttyp": [92, 103], "chi2_efield_time_direction_fit": [92, 103], "ndf_efield_time_direction_fit": [92, 103], "cr_xmax": [92, 103], "vertex_2d_fit": [92, 103, 143], "distance_correl": [92, 103], "viewing_angl": [92, 103, 243], "flagged_channel": [92, 103], "cr_dominant_polaris": [92, 103], "dirty_fft_channel": [92, 103], "channelparamet": [92, 103, 124], "maximum_amplitude_envelop": [92, 103], "p2p_amplitud": [92, 103], "signal_tim": [92, 103, 144], "noise_rm": [92, 103], "signal_region": [92, 103], "noise_region": [92, 103], "signal_time_offset": [92, 103], "signal_receiving_zenith": [92, 103], "signal_ray_typ": [92, 103], "signal_receiving_azimuth": [92, 103], "block_offset": [92, 103, 124], "vrms_nuradiomc_simul": [92, 103], "bandwidth_nuradiomc_simul": [92, 103], "electricfieldparamet": [92, 103], "ray_path_typ": [92, 94, 103, 108, 109], "polarization_angl": [92, 103], "polarization_angle_expect": [92, 103], "signal_energy_flu": [92, 103], "cr_spectrum_slop": [92, 103], "nu_vertex_dist": [92, 103], "nu_viewing_angl": [92, 103], "max_amp_antenna": [92, 103], "max_amp_antenna_envelop": [92, 103], "reflection_coefficient_theta": [92, 103], "reflection_coefficient_phi": [92, 103], "cr_spectrum_quadratic_term": [92, 103], "energy_fluence_ratio": [92, 103], "nu_vertex_propagation_tim": [92, 103], "raytracing_solut": [92, 103], "ariannaparamet": [92, 103], "seq_start_tim": [92, 103], "seq_stop_tim": [92, 103], "seq_num": [92, 103], "comm_period": [92, 103], "comm_dur": [92, 103], "trigger_threshold": [92, 103], "l1_supression_valu": [92, 103], "internal_clock_tim": [92, 103], "showerparamet": [92, 93, 101, 103, 105], "electromagnetic_energi": [92, 103], "radiation_energi": [92, 103], "electromagnetic_radiation_energi": [92, 103], "primary_particl": [92, 103], "shower_maximum": [92, 103], "distance_shower_maximum_geometr": [92, 103], "distance_shower_maximum_grammag": [92, 103], "parent_id": [92, 103], "refractive_index_at_ground": [92, 103], "atmospheric_model": [92, 103], "magnetic_field_rot": [92, 103], "magnetic_field_vector": [92, 97, 103, 108, 151, 231], "observation_level": [92, 103], "charge_excess_profile_id": [92, 103], "interferometric_shower_maximum": [92, 103], "interferometric_shower_axi": [92, 103], "interferometric_cor": [92, 103], "emitterparamet": [92, 103], "realization_id": [92, 103], "particleparamet": [92, 103], "generatorattribut": [92, 103], "total_number_of_ev": [92, 103], "eventparamet": [92, 103], "sim_config": [92, 103], "hash_nuradioreco": [92, 103], "hash_nuradiomc": [92, 103], "as_hdf5_dict": [92, 104], "radio_show": 92, "radioshow": [92, 99, 105, 242], "sim_channel": [92, 108], "sim_emitt": [92, 99], "simemitt": [92, 99, 107], "set_candid": [92, 108], "is_candid": [92, 108], "get_magnetic_field_vector": [92, 108, 109], "set_magnetic_field_vector": [92, 108], "get_simulation_weight": [92, 108], "set_simulation_weight": [92, 108], "iter_channel": [92, 108, 109, 242], "add_channel": [92, 108, 109], "get_ray_tracing_id": [92, 108], "get_channels_by_channel_id": [92, 108], "get_channels_by_shower_id": [92, 108], "get_channels_by_ray_tracing_id": [92, 108], "set_sim_st": [92, 109], "add_sim_st": [92, 109], "get_sim_st": [92, 109, 242], "has_sim_st": [92, 109], "iter_channel_group": [92, 109], "has_channel": [92, 109], "remove_channel": [92, 109], "set_reference_reconstruct": [92, 109], "get_reference_reconstruct": [92, 109], "get_reference_direct": [92, 109], "set_primari": [92, 110], "is_primari": [92, 110], "set_trigger_tim": [92, 110], "get_trigger_tim": [92, 110], "get_typ": [92, 110], "get_triggered_channel": [92, 110], "set_triggered_channel": [92, 110], "set_pre_trigger_tim": [92, 110], "get_pre_trigger_tim": [92, 110, 111, 208], "get_pre_trigger_time_channel": [92, 110], "get_trigger_set": [92, 110], "simplethresholdtrigg": [92, 110], "envelopephasedtrigg": [92, 110], "simplephasedtrigg": [92, 110], "highlowtrigg": [92, 110], "integratedpowertrigg": [92, 110], "envelopetrigg": [92, 110, 111, 200], "rnogsurfacetrigg": [92, 110], "antiparallel": [93, 101, 105], "movement": [93, 101, 105], "particla": [93, 101, 105], "coordiat": [93, 101, 105], "magnet": [93, 97, 101, 103, 105, 151], "data_pkl": [93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110], "_event_tim": [94, 108, 109], "isot": [94, 108, 109], "_station_tim": [94, 108, 109], "overridden": [94, 108, 109, 223], "simelectricfield": [94, 108, 109, 179], "efield_id": [94, 108, 109], "save_efield_trac": [94, 108], "trace_start_tim": [95, 170, 208, 246], "ifft": [95, 96, 97, 106, 218], "represent": [95, 96, 97, 106, 167], "date": [95, 96, 97, 106, 164], "butterab": [95, 96, 97, 106, 110, 134, 155, 214], "butterworth": [95, 96, 97, 106, 110, 134, 146, 155, 202, 209, 214, 217, 231], "window_mask": [95, 96, 97, 106], "frequency_spectrum": [95, 96, 97, 106], "delta_t": [95, 96, 97, 106], "silent": [95, 96, 97, 106], "theorem": [95, 96, 97, 106], "cyclic": [95, 96, 97, 106, 231], "wrap": [95, 96, 97, 106, 243], "acommod": [95, 96, 97, 106], "_sampling_r": [95, 96, 97, 106], "_trace_start_tim": [95, 96, 97, 106], "_time_trac": [95, 96, 97, 106], "channel_group_id": [96, 106, 109], "dual": [96, 106, 164, 174], "tripl": [96, 106, 108], "common": [96, 106, 134, 218, 231, 236], "save_trac": [96, 97, 106], "ray_tracing_id": [97, 106, 108], "window_sampl": [97, 231], "vxb_vxvxb": 97, "filter_kwarg": 97, "stoke": [97, 231], "vxb": [97, 151, 231], "vxvxb": [97, 151, 231], "roll": [97, 197, 225, 246], "shorter": [97, 164], "sit": 97, "trace_util": [97, 212], "get_stok": [97, 212, 231], "emitter_id": [98, 99, 107], "inter": 99, "sequenc": [99, 103], "evt_id": 99, "particle_id": [99, 212, 226], "particle_or_show": 99, "parent_particl": 99, "sim_show": [99, 151, 172], "hybrid": 99, "hybrid_detector": 101, "target_object": 102, "parameter_enum": 102, "no_arg": 103, "qualnam": 103, "ot": 103, "crosscorrel": 103, "26": 103, "chi2": [103, 191], "fitter": 103, "27": 103, "28": 103, "31": [103, 136], "60": [103, 110, 142, 151, 206, 228], "defaultdict": 103, "nrr": 103, "stationrfifilt": [103, 111, 117], "61": [103, 136], "stationpulsefind": [103, 111, 117], "62": 103, "rfi": [103, 120, 122, 167], "ampliud": 103, "likel": 103, "pedest": [103, 170], "channelblockoffsetfitt": [103, 111, 123, 170], "onski": 103, "e_theta": [103, 125, 211], "e_phi": [103, 125, 211], "voltagetoanalyticefieldconvert": [103, 111, 146], "convolut": [103, 134, 214, 217, 246], "channelid": 103, "dirat": 103, "provi": 103, "l1": 103, "supress": 103, "sea": 103, "corrdinatesystem": 103, "103": 103, "104": 103, "105": 103, "106": 103, "107": 103, "108": 103, "109": 103, "110": [103, 114], "longitudion": 103, "112": 103, "121": 103, "122": [103, 165], "ob": 103, "footprint": 103, "23": 103, "201": 103, "202": 103, "particle_index": 104, "regular": 106, "apart": 106, "candidate_statu": 108, "simulation_weight": 108, "unique_identifi": 108, "save_channel_trac": 108, "use_channel": [109, 191, 209, 210], "ascend": 109, "return_group_id": 109, "delet": 109, "suppli": [109, 128, 203], "triggers_pkl": 110, "trigger_typ": [110, 170, 183], "pre_trigger_tim": [110, 197, 208, 225], "involv": 110, "primary_trigg": 110, "number_of_coincid": [110, 203], "channel_coincidence_window": 110, "threshold_factor": 110, "power_mean": [110, 114, 217], "power_std": [110, 114, 217], "phasing_angl": [110, 197], "trigger_delai": [110, 197], "output_passband": [110, 217], "diod": [110, 114, 206, 217, 230], "calculate_noise_paramet": [110, 212, 217], "diodesimul": [110, 212, 230], "6th": [110, 217], "secondary_channel": 110, "primary_angl": 110, "secondary_angl": 110, "sec_trigger_delai": 110, "window_s": [110, 233], "maximum_amp": [110, 197], "subbeam": [110, 197], "tick": [110, 197], "stride": [110, 225], "high_low_window": [110, 203, 204], "integration_window": [110, 205], "filtertyp": 110, "vbia": [110, 206], "hardwareresponseincorpor": [111, 112, 115, 123, 125, 134, 246], "beamformingdirectionfitter_lofar": [111, 117], "geometric_delai": [111, 117, 118, 119], "beamformingdirectionfitt": [111, 117, 118], "beamforming_util": [111, 117], "mini_beamform": [111, 117, 119], "beamform": [111, 117, 119, 121, 151, 225], "geometricdelayfarfield": [111, 117, 119], "stationgalacticcalibr": [111, 117], "fourier_seri": [111, 117, 120], "find_snr_of_timeseri": [111, 117, 121], "num_double_zero": [111, 117, 122], "median_sorted_by_pow": [111, 117, 122], "findrfi_lofar": [111, 117, 122], "channelblockoffset": [111, 123, 124], "fit_block_offset": [111, 123, 124], "crrnogtemplatecr": [111, 123], "triggerboardrespons": [111, 123], "setup_logg": [111, 129, 130], "register_run": [111, 129, 130], "deltat": [111, 147], "iftelectricfieldreconstructor": 111, "linearslopeoper": [111, 159, 161], "slopespectrumoper": [111, 159, 161], "domainflipp": [111, 159, 161], "symmetrizingoper": [111, 159, 161], "nuradiorecoio": [111, 162, 237, 242], "eventread": [111, 162, 237, 242], "eventwrit": [111, 162, 237, 242], "get_head": [111, 162, 168, 178, 179, 242], "event_parser_factori": [111, 162], "scan_files_funct": [111, 162, 180], "iter_events_funct": [111, 162, 180], "measured_nois": 111, "channelmeasurednoiseadd": [111, 184], "neutrinodirectionreconstructor": 111, "voltagetoefieldanalyticconverterforneutrino": [111, 190], "voltagetoanalyticefieldconverterneutrino": [111, 190, 191], "neutrinovertexreconstructor": [111, 243], "create_lookup_t": [111, 192, 243], "neutrino2dvertexreconstructor": [111, 143, 192, 243], "neutrino3dvertexreconstructor": [111, 192, 243], "phasedarrai": 111, "calc_parameters_for_rnog_surface_trigg": [111, 200], "linear_fit": [111, 200, 201], "get_envelope_trigg": [111, 200, 202], "get_high_low_trigg": [111, 200, 203], "get_majority_log": [111, 200, 203], "multihighlowthreshold": [111, 200], "get_high_trigg": [111, 200, 204], "get_low_trigg": [111, 200, 204], "get_multiple_high_low_trigg": [111, 200, 204], "powerintegr": [111, 200], "get_power_int_trigg": [111, 200, 205], "rnog_surface_trigg": [111, 200], "schottky_diod": [111, 200, 206], "get_threshold_trigg": [111, 200, 207], "analogtodigitalconvert": [111, 127, 197], "perfect_compar": [111, 128], "perfect_floor_compar": [111, 128], "perfect_ceiling_compar": [111, 128], "apply_satur": [111, 128], "round_to_int": [111, 128], "get_digital_trac": [111, 128], "get_array_of_channel": [111, 131, 210], "channeladdcabledelai": 111, "channelantennadedispers": 111, "get_filter_argu": [111, 134], "get_filt": [111, 115, 116, 123, 126, 134, 135], "test_equ": [111, 134], "channelcwnotchfilt": 111, "find_frequency_peaks_from_trac": [111, 135], "find_frequency_peak": [111, 135], "filter_cw": [111, 135], "plot_trac": [111, 135], "plot_ft": [111, 135], "add_random_phas": [111, 137], "fftnoise_fullfft": [111, 137], "bandlimited_nois": [111, 137], "precalculate_bandlimited_noise_paramet": [111, 137], "bandlimited_noise_from_precalculated_paramet": [111, 137], "bandlimited_noise_from_spectrum": [111, 137], "channellengthadjust": [111, 186, 189], "channelsignalreconstructor": 111, "get_snr": [111, 140], "channelstopfilt": [111, 246], "channeltemplatecorrel": 111, "match_sampl": [111, 142], "channeltimeoffsetcalcul": 111, "channeltimewindow": 111, "correlationdirectionfitt": 111, "cosmicrayenergyreconstructor": 111, "efieldairtoicepropag": 111, "efieldradiointerferometricreconstruct": 111, "efieldinterferometricdepthreco": [111, 151], "sample_longitudinal_profil": [111, 151], "reconstruct_interferometric_depth": [111, 151], "update_atmospheric_model_and_refractivity_t": [111, 151], "efieldinterferometricaxisreco": [111, 151], "find_maximum_in_plan": [111, 151], "sample_lateral_cross_sect": [111, 151], "reconstruct_shower_axi": [111, 151], "get_geometry_and_transform": [111, 151], "get_station_data": [111, 151], "plot_lateral_cross_sect": [111, 151], "efieldtimedirectionfitt": 111, "efieldtovoltageconvert": [111, 245, 246], "calculate_time_shift_for_cosmic_rai": [111, 153], "efieldtovoltageconverterperefield": 111, "electricfieldbandpassfilt": 111, "electricfieldresampl": 111, "electricfieldsignalreconstructor": 111, "eventtypeidentifi": 111, "sphericalwavefitt": 111, "templatedirectionfitt": 111, "triggertimeadjust": [111, 246], "covari": [111, 209], "stacked_lstsq": [111, 209, 210], "voltagetoefieldconvert": [111, 246], "voltagetoefieldconverterperchannel": 111, "sim_to_data": [113, 116, 126, 208, 246], "tunnel": [114, 217], "fasig": 114, "exce": [114, 135, 179, 189], "power_threshold": 114, "default_integrated_pow": 114, "requri": [114, 203, 204, 205, 207], "get_mingainlin": [115, 116, 123, 126], "phase_onli": [116, 126], "mingainlin": [116, 126], "unfilt": [116, 126], "post": [116, 126, 128, 170, 197], "mitig": [116, 126], "zero_nois": [116, 126], "unclear": [116, 126], "station_list": [117, 122], "metadata_dir": [117, 122, 164, 165, 167], "ant_posit": 118, "matrix": [118, 209, 233], "nr_of_ant": 118, "interferometri": [118, 131, 212], "max_it": 118, "cr_snr": [118, 121], "logger_level": [118, 120, 121, 122, 125, 167, 174, 233], "1009": [118, 131], "0345": [118, 131], "fft_data": 119, "pycrtool": [119, 164], "hbeamformblock": 119, "ant_po": [119, 197], "partial": [120, 170], "a_": 120, "sum_": 120, "mathrm": 120, "b_": 120, "odd": [120, 137, 164, 167, 218], "lofar_lba": 120, "galact": [120, 136], "clean": [120, 167], "correl": [120, 142, 143, 145, 151, 194, 195, 199, 209, 233, 242, 243], "meaning": 120, "experiment": [120, 246], "timeseri": 121, "window_start": 121, "window_end": 121, "noise_start": 121, "noise_end": 121, "enhanc": 121, "estim": [121, 127, 143, 160, 170, 239], "lora": [121, 167], "noise_window": [121, 157], "good_channel": 121, "ave_shift": 122, "preced": 122, "psort": 122, "median": [122, 127, 170], "reoder": 122, "until": [122, 189, 209, 239], "tbb_filenam": 122, "target_trace_length": 122, "65536": [122, 167], "rfi_cleaning_trace_length": 122, "8192": 122, "flagged_antenna_id": 122, "num_dbl_z": 122, "tbb": [122, 164, 167], "h5": 122, "dirti": 122, "metadata": [122, 164, 165, 167], "chunk": [122, 127], "avg_power_spectrum": 122, "avg_antenna_pow": 122, "cleaned_pow": 122, "contamin": 122, "phase_st": 122, "dirty_channel": 122, "dirty_channels_block_s": 122, "stabil": 122, "valueerror": 122, "varianc": 122, "hardcod": 122, "add_offset": [123, 124], "remove_offset": [123, 124], "set_template_paramet": [123, 125], "apply_trigger_filt": [123, 127], "get_avg_vrm": [123, 127], "apply_adc_gain": [123, 127], "get_trigger_valu": [123, 127], "digitize_trac": [123, 127], "block_siz": [124, 167], "128": [124, 141, 213, 231], "max_frequ": 124, "051000000000000004": 124, "mv": 124, "maxit": 124, "guess": [124, 151, 194], "cost": 124, "return_trac": 124, "tol": 124, "1e": [124, 160, 164, 209, 210, 221], "06": [124, 197, 203, 204, 207, 217, 221], "rect": 124, "baselin": [124, 170], "output_trac": 124, "toler": [124, 164], "template_save_path": 125, "template_run_id": 125, "template_event_id": 125, "template_station_id": 125, "template_channel_id": 125, "efield_width": 125, "antenna_rot": 125, "160": 125, "efield_amplitud": 125, "set_parameter_templ": 125, "template_filenam": 125, "templates_cr_station_101": 125, "include_hardware_respons": 125, "hardware_response_sourc": 125, "return_templ": 125, "bandpass_filt": [125, 160, 212], "template_ev": 125, "223": 126, "323": 126, "flower": 127, "bit": [127, 128, 223, 236, 238], "adc_input_rang": 127, "clock_offset": [127, 128, 167, 197, 203], "adc_output": [127, 128, 197, 203], "2v": 127, "clock": [127, 128, 164, 165, 167, 197, 219], "cycl": [127, 128, 160], "discretis": [127, 128, 197, 203], "trigger_filt": [127, 128, 197], "trace_split": 127, "approx_vrm": 127, "avg_vrm": 127, "closest": [127, 173, 176], "ideal": 127, "avg_rm": 127, "vrms_after_gain": 127, "ideal_vrm": 127, "capacitor": 127, "requested_channel": 127, "found_trigger_channel": 127, "do_apply_trigger_filt": 127, "trigger_xxx": 127, "quantiz": [127, 197, 225], "abli": 127, "trigger_board_vrm": 127, "adc_n_bit": 128, "adc_ref_voltag": 128, "perfect": [128, 134, 155, 214], "flash": 128, "signif": 128, "ceil": 128, "digitis": 128, "digital_trac": 128, "perfect_floor": 128, "adc_counts_trac": 128, "clip": [128, 151], "unclip": 128, "saturated_trac": 128, "satur": [128, 238], "adc_reference_voltag": [128, 203, 238], "jitter": [128, 137, 197], "random_clock_offset": 128, "upsampl": [128, 191, 197, 225, 231, 242], "fpga": 128, "arithmet": 128, "_adc_typ": 128, "elimin": 128, "nyquist": [128, 137, 218], "trigger_": [128, 203], "trigger_adc": [128, 197, 203], "adc_typ": 128, "return_sampling_frequ": 128, "upsampling_factor": [128, 197], "int_factor": [128, 197, 231], "handler": [130, 223, 245], "streamhandl": [130, 245], "formatt": [130, 223, 245], "logging_statu": [130, 223, 245], "februari": [130, 223, 245], "2024": [130, 223, 236, 245], "decor": 130, "zenlim": [131, 145], "azilim": [131, 145], "360deg": 131, "subtract": [132, 170, 183, 189, 246], "static": [134, 165], "roll_width": [134, 214], "half_hann_perc": 134, "0025": 134, "gaussian_tap": [134, 214], "hann_tap": 134, "hann": [134, 227], "fir": [134, 231], "rippl": [134, 214], "uniti": [134, 214], "decibel": [134, 214], "chebyshev": [134, 214], "5mhz": 134, "taper": [134, 214], "percentag": [134, 141, 227], "jan": 134, "07": [134, 151, 160], "robert": 134, "lahmann": 134, "fau": 134, "get_window": 134, "ham": [134, 227], "kaiser": 134, "beta": 134, "firwin": 134, "lp": 134, "f_cut": 134, "hp": 134, "bp": 134, "f_cut_low": 134, "f_cut_high": 134, "unus": 134, "signatur": 134, "notimplementederror": 134, "is_equ": 134, "fo": 135, "freq_peak": 135, "quality_factor": 135, "notch": 135, "qualiti": [135, 167], "f0": 135, "bw": 135, "centr": 135, "iir": 135, "nonetyp": 135, "plot_kwarg": 135, "hz": [135, 167, 170], "plotlabel": 135, "save_filt": 135, "pydgsm": 136, "oliveira": 136, "costa": 136, "2008": 136, "0802": 136, "1525": 136, "zheng": 136, "2016": 136, "1605": 136, "04920": 136, "bright": 136, "n_side": 136, "interpolation_frequ": 136, "41": 136, "healpix": 136, "skymap": 136, "downsiz": 136, "pixel": 136, "greatli": 136, "n_samples_time_domain": 137, "min_freq": [137, 217], "max_freq": [137, 217], "perfect_whit": 137, "time_domain": [137, 210], "dc": [137, 170], "nquist": 137, "frequencei": 137, "v_rm": 137, "flat": [137, 221], "rayleigh": [137, 217, 225], "white": 137, "rl": 137, "sept": 137, "multi_whit": 137, "disir": 137, "n_frequenc": 137, "excluded_channel": 137, "exclud": 137, "compli": 138, "signal_window_start": 140, "signal_window_length": 140, "noise_window_start": 140, "noise_window_length": 140, "laid": 140, "stored_nois": 140, "rms_stage": 140, "glitch": [141, 246], "smoothli": [141, 246], "filter_s": 141, "prepend": [141, 246], "tukei": [141, 246], "span": 141, "fill": [141, 237], "template_directori": 142, "ref_templ": 142, "resampling_factor": 142, "channels_to_us": [142, 152, 199], "cosmic_rai": [142, 152, 158, 199], "n_templat": 142, "correctd": 143, "thu": [143, 151], "electric_field_templ": [143, 160], "use_sim": [143, 160], "window_funct": 144, "around_puls": 144, "window_width": [144, 221], "window_rise_tim": 144, "time_window_start": 144, "time_window_end": 144, "han": [144, 209], "rise": 144, "channel_pair": 145, "use_envelop": 145, "360": [145, 236], "beforehand": [146, 245], "10th": [146, 209], "calculateamplitudeperraysolut": [147, 148], "host": 151, "interferometr": 151, "rit": 151, "schoorlemm": 151, "jr": 151, "10348": 151, "schlueter": 151, "hueg": 151, "p07048": 151, "x_rit": 151, "x_max": 151, "irregular": 151, "signal_kind": 151, "metric": [151, 221], "hilbert_sum": [151, 221], "interferomet": 151, "number_of_antenna": 151, "anchor": [151, 221], "singal": 151, "lower_depth": 151, "400": 151, "upper_depth": 151, "bin_siz": 151, "return_profil": 151, "samp": 151, "narrow": 151, "cm2": 151, "pf": 151, "depths_cors": 151, "coars": 151, "depths_fin": 151, "signals_cores": 151, "signals_fin": 151, "popt": 151, "use_mc_geometri": 151, "use_mc_puls": 151, "p_axi": 151, "quadrat": 151, "coordinatesytem": 151, "argmax": 151, "shower_axis_init": 151, "shower_axis_mc": 151, "core_mc": 151, "initial_grid_spac": 151, "centered_around_truth": 151, "cross_section_s": 151, "deg_resolut": 151, "726646259971648e": 151, "stupid": 151, "strenght": 151, "60m": 151, "abitrari": 151, "side": [151, 194, 203, 204], "1000m": 151, "target": [151, 161], "deg2rad": 151, "point_found": 151, "strengt": 151, "is_mc": 151, "truth": [151, 242], "smear": 151, "optain": 151, "inperfect": 151, "traces_vxb": 151, "mp": 151, "mc_po": 151, "fname": [151, 164], "fitur": 151, "time_uncertainti": 152, "time_resolut": 153, "pre_pulse_tim": 153, "post_pulse_tim": 153, "sys_dx": 153, "sys_di": 153, "sys_dz": 153, "sys_amp": 153, "aplif": 153, "simstationclass": 154, "retriv": 154, "lookuperror": 154, "seq": 155, "signal_window_pr": 157, "signal_window_post": 157, "distinguish": [158, 242], "forced_event_typ": 158, "accordingli": [158, 218, 246], "criteria": [158, 177, 189], "decis": 158, "make_priors_plot": [159, 160], "theori": 160, "2102": 160, "00258": 160, "amp_dct": 160, "pulse_time_prior": 160, "pulse_time_uncertainti": 160, "n_iter": 160, "pol": [160, 164, 211], "relative_toler": 160, "convergence_level": 160, "energy_fluence_passband": 160, "slope_passband": 160, "phase_slop": 160, "ift": 160, "prior": 160, "efield_sc": 160, "linearoper": 161, "sigma_m": 161, "sigma_n": 161, "codomain": 161, "endomorphicoper": 161, "wise": [161, 219], "revers": [161, 242], "domaintupl": 161, "rawtbbio": [162, 163], "read_antenna_pol_flip": [162, 163, 164], "read_bad_antenna": [162, 163, 164], "read_antenna_delai": [162, 163, 164], "read_station_delai": [162, 163, 164], "decode_if_need": [162, 163, 164], "tbbdata_dal1": [162, 163, 164], "multifile_dal1": [162, 163, 164], "rawtbbio_metadata": [162, 163], "make_antennaid_filt": [162, 163, 165], "mapantennasetkeyword": [162, 163, 165], "getitrfantennaposit": [162, 163, 165], "getstationposit": [162, 163, 165], "convertitrftoloc": [162, 163, 165], "getstationphasecalibr": [162, 163, 165], "convertphase_to_tim": [162, 163, 165], "getclockcorrectionfromparsetaddit": [162, 163, 165], "getclockcorrect": [162, 163, 165], "rawtbbio_util": [162, 163], "even_antname_to_odd": [162, 163, 166], "antname_is_even": [162, 163, 166], "get_metadata": [162, 163, 167], "lora_timestamp_to_blocknumb": [162, 163, 167], "tbb_filetag_from_utc": [162, 163, 167], "getlofartrac": [162, 163, 167], "readrnogdatamattak": [162, 169, 188], "get_time_offset": [162, 169, 170], "readrnogdata": [162, 169, 170], "calculate_simulation_weight": [162, 171, 172], "make_sim_st": [162, 171, 172], "make_sim_show": [162, 171, 172], "readcorea": [162, 171, 175, 176, 246], "readcoreasshow": [162, 171], "antenna_id": [162, 164, 165, 171, 174], "readcoreasst": [162, 171], "readcoreasstationgrid": [162, 171], "simulationselector": [162, 171], "readariannadata": [162, 181, 183], "readariannadatacalib": [162, 181], "openfil": [162, 168], "close_fil": [162, 163, 164, 167, 168], "get_filenam": [162, 168], "get_event_id": [162, 168], "get_event_i": [162, 168, 242], "get_ev": [162, 168, 169, 170, 242], "get_detector": [162, 168, 178, 237], "get_n_ev": [162, 168], "needs_metadata": [163, 164], "get_station_nam": [163, 164], "get_antenna_nam": [163, 164], "get_antenna_set": [163, 164], "get_sample_frequ": [163, 164], "get_filter_select": [163, 164], "get_timestamp": [163, 164], "get_full_data_length": [163, 164], "get_all_sample_numb": [163, 164], "get_nominal_sample_numb": [163, 164], "get_nominal_data_length": [163, 164], "get_itrf_antenna_posit": [163, 164], "get_lofar_centered_posit": [163, 164], "get_timing_callibration_phas": [163, 164], "get_timing_callibration_delai": [163, 164], "get_data": [163, 164], "set_polarization_flip": [163, 164], "set_odd_polarization_delai": [163, 164], "set_station_delai": [163, 164], "find_and_set_polarization_delai": [163, 164], "has_antenna": [163, 164], "get_timestamp_as_datetim": [163, 164], "get_total_delai": [163, 164], "get_time_from_second": [163, 164], "get_geometric_delai": [163, 164], "setup_trace_load": [163, 167], "check_trace_qu": [163, 167], "pim": 164, "schellart": 164, "tobia": 164, "winchen": 164, "lim": 164, "author": [164, 209, 236], "brian": [164, 165], "hare": [164, 165], "remot": [164, 237], "96": [164, 225], "hba": [164, 165], "cs001": [164, 165], "complic": 164, "spread": [164, 242], "isn": 164, "difficult": 164, "constantli": 164, "challeng": 164, "rcu": 164, "essenti": 164, "rc": 164, "rcuid": 164, "0th": 164, "ect": 164, "antennaset": [164, 165], "lba_out": [164, 165], "spell": 164, "antennaid": [164, 165], "think": 164, "misnom": 164, "lba_inn": [164, 165], "flip": 164, "ne": 164, "sw": 164, "nw": 164, "se": 164, "antenna_respons": 164, "input_decod": 164, "force_metadata_ant_po": 164, "forcemetadata_delai": 164, "filepaths_by_stationnam": 164, "stationnam": 164, "lba_10_90": 164, "posix": 164, "fact": [164, 245], "instant": 164, "usabl": 164, "sample_frequ": 164, "itrf": [164, 165], "cs002": [164, 165], "alloc": 164, "force_file_delai": 164, "start_index": 164, "num_point": 164, "antenna_index": 164, "int16": 164, "past": [164, 167, 239], "filename_list": 164, "polarization_flip": 164, "bad_antenna": 164, "additional_ant_delai": 164, "station_delai": 164, "only_complete_pair": 164, "pol_flips_are_bad": 164, "bad": 164, "rare": 164, "even_antenna_nam": 164, "new_delai": 164, "properli": [164, 237], "shouldn": 164, "uncorrect": 164, "total_delai": 164, "liter": [164, 223], "source_loc": 164, "antenna_loc": 164, "xyz": 164, "correspondingli": 164, "earli": 165, "lightn": 165, "imag": 165, "002000001": 165, "antenna_set": 165, "ugli": 165, "cs302": 165, "142": 165, "lba_x": 165, "lba_i": 165, "lba_sparse0": 165, "lba_sparse1": 165, "hba_0": 165, "hba_1": 165, "coordinate_system": 165, "wgs84": 165, "postion": 165, "lat": 165, "lon": 165, "alt": 165, "itrfpo": 165, "phase_cent": 165, "ref_lat_lon": 165, "file_loc": 165, "staticmetadata": 165, "caltabl": 165, "xmetadata_directori": 165, "subband": 165, "14260161": 165, "07397622e": 165, "18j": 165, "05283530e": 165, "03169438e": 165, "68675289e": 165, "70789381e": 165, "72903474e": 165, "95669876": 165, "41800591e": 165, "41278190e": 165, "40755789e": 165, "41017232e": 165, "19j": 165, "46241246e": 165, "51465260e": 165, "98463207": 165, "80081617e": 165, "03j": 165, "98463138": 165, "89975906e": 165, "98463069": 165, "99870187e": 165, "98299670": 165, "71319125e": 165, "02j": 165, "98299096": 165, "72306908e": 165, "98298520": 165, "73294686e": 165, "03201290": 165, "39535744e": 165, "03144532": 165, "14880844e": 165, "03082273": 165, "90182487e": 165, "82551740": 165, "23731331e": 165, "01j": 165, "82094046": 165, "29743206e": 165, "81631975": 165, "35721497e": 165, "12370332": 165, "15296909e": 165, "12428451": 165, "09484545e": 165, "12483564": 165, "03669252e": 165, "92476286": 165, "48703460e": 165, "92810503": 165, "43912711e": 165, "93142239": 165, "39104744e": 165, "10043006": 165, "18995646e": 165, "10075250": 165, "58731668e": 165, "10104193": 165, "98450938e": 165, "01051042": 165, "40052904e": 165, "01290481": 165, "34513198e": 165, "01526883": 165, "28960464e": 165, "phase_calibr": 165, "sample_tim": 165, "5e": 165, "callibr": 165, "1383263000": 165, "superterp": 165, "drift": 165, "even_ant_nam": 166, "ant_nam": 166, "lora_second": 167, "lora_nanosecond": 167, "sample_numb": 167, "sampling_frequ": [167, 197, 231], "1st": 167, "januari": 167, "1970": 167, "blocknumb": 167, "samplenumb": 167, "gp": 167, "tbb_h5_filenam": 167, "time_": 167, "time_n": 167, "trace_length_nbin": 167, "repeatedli": 167, "against": [167, 191, 236], "dipole_id": 167, "restricted_station_set": 167, "tbb_directori": 167, "json_directori": 167, "metadata_directori": 167, "krato": 167, "coma": 167, "vol": 167, "astro3": 167, "vhecr": 167, "lora_trigg": 167, "astro7": 167, "kratos_fil": 167, "filepath": 167, "metadat": 167, "ingest": 167, "trace_length": [167, 225], "parse_head": 168, "parse_detector": [168, 237], "fail_on_version_mismatch": 168, "fail_on_minor_version_mismatch": 168, "max_open_fil": 168, "buffer_s": 168, "104857600": 168, "byte": 168, "100mb": 168, "eventid": [168, 179], "event_numb": 168, "add_selector": [169, 170], "get_events_inform": [169, 170], "get_waveform": [169, 170], "get_event_by_index": [169, 170], "temporari": 170, "mattak": 170, "519": 170, "time_offset": 170, "run_table_path": 170, "load_run_t": 170, "run_tabl": 170, "mattak_kwarg": 170, "adher": [170, 189], "root_file_or_fold": 170, "run_nr": 170, "1100": 170, "679": 170, "dirs_fil": 170, "read_calibrated_data": 170, "select_trigg": 170, "select_run": 170, "apply_baseline_correct": 170, "convert_to_voltag": 170, "selector": 170, "run_typ": 170, "run_time_rang": 170, "max_trigger_r": 170, "overwrite_sampling_r": 170, "max_in_mem": 170, "stationxx": 170, "runxxx": 170, "incorp": 170, "convin": 170, "run_tim": 170, "trigger_r": 170, "programm": 170, "interrupt": [170, 242], "messag": [170, 223, 245], "decreas": 170, "fastest": 170, "eventinfo": 170, "trigger_selector": 170, "triggertyp": 170, "runtabl": 170, "suffici": [170, 210], "unconstrain": 170, "backend": 170, "pyroot": 170, "fallback": 170, "runinfo": 170, "dataread": 170, "eventnumb": 170, "read_ev": 170, "triggertim": 170, "indeci": 170, "event_index": 170, "max_ev": 170, "overflow": 170, "wf": 170, "wavefrom": 170, "particluar": 170, "chronolog": 170, "across": [170, 245], "corsika": 172, "convex": 172, "hull": 172, "star": [173, 176, 237], "reuturn": [173, 176], "ska": [174, 236], "stress": 174, "terminologi": 174, "poler": 174, "set_ascending_run_and_event_numb": 174, "__ascending_run_and_event_numb": 174, "bee": 174, "fly": 174, "default_id": 174, "ynax": 176, "frequency_window": 177, "n_std": 177, "std": 177, "stricter": 177, "selected_sim": 177, "read_detector": [178, 237], "max_file_s": 179, "1024": [179, 237, 243], "check_for_dupl": 179, "events_per_fil": 179, "mbyte": 179, "writer": 179, "whenev": [179, 223, 232, 236], "fullfil": 179, "version_major": 180, "version_minor": 180, "scan_files_majorversion_minorvers": 180, "rawdata": 183, "fpncorrecteddata": 183, "calibrateddata": 183, "time_interv": 183, "ampoutdata": 183, "random_iter": 183, "fpn": 183, "regardless": 183, "fpnsubdata": 183, "walk": 183, "noiseimporterroot": [184, 185], "noiseimport": [184, 185, 186, 187], "get_noise_st": [184, 189], "seizabl": 186, "basi": [186, 245], "noise_fil": 186, "rnog": [188, 216, 236], "noise_fold": 188, "file_pattern": [188, 189], "match_station_id": 188, "channel_map": [188, 189], "scramble_noise_file_ord": 188, "random_se": [188, 189], "reader_kwarg": 188, "he": [188, 236], "arguement": 188, "max_iter": 189, "draw_noise_statist": 189, "restrict_station_id": 189, "allow_noise_resampl": 189, "baseline_substract": 189, "allowed_trigg": 189, "subdirectori": 189, "suitabl": 189, "thrown": [189, 231], "mean_opt": 189, "forward": [191, 218], "provied": 191, "use_bandpass_filt": 191, "passband_low": 191, "passband_high": 191, "include_focus": 191, "use_mc": 191, "n_samples_multiplication_factor": 191, "plot_traces_with_true_input": 191, "themselv": [191, 194, 238], "overlai": 191, "get_correlation_array_2d": [192, 194, 195], "get_correlation_for_po": [192, 194, 195], "get_signal_travel_tim": [192, 194, 195], "find_ray_typ": [192, 194], "find_receiving_zenith": [192, 194], "get_correlation_array_3d": [192, 195], "lookup_table_loc": [194, 195], "reconstructor": [194, 195], "lookup": [194, 195], "z_width": 194, "grid_spac": 194, "direction_guess": 194, "use_dnr": 194, "stripe": 194, "strip": 194, "dnr": 194, "d_hor": [194, 195], "ray_typ": [194, 195], "ch1": 194, "scenario": 194, "distances_2d": 195, "azimuths_2d": 195, "z_coordinates_2d": 195, "distance_step_3d": 195, "widths_3d": 195, "z_step_3d": 195, "min_antenna_dist": 195, "debug_fold": 195, "dept": 195, "get_antenna_posit": [196, 197], "calculate_time_delai": [196, 197], "get_channel_trace_start_tim": [196, 197], "check_vertical_str": [196, 197], "power_sum": [196, 197], "phase_sign": [196, 197], "phased_trigg": [196, 197], "particip": 197, "1809": 197, "04573": 197, "floatss": 197, "959931089": 197, "714608352": 197, "513801244": 197, "333826648": 197, "164572284": 197, "11022302e": 197, "ref_index": [197, 225], "beam_rol": 197, "throw": 197, "dont": 197, "channel_trace_start_tim": 197, "coh_sum": 197, "num_fram": 197, "phased_trac": 197, "apply_digit": 197, "is_trigg": 197, "met": 197, "simple_phased_threshold": 197, "set_not_trigg": [197, 203, 204], "not_trigg": [197, 203, 204], "start_pulser_posit": 198, "number_coincid": [202, 206], "envelope_trigg": 202, "high_threshold": [203, 204], "low_threshold": [203, 204], "time_coincid": [203, 204, 225], "tt": 203, "triggerd": 203, "triggerd_bin": 203, "triggered_tim": 203, "use_digit": 203, "default_high_low": [203, 204], "n_high_low": 204, "calculat": [204, 205, 207], "default_powerint": 205, "slide": 205, "300k": 206, "273k": 206, "250k": 206, "triggerpath": 206, "rnog_surface_trigger_measur": 206, "default_simple_threshold": 207, "data_to_sim": [208, 246], "vmin": 209, "chi": 209, "loglikelihood": 209, "climb": 209, "uphil": 209, "invert": [209, 210, 236], "hess": 209, "expens": 209, "robust": 209, "contour": 209, "hessian": 209, "dembinski": 209, "kit": 209, "edu": [209, 216], "cov": 209, "invcov": 209, "linalg": 209, "inv": 209, "chisquar": 209, "par": 209, "grad": 209, "negloglik": 209, "rcond": [209, 210], "svd": [209, 210], "singular": [209, 210], "reconstuct": 209, "foward": 209, "maxim": [209, 233], "debug_plotpath": 209, "use_mc_direct": [209, 210], "frequeci": 209, "symmetr": [210, 225, 238], "unfold": [210, 246], "019": 210, "6971": 210, "furthermor": [210, 245], "force_polar": 210, "deconvolut": 211, "analytic_puls": 212, "amp_from_energi": [212, 213], "get_analytic_pulse_freq": [212, 213], "get_analytic_puls": [212, 213], "cr_flux": 212, "get_measured_data": [212, 215], "get_interpolated_cr_flux": [212, 215], "get_analytic_cr_flux": [212, 215], "get_flux_per_energy_bin": [212, 215], "get_cr_event_r": [212, 215], "plot_measured_spectrum": [212, 215], "dataserv": 212, "get_available_dataservers_by_responsetim": [212, 216], "download_from_dataserv": [212, 216], "tunnel_diod": [212, 217], "geometryutil": 212, "get_time_delay_from_direct": [212, 219], "rot_z": [212, 219], "rot_x": [212, 219], "rot_i": [212, 219], "get_efield_in_spherical_coord": [212, 219], "get_fresnel_angl": [212, 219], "get_fresnel_t_p": [212, 219], "get_fresnel_t_": [212, 219], "get_fresnel_r_p": [212, 219], "get_fresnel_r_": [212, 219], "get_refractive_index": [212, 220], "get_sign": [212, 221], "interfere_traces_interpol": [212, 221], "get_time_shift": [212, 221], "fit_axi": [212, 221], "get_intersection_between_line_and_plan": [212, 221], "io_util": 212, "read_pickl": [212, 222], "addfilt": [212, 223], "addhandl": [212, 223, 245], "callhandl": [212, 223], "fatal": [212, 223], "findcal": [212, 223], "getchild": [212, 223], "geteffectivelevel": [212, 223], "hashandl": [212, 223], "isenabledfor": [212, 223], "makerecord": [212, 223], "removefilt": [212, 223], "removehandl": [212, 223], "setlevel": [212, 223, 245], "addlogginglevel": [212, 223], "get_fancy_formatt": [212, 223, 245], "set_general_log_level": [212, 223, 245], "mro": [212, 224], "rolled_sum_rol": [212, 225], "rolling_indic": [212, 225], "rolled_sum_tak": [212, 225], "rolled_sum_sl": [212, 225], "thermalnoisegener": [212, 225], "generate_nois": [212, 225], "thermalnoisegeneratorphasedarrai": [212, 225], "generate_noise2": [212, 225], "signal_process": 212, "half_hann_window": [212, 227], "set_template_directori": [212, 228], "get_cr_ref_templ": [212, 228], "get_set_of_cr_templates_ful": [212, 228], "get_set_of_cr_templ": [212, 228], "get_set_of_nu_templ": [212, 228], "get_nu_ref_templ": [212, 228], "analyze_tim": [212, 229], "tracewindow": 212, "get_window_around_maximum": [212, 230], "get_efield_antenna_factor": [212, 231], "get_channel_voltage_from_efield": [212, 231], "get_electric_field_energy_flu": [212, 231], "upsampling_fir": [212, 231], "butterworth_filter_trac": [212, 231], "apply_butterworth": [212, 231], "delay_trac": [212, 231], "variablewindowsizecorrel": 212, "get_git_commit_hash": [212, 234], "get_nuradiomc_commit_hash": [212, 234], "get_nuradioreco_commit_hash": [212, 234], "amp_p0": 213, "amp_p1": 213, "phase_p0": 213, "n_samples_tim": 213, "phase_p1": 213, "quadratic_term": 213, "quadratic_term_offset": 213, "data_auger_19": 215, "data_ta_21": 215, "err_up": 215, "err_low": 215, "log10_energi": 215, "auger_19": 215, "auger_17": 215, "ta_19": 215, "log10e_min": 215, "log10e_max": 215, "log10energi": 215, "a_eff": 215, "eventr": 215, "zenith_angl": 215, "solid_angl": 215, "base_unit": 215, "attent": [215, 243], "yr": 215, "zeuthen": 216, "uchicago": 216, "remote_path": 216, "target_path": 216, "unpack_tarbal": 216, "try_ord": 216, "diodd": 217, "lowpass": 217, "resist": 217, "trace_after_tunnel_diod": 217, "999999999999999e": 217, "n_tri": 217, "achiv": 218, "omit": [218, 247], "imped": 218, "remark": 218, "spectral": 218, "contrast": 218, "num_sampl": 218, "conserv": 218, "000293": [219, 220], "zenith_incom": 219, "n_2": 219, "n_1": 219, "snell": 219, "transmit": 219, "defind": 219, "land": 220, "n_air": 220, "sum_trac": 221, "tstep": 221, "target_po": 221, "tab": 221, "traget": 221, "stamp": 221, "refractivityt": 221, "avg": 221, "tshift": 221, "sec": 221, "corex": 221, "corei": 221, "intersetct": 221, "flatten": 221, "plane_norm": 221, "plane_anchor": 221, "line_direct": 221, "line_anchor": 221, "betweem": 221, "rosettacod": 221, "find_the_intersection_of_a_line_with_a_plan": 221, "psi": 221, "latin1": 222, "suppos": 222, "hdlr": 223, "hierarchi": [223, 242], "sy": 223, "stderr": 223, "msg": 223, "exc_info": 223, "houston": 223, "disast": 223, "thorni": 223, "loggabl": 223, "veto": 223, "stack_info": 223, "stack": 223, "caller": 223, "descend": 223, "getlogg": [223, 245], "abc": 223, "ghi": 223, "unpickl": 223, "socket": 223, "mysteri": 223, "fn": 223, "lno": 223, "sinfo": 223, "factori": 223, "subclass": 223, "logrecord": 223, "rootlogg": 223, "levelnam": 223, "levelnum": 223, "methodnam": 223, "comprehens": 223, "getloggerclass": 223, "clobber": 223, "attributeerror": 223, "answer": 223, "__call__": [224, 247], "sumtr": 225, "n_major": 225, "time_coincidence_major": 225, "noise_typ": 225, "keep_full_band": 225, "window_length": 225, "main_low_angl": 225, "039338088856046": 225, "main_high_angl": 225, "n_beam": 225, "220": 225, "calcuat": 225, "59": 225, "lowest": [225, 236, 245], "highest": [225, 236], "phasing_mod": 225, "trigger_mod": 225, "binned_sum": 225, "half_perc": 227, "hann_window_length": 227, "140": 228, "module_list": 229, "t_tot": 229, "sustract": 230, "left_tim": 230, "right_tim": 230, "return_spectrum": 231, "electric_field_trac": 231, "signal_window_mask": 231, "noise_window_mask": 231, "trace_u": 231, "trace_v": 231, "squeez": 231, "choic": [231, 232], "simpli": [231, 245], "efield_trace_vxb_vxvxb": 231, "transform_to_vxb_vxvxb": 231, "transform_from_onsky_to_ground": 231, "original_sampling_frequ": 231, "ntap": 231, "impuls": 231, "tap": 231, "upsampled_trac": 231, "cutoff": 231, "filtered_trac": 231, "filtered_spectrum": 231, "delayed_sampl": 231, "crop": 231, "delayed_trac": 231, "mm": [232, 247], "eplu": 232, "substanc": 232, "mole": 232, "lumin": 232, "intens": 232, "candela": 232, "si": 232, "esi": 232, "coulomb": 232, "offlin": [232, 237], "pierr": 232, "collabor": 232, "geant4": 232, "datatrac": 233, "templatetrac": 233, "return_time_differ": 233, "time_diff": 233, "demand": 236, "sha1sum": 236, "hashlib": 236, "send": [236, 237], "christian": 236, "1903": 236, "07023": 236, "appendix": 236, "head": 236, "inf": 236, "imprecis": 236, "embed": 236, "10cm": 236, "3m": 236, "nose": 236, "58m": 236, "100m": 236, "200m": 236, "52cm": 236, "260cm": 236, "270mm": 236, "xf": 236, "inch": 236, "borehol": 236, "cubic": 236, "4200": 236, "halfwai": 236, "wall": 236, "diamet": 236, "constraint": 236, "574": 236, "skala": 236, "350": 236, "ieeexplor": 236, "ieee": 236, "abstract": 236, "7297231": 236, "detector_tim": [237, 239], "lifetim": 237, "took": 237, "decomiss": 237, "compost": 237, "situat": 237, "varieti": 237, "ship": 237, "cumbersom": 237, "prone": 237, "declar": 237, "substitut": 237, "ant_com": 237, "rnog_vpol_4inch_center_n1": 237, "73": 237, "likewis": 237, "therebi": 237, "_event": 237, "event_read": [237, 242], "event_writ": [237, 242], "detector_brows": 237, "web": [237, 241], "127": [237, 241], "8080": [237, 241], "dropdown": 237, "ant_position_": 238, "sketch": 238, "rod": 238, "west": 238, "simplic": 238, "sidewai": 238, "tradit": 238, "upright": 238, "my_detector": 238, "deployment_tim": 238, "aka": 238, "accumul": 238, "euler": 238, "un": 238, "intuit": [238, 239], "everydai": 238, "intrins": 238, "trigger_adc_nbit": 238, "trigger_adc_reference_voltag": 238, "trigger_adc_sampling_frequ": 238, "context": 239, "mainten": 239, "bring": 239, "immedi": 239, "imagin": 239, "poor": 239, "dedic": [239, 242, 245], "datatim": 239, "reanalyz": 239, "todai": 239, "earlier": 239, "organ": [239, 242], "station_rnog": 239, "schemat": 239, "_x": 239, "200mhz": 239, "hopefulli": 239, "implemet": 240, "eventbrows": 241, "ly": 241, "webbrows": 241, "brows": 241, "press": 241, "ctrl": 241, "inotifi": 241, "reload": 241, "debugg": 241, "pin": 241, "224": 241, "474": 241, "503": 241, "favorit": 241, "nuradioview": 241, "simpler": 242, "obviou": 242, "onto": 242, "streamlin": 242, "nuradioreco_io": 242, "event_1": 242, "event_2": 242, "stnp": 242, "hist": 242, "children": 242, "zenith_uncertainti": 242, "respectr": 242, "despit": 242, "hybriddetector": 242, "divers": 242, "impract": 242, "impement": 242, "slot": 242, "pai": 243, "horitont": 243, "reliabl": 243, "ior": 243, "cherenkov_angl": 243, "arcco": 243, "efield_spec": 243, "e18": 243, "efield_templ": 243, "exactl": 243, "influenc": 243, "rougher": 243, "struggl": 243, "colormap": 243, "serious": 243, "freez": 243, "arrang": 245, "deem": 245, "cleanup": 245, "clash": 245, "behaviour": 245, "report": 245, "logging_level": 245, "my_logg": 245, "regard": 245, "prioriti": 245, "diagram": 245, "filehandl": 245, "f_handler": 245, "setformatt": 245, "edit": 245, "parent_logg": 245, "mess": 245, "transfer": 246, "s12": 246, "consequ": 246, "behavior": [246, 247], "rollov": 246, "128n": 246, "artifact": 246, "anywher": 246, "astopi": 246, "caveat": 246, "move": 246, "pure": 246, "life": 247, "132": 247, "milli": 247, "2f": 247, "stai": 247, "accomplish": 247, "superced": 247}, "objects": {"NuRadioMC": [[7, 0, 0, "-", "EvtGen"], [20, 0, 0, "-", "SignalGen"], [27, 0, 0, "-", "SignalProp"], [33, 0, 0, "-", "simulation"], [37, 0, 0, "-", "utilities"]], "NuRadioMC.EvtGen": [[8, 0, 0, "-", "NuRadioMCtoAraSim"], [9, 0, 0, "-", "NuRadioProposal"], [10, 0, 0, "-", "create_tau_tab"], [11, 0, 0, "-", "generate_cylinder"], [12, 0, 0, "-", "generate_unforced"], [13, 0, 0, "-", "generator"], [14, 0, 0, "-", "generator_ASCII"], [15, 0, 0, "-", "generator_skeleton"], [16, 0, 0, "-", "hdf5_to_ASCII"], [17, 0, 0, "-", "proposal_table_manager"], [18, 0, 0, "-", "readARAEventList"], [19, 0, 0, "-", "readEventList_ASCII"]], "NuRadioMC.EvtGen.NuRadioProposal": [[9, 1, 1, "", "ProposalFunctions"], [9, 1, 1, "", "SecondaryProperties"], [9, 3, 1, "", "is_em_primary"], [9, 3, 1, "", "is_had_primary"], [9, 3, 1, "", "is_shower_primary"], [9, 3, 1, "", "particle_code"]], "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions": [[9, 2, 1, "", "get_decays"], [9, 2, 1, "", "get_secondaries_array"]], "NuRadioMC.EvtGen.generate_unforced": [[12, 3, 1, "", "generate_eventlist_cylinder"]], "NuRadioMC.EvtGen.generator": [[13, 3, 1, "", "generate_eventlist_cylinder"], [13, 3, 1, "", "generate_surface_muons"], [13, 3, 1, "", "generate_vertex_positions"], [13, 3, 1, "", "get_energies"], [13, 3, 1, "", "get_energy_from_flux"], [13, 3, 1, "", "get_intersection_volume_neutrino"], [13, 3, 1, "", "get_product_position_time"], [13, 3, 1, "", "get_tau_95_length"], [13, 3, 1, "", "ice_cube_nu_fit"], [13, 3, 1, "", "ice_cube_nu_fit_2022"], [13, 3, 1, "", "intersection_box_ray"], [13, 3, 1, "", "is_in_fiducial_volume"], [13, 3, 1, "", "load_input_hdf5"], [13, 3, 1, "", "mask_arrival_azimuth"], [13, 3, 1, "", "primary_energy_from_deposited"], [13, 3, 1, "", "set_volume_attributes"], [13, 3, 1, "", "write_events_to_hdf5"]], "NuRadioMC.EvtGen.generator_ASCII": [[14, 3, 1, "", "generate_eventlist"]], "NuRadioMC.EvtGen.generator_skeleton": [[15, 3, 1, "", "generate_my_events"]], "NuRadioMC.EvtGen.proposal_table_manager": [[17, 3, 1, "", "download_proposal_tables"], [17, 3, 1, "", "get_compiler"], [17, 3, 1, "", "produce_proposal_tables"], [17, 3, 1, "", "produce_proposal_tables_tarball"]], "NuRadioMC.EvtGen.readARAEventList": [[18, 3, 1, "", "convert_to_hdf5"], [18, 3, 1, "", "read_ARA_eventlist"]], "NuRadioMC.EvtGen.readEventList_ASCII": [[19, 3, 1, "", "read_eventlist"]], "NuRadioMC.SignalGen": [[21, 0, 0, "-", "ARZ"], [23, 0, 0, "-", "HCRB2017"], [24, 0, 0, "-", "askaryan"], [25, 0, 0, "-", "emitter"], [26, 0, 0, "-", "parametrizations"]], "NuRadioMC.SignalGen.ARZ": [[22, 0, 0, "-", "ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ": [[22, 1, 1, "", "ARZ"], [22, 1, 1, "", "ARZ_tabulated"], [22, 3, 1, "", "get_vector_potential"], [22, 3, 1, "", "get_vector_potential_numba"], [22, 3, 1, "", "theta_to_thetaprime"], [22, 3, 1, "", "thetaprime_to_theta"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ": [[22, 2, 1, "", "em_fraction"], [22, 2, 1, "", "get_last_shower_profile_id"], [22, 2, 1, "", "get_shower_profile"], [22, 2, 1, "", "get_time_trace"], [22, 2, 1, "", "get_vector_potential"], [22, 2, 1, "", "get_vector_potential_fast"], [22, 2, 1, "", "set_interpolation_factor"], [22, 2, 1, "", "set_interpolation_factor2"], [22, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated": [[22, 2, 1, "", "get_time_trace"], [22, 2, 1, "", "set_seed"]], "NuRadioMC.SignalGen.HCRB2017": [[23, 3, 1, "", "gauss"], [23, 3, 1, "", "get_N_AskDepthA"], [23, 3, 1, "", "get_frequency_spectrum"], [23, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.askaryan": [[24, 3, 1, "", "get_frequency_spectrum"], [24, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.emitter": [[25, 3, 1, "", "get_frequency_spectrum"], [25, 3, 1, "", "get_time_trace"]], "NuRadioMC.SignalGen.parametrizations": [[26, 3, 1, "", "get_parametrizations"], [26, 3, 1, "", "get_time_trace"], [26, 4, 1, "", "logger"]], "NuRadioMC.SignalProp": [[28, 0, 0, "-", "analyticraytracing"], [29, 0, 0, "-", "directRayTracing"], [30, 0, 0, "-", "propagation"], [31, 0, 0, "-", "propagation_base_class"], [32, 0, 0, "-", "radioproparaytracing"]], "NuRadioMC.SignalProp.analyticraytracing": [[28, 3, 1, "", "get_C0_from_log"], [28, 3, 1, "", "get_delta_y"], [28, 3, 1, "", "get_gamma"], [28, 3, 1, "", "get_n_steps"], [28, 3, 1, "", "get_reflection_point"], [28, 3, 1, "", "get_segments"], [28, 3, 1, "", "get_turning_point"], [28, 3, 1, "", "get_y"], [28, 3, 1, "", "get_y_diff"], [28, 3, 1, "", "get_y_turn"], [28, 3, 1, "", "get_y_with_z_mirror"], [28, 3, 1, "", "get_z_deep"], [28, 3, 1, "", "get_z_unmirrored"], [28, 3, 1, "", "n"], [28, 3, 1, "", "obj_delta_y_square"], [28, 1, 1, "", "ray_tracing"], [28, 1, 1, "", "ray_tracing_2D"], [28, 4, 1, "", "speed_of_light"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing": [[28, 2, 1, "", "apply_propagation_effects"], [28, 2, 1, "", "find_solutions"], [28, 2, 1, "", "get_attenuation"], [28, 2, 1, "", "get_config"], [28, 2, 1, "", "get_effective_index_birefringence"], [28, 2, 1, "", "get_focusing"], [28, 2, 1, "", "get_launch_vector"], [28, 2, 1, "", "get_number_of_raytracing_solutions"], [28, 2, 1, "", "get_number_of_solutions"], [28, 2, 1, "", "get_output_parameters"], [28, 2, 1, "", "get_path"], [28, 2, 1, "", "get_path_length"], [28, 2, 1, "", "get_path_properties_birefringence"], [28, 2, 1, "", "get_polarization_birefringence"], [28, 2, 1, "", "get_polarization_birefringence_simple"], [28, 2, 1, "", "get_pulse_propagation_birefringence"], [28, 2, 1, "", "get_ray_path"], [28, 2, 1, "", "get_raytracing_output"], [28, 2, 1, "", "get_receive_vector"], [28, 2, 1, "", "get_reflection_angle"], [28, 2, 1, "", "get_results"], [28, 2, 1, "", "get_solution_type"], [28, 2, 1, "", "get_travel_time"], [28, 2, 1, "", "has_solution"], [28, 2, 1, "", "on_sky_birefringence"], [28, 2, 1, "", "reset_solutions"], [28, 2, 1, "", "set_config"], [28, 2, 1, "", "set_solution"], [28, 2, 1, "", "set_start_and_end_point"], [28, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D": [[28, 2, 1, "", "angular_diff"], [28, 2, 1, "", "apply_propagation_effects"], [28, 2, 1, "", "determine_solution_type"], [28, 2, 1, "", "ds"], [28, 2, 1, "", "find_solutions"], [28, 2, 1, "", "get_C_0_from_angle"], [28, 2, 1, "", "get_C_1"], [28, 2, 1, "", "get_angle"], [28, 2, 1, "", "get_angle_from_C_0"], [28, 2, 1, "", "get_angle_from_logC_0"], [28, 2, 1, "", "get_attenuation"], [28, 2, 1, "", "get_attenuation_along_path"], [28, 2, 1, "", "get_c"], [28, 2, 1, "", "get_config"], [28, 2, 1, "", "get_launch_angle"], [28, 2, 1, "", "get_launch_vector"], [28, 2, 1, "", "get_number_of_raytracing_solutions"], [28, 2, 1, "", "get_number_of_solutions"], [28, 2, 1, "", "get_output_parameters"], [28, 2, 1, "", "get_path"], [28, 2, 1, "", "get_path_length"], [28, 2, 1, "", "get_path_length_analytic"], [28, 2, 1, "", "get_path_reflections"], [28, 2, 1, "", "get_path_segments"], [28, 2, 1, "", "get_raytracing_output"], [28, 2, 1, "", "get_receive_angle"], [28, 2, 1, "", "get_receive_vector"], [28, 2, 1, "", "get_reflection_angle"], [28, 2, 1, "", "get_results"], [28, 2, 1, "", "get_solution_type"], [28, 2, 1, "", "get_surf_skim_angle"], [28, 2, 1, "", "get_surface_pulse"], [28, 2, 1, "", "get_tof_for_straight_line"], [28, 2, 1, "", "get_travel_time"], [28, 2, 1, "", "get_travel_time_analytic"], [28, 2, 1, "", "get_z_from_n"], [28, 2, 1, "", "get_z_mirrored"], [28, 2, 1, "", "has_solution"], [28, 2, 1, "", "is_in_refraction_zone"], [28, 2, 1, "", "obj_delta_y"], [28, 2, 1, "", "plot_result"], [28, 2, 1, "", "reset_solutions"], [28, 2, 1, "", "set_config"], [28, 2, 1, "", "set_start_and_end_point"], [28, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.directRayTracing": [[29, 1, 1, "", "direct_ray_tracing"]], "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing": [[29, 2, 1, "", "apply_propagation_effects"], [29, 2, 1, "", "find_solutions"], [29, 2, 1, "", "get_attenuation"], [29, 2, 1, "", "get_config"], [29, 2, 1, "", "get_launch_vector"], [29, 2, 1, "", "get_number_of_raytracing_solutions"], [29, 2, 1, "", "get_number_of_solutions"], [29, 2, 1, "", "get_output_parameters"], [29, 2, 1, "", "get_path"], [29, 2, 1, "", "get_path_length"], [29, 2, 1, "", "get_raytracing_output"], [29, 2, 1, "", "get_receive_vector"], [29, 2, 1, "", "get_reflection_angle"], [29, 2, 1, "", "get_results"], [29, 2, 1, "", "get_solution_type"], [29, 2, 1, "", "get_travel_time"], [29, 2, 1, "", "has_solution"], [29, 2, 1, "", "reset_solutions"], [29, 2, 1, "", "set_config"], [29, 2, 1, "", "set_start_and_end_point"], [29, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.propagation": [[30, 3, 1, "", "get_propagation_module"]], "NuRadioMC.SignalProp.propagation_base_class": [[31, 1, 1, "", "ray_tracing_base"]], "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base": [[31, 2, 1, "", "apply_propagation_effects"], [31, 2, 1, "", "find_solutions"], [31, 2, 1, "", "get_attenuation"], [31, 2, 1, "", "get_config"], [31, 2, 1, "", "get_launch_vector"], [31, 2, 1, "", "get_number_of_raytracing_solutions"], [31, 2, 1, "", "get_number_of_solutions"], [31, 2, 1, "", "get_output_parameters"], [31, 2, 1, "", "get_path"], [31, 2, 1, "", "get_path_length"], [31, 2, 1, "", "get_raytracing_output"], [31, 2, 1, "", "get_receive_vector"], [31, 2, 1, "", "get_reflection_angle"], [31, 2, 1, "", "get_results"], [31, 2, 1, "", "get_solution_type"], [31, 2, 1, "", "get_travel_time"], [31, 2, 1, "", "has_solution"], [31, 2, 1, "", "reset_solutions"], [31, 2, 1, "", "set_config"], [31, 2, 1, "", "set_start_and_end_point"], [31, 2, 1, "", "use_optional_function"]], "NuRadioMC.SignalProp.radioproparaytracing": [[32, 1, 1, "", "radiopropa_ray_tracing"]], "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing": [[32, 2, 1, "", "activate_auto_step_size"], [32, 2, 1, "", "apply_propagation_effects"], [32, 2, 1, "", "deactivate_auto_step_size"], [32, 2, 1, "", "delta_theta_bottom"], [32, 2, 1, "", "delta_theta_direct"], [32, 2, 1, "", "delta_theta_reflective"], [32, 2, 1, "", "find_solutions"], [32, 2, 1, "", "get_attenuation"], [32, 2, 1, "", "get_config"], [32, 2, 1, "", "get_correction_path_length"], [32, 2, 1, "", "get_correction_travel_time"], [32, 2, 1, "", "get_focusing"], [32, 2, 1, "", "get_frequencies_for_attenuation"], [32, 2, 1, "", "get_launch_vector"], [32, 2, 1, "", "get_launch_vector_analytic"], [32, 2, 1, "", "get_number_of_raytracing_solutions"], [32, 2, 1, "", "get_number_of_solutions"], [32, 2, 1, "", "get_output_parameters"], [32, 2, 1, "", "get_path"], [32, 2, 1, "", "get_path_candidate"], [32, 2, 1, "", "get_path_length"], [32, 2, 1, "", "get_raytracing_output"], [32, 2, 1, "", "get_receive_vector"], [32, 2, 1, "", "get_reflection_angle"], [32, 2, 1, "", "get_results"], [32, 2, 1, "", "get_solution_type"], [32, 2, 1, "", "get_travel_time"], [32, 2, 1, "", "has_solution"], [32, 2, 1, "", "raytracer_birefringence"], [32, 2, 1, "", "raytracer_iterative"], [32, 2, 1, "", "raytracer_minimizer"], [32, 2, 1, "", "reset_solutions"], [32, 2, 1, "", "set_config"], [32, 2, 1, "", "set_cut_viewing_angle"], [32, 2, 1, "", "set_iterative_sphere_sizes"], [32, 2, 1, "", "set_iterative_step_sizes"], [32, 2, 1, "", "set_maximum_trajectory_length"], [32, 2, 1, "", "set_minimizer_tolerance"], [32, 2, 1, "", "set_shower_axis"], [32, 2, 1, "", "set_solutions"], [32, 2, 1, "", "set_start_and_end_point"], [32, 2, 1, "", "use_optional_function"]], "NuRadioMC.simulation": [[34, 0, 0, "-", "output_writer_hdf5"], [35, 0, 0, "-", "simulation"], [36, 0, 0, "-", "time_logger"]], "NuRadioMC.simulation.output_writer_hdf5": [[34, 1, 1, "", "outputWriterHDF5"]], "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5": [[34, 2, 1, "", "add_event_group"], [34, 2, 1, "", "calculate_Veff"], [34, 2, 1, "", "write_empty_output_file"], [34, 2, 1, "", "write_output_file"]], "NuRadioMC.simulation.simulation": [[35, 3, 1, "", "apply_det_response"], [35, 3, 1, "", "apply_det_response_sim"], [35, 3, 1, "", "build_NuRadioEvents_from_hdf5"], [35, 3, 1, "", "build_dummy_event"], [35, 3, 1, "", "calculate_particle_weight"], [35, 3, 1, "", "calculate_polarization_vector"], [35, 3, 1, "", "calculate_sim_efield"], [35, 3, 1, "", "calculate_sim_efield_for_emitter"], [35, 3, 1, "", "get_config"], [35, 3, 1, "", "group_into_events"], [35, 3, 1, "", "increase_signal"], [35, 3, 1, "", "merge_config"], [35, 3, 1, "", "read_input_hdf5"], [35, 3, 1, "", "remove_all_traces"], [35, 1, 1, "", "simulation"]], "NuRadioMC.simulation.simulation.simulation": [[35, 2, 1, "", "get_Vrms"], [35, 2, 1, "", "get_bandwidth"], [35, 2, 1, "", "get_sampling_rate"], [35, 5, 1, "", "integrated_channel_response"], [35, 2, 1, "", "run"]], "NuRadioMC.simulation.time_logger": [[36, 3, 1, "", "pretty_time_delta"], [36, 1, 1, "", "timeLogger"]], "NuRadioMC.simulation.time_logger.timeLogger": [[36, 2, 1, "", "reset_times"], [36, 2, 1, "", "show_time"], [36, 2, 1, "", "start_time"], [36, 2, 1, "", "stop_time"]], "NuRadioMC.utilities": [[38, 0, 0, "-", "Veff"], [39, 0, 0, "-", "attenuation"], [40, 0, 0, "-", "cross_sections"], [41, 0, 0, "-", "dump_hdf5"], [42, 0, 0, "-", "earth_attenuation"], [43, 0, 0, "-", "fluxes"], [44, 0, 0, "-", "inelasticities"], [45, 0, 0, "-", "medium"], [46, 0, 0, "-", "medium_base"], [47, 0, 0, "-", "merge_hdf5"], [48, 0, 0, "-", "muon_flux"], [49, 0, 0, "-", "plotting"], [50, 0, 0, "-", "runner"], [51, 0, 0, "-", "runner_example"], [52, 0, 0, "-", "split_hdf5"]], "NuRadioMC.utilities.Veff": [[38, 3, 1, "", "FC_limits"], [38, 3, 1, "", "export"], [38, 3, 1, "", "get_Veff_Aeff"], [38, 3, 1, "", "get_Veff_Aeff_array"], [38, 3, 1, "", "get_Veff_Aeff_single"], [38, 3, 1, "", "get_Veff_Aeff_single_wrapper"], [38, 3, 1, "", "get_Veff_water_equivalent"], [38, 3, 1, "", "get_index"], [38, 3, 1, "", "get_veff_output"], [38, 3, 1, "", "remove_duplicate_triggers"]], "NuRadioMC.utilities.attenuation": [[39, 3, 1, "", "fit_GL1"], [39, 3, 1, "", "get_attenuation_length"], [39, 3, 1, "", "get_temperature"]], "NuRadioMC.utilities.cross_sections": [[40, 3, 1, "", "csms"], [40, 3, 1, "", "get_interaction_length"], [40, 3, 1, "", "get_nu_cross_section"], [40, 3, 1, "", "param"]], "NuRadioMC.utilities.dump_hdf5": [[41, 3, 1, "", "dump"]], "NuRadioMC.utilities.earth_attenuation": [[42, 1, 1, "", "CoreMantleCrustModel"], [42, 1, 1, "", "PREM"], [42, 3, 1, "", "get_core_mantle_crust_weight"], [42, 3, 1, "", "get_simple_weight"], [42, 3, 1, "", "get_weight"]], "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel": [[42, 6, 1, "", "densities"], [42, 2, 1, "", "density"], [42, 6, 1, "", "earth_radius"], [42, 6, 1, "", "radii"], [42, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.earth_attenuation.PREM": [[42, 6, 1, "", "densities"], [42, 2, 1, "", "density"], [42, 6, 1, "", "earth_radius"], [42, 6, 1, "", "radii"], [42, 2, 1, "", "slant_depth"]], "NuRadioMC.utilities.fluxes": [[43, 3, 1, "", "get_exposure"], [43, 3, 1, "", "get_fluence_limit"], [43, 3, 1, "", "get_integrated_exposure"], [43, 3, 1, "", "get_limit_e1_flux"], [43, 3, 1, "", "get_limit_e2_flux"], [43, 3, 1, "", "get_limit_flux"], [43, 3, 1, "", "get_limit_from_aeff"], [43, 3, 1, "", "get_number_of_events_for_flux"]], "NuRadioMC.utilities.inelasticities": [[44, 3, 1, "", "get_ccnc"], [44, 3, 1, "", "get_neutrino_inelasticity"], [44, 3, 1, "", "inelasticity_tau_decay"], [44, 3, 1, "", "random_tau_branch"], [44, 3, 1, "", "rejection_sampling"]], "NuRadioMC.utilities.medium": [[45, 1, 1, "", "ARA_2022"], [45, 1, 1, "", "ARAsim_southpole"], [45, 1, 1, "", "birefringence_medium"], [45, 3, 1, "", "get_ice_model"], [45, 1, 1, "", "greenland_firn"], [45, 1, 1, "", "greenland_perturbation"], [45, 1, 1, "", "greenland_simple"], [45, 1, 1, "", "mooresbay_simple"], [45, 1, 1, "", "mooresbay_simple_2"], [45, 1, 1, "", "southpole_2015"], [45, 1, 1, "", "southpole_simple"], [45, 1, 1, "", "uniform_ice"]], "NuRadioMC.utilities.medium.ARA_2022": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.ARAsim_southpole": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.birefringence_medium": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_birefringence_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_firn": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_perturbation": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.greenland_simple": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.mooresbay_simple_2": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_2015": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.southpole_simple": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium.uniform_ice": [[45, 2, 1, "", "add_reflective_bottom"], [45, 2, 1, "", "get_average_index_of_refraction"], [45, 2, 1, "", "get_gradient_of_index_of_refraction"], [45, 2, 1, "", "get_ice_model_radiopropa"], [45, 2, 1, "", "get_index_of_refraction"], [45, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base": [[46, 1, 1, "", "IceModel"], [46, 1, 1, "", "IceModelBirefringence"], [46, 1, 1, "", "IceModelSimple"], [46, 1, 1, "", "RadioPropaIceWrapper"], [46, 1, 1, "", "ScalarFieldBuilder"]], "NuRadioMC.utilities.medium_base.IceModel": [[46, 2, 1, "", "add_reflective_bottom"], [46, 2, 1, "", "get_average_index_of_refraction"], [46, 2, 1, "", "get_gradient_of_index_of_refraction"], [46, 2, 1, "", "get_ice_model_radiopropa"], [46, 2, 1, "", "get_index_of_refraction"], [46, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelBirefringence": [[46, 2, 1, "", "add_reflective_bottom"], [46, 2, 1, "", "get_average_index_of_refraction"], [46, 2, 1, "", "get_birefringence_index_of_refraction"], [46, 2, 1, "", "get_gradient_of_index_of_refraction"], [46, 2, 1, "", "get_ice_model_radiopropa"], [46, 2, 1, "", "get_index_of_refraction"], [46, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.IceModelSimple": [[46, 2, 1, "", "add_reflective_bottom"], [46, 2, 1, "", "get_average_index_of_refraction"], [46, 2, 1, "", "get_gradient_of_index_of_refraction"], [46, 2, 1, "", "get_ice_model_radiopropa"], [46, 2, 1, "", "get_index_of_refraction"], [46, 2, 1, "", "set_ice_model_radiopropa"]], "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper": [[46, 2, 1, "", "add_module"], [46, 2, 1, "", "get_module"], [46, 2, 1, "", "get_modules"], [46, 2, 1, "", "get_scalar_field"], [46, 2, 1, "", "remove_module"], [46, 2, 1, "", "replace_module"]], "NuRadioMC.utilities.medium_base.ScalarFieldBuilder": [[46, 2, 1, "", "getGradient"], [46, 2, 1, "", "getValue"]], "NuRadioMC.utilities.merge_hdf5": [[47, 3, 1, "", "merge2"]], "NuRadioMC.utilities.muon_flux": [[48, 1, 1, "", "MuonFlux"]], "NuRadioMC.utilities.muon_flux.MuonFlux": [[48, 2, 1, "", "get_e_grid"], [48, 2, 1, "", "get_int_angle_mu_flux_buffered"], [48, 2, 1, "", "get_interp_angle_mu_flux"], [48, 2, 1, "", "get_mu_flux"]], "NuRadioMC.utilities.plotting": [[49, 3, 1, "", "plot_vertex_distribution"]], "NuRadioMC.utilities.runner": [[50, 1, 1, "", "NuRadioMCRunner"]], "NuRadioMC.utilities.runner.NuRadioMCRunner": [[50, 2, 1, "", "get_outputfilename"], [50, 2, 1, "", "run"]], "NuRadioMC.utilities.runner_example": [[51, 3, 1, "", "task"]], "NuRadioMC.utilities.split_hdf5": [[52, 3, 1, "", "split_hdf5_input_file"]], "NuRadioReco": [[68, 0, 0, "-", "detector"], [92, 0, 0, "-", "framework"], [111, 0, 0, "-", "modules"], [212, 0, 0, "-", "utilities"]], "NuRadioReco.detector": [[69, 0, 0, "-", "ARA"], [71, 0, 0, "-", "ARIANNA"], [74, 0, 0, "-", "LOFAR"], [75, 0, 0, "-", "RNO_G"], [80, 0, 0, "-", "amp"], [81, 0, 0, "-", "antennapattern"], [82, 0, 0, "-", "detector"], [83, 0, 0, "-", "detector_base"], [84, 0, 0, "-", "detector_sql"], [85, 0, 0, "-", "detector_sys_uncertainties"], [86, 0, 0, "-", "filterresponse"], [87, 0, 0, "-", "generic_detector"], [88, 0, 0, "-", "response"], [89, 0, 0, "-", "sql_to_json"], [90, 0, 0, "-", "test_detector_db"], [91, 0, 0, "-", "visualize_detector"]], "NuRadioReco.detector.ARA": [[70, 0, 0, "-", "analog_components"]], "NuRadioReco.detector.ARA.analog_components": [[70, 3, 1, "", "get_system_response"], [70, 3, 1, "", "load_system_response"]], "NuRadioReco.detector.ARIANNA": [[72, 0, 0, "-", "analog_components"], [73, 0, 0, "-", "preprocessAmpResponses"]], "NuRadioReco.detector.ARIANNA.analog_components": [[72, 3, 1, "", "get_amplifier_response"], [72, 3, 1, "", "get_available_amplifiers"], [72, 3, 1, "", "get_cable_response"], [72, 3, 1, "", "get_cable_response_parametrized"], [72, 3, 1, "", "load_amp_measurement"], [72, 3, 1, "", "load_amplifier_response"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses": [[73, 3, 1, "", "preprocess_300Amp"], [73, 3, 1, "", "save_preprocessed_Amps"]], "NuRadioReco.detector.RNO_G": [[76, 0, 0, "-", "analog_components"], [77, 0, 0, "-", "db_mongo_read"], [78, 0, 0, "-", "db_mongo_write"], [79, 0, 0, "-", "rnog_detector"]], "NuRadioReco.detector.RNO_G.analog_components": [[76, 3, 1, "", "get_available_amplifiers"], [76, 3, 1, "", "load_amp_response"]], "NuRadioReco.detector.RNO_G.db_mongo_read": [[77, 1, 1, "", "Database"], [77, 3, 1, "", "dictionarize_nested_lists"], [77, 3, 1, "", "dictionarize_nested_lists_as_tuples"]], "NuRadioReco.detector.RNO_G.db_mongo_read.Database": [[77, 2, 1, "", "find_primary_measurement"], [77, 2, 1, "", "get_all_available_signal_chain_configs"], [77, 2, 1, "", "get_channel_signal_chain"], [77, 2, 1, "", "get_channel_signal_chain_measurement"], [77, 2, 1, "", "get_collection_information"], [77, 2, 1, "", "get_collection_names"], [77, 2, 1, "", "get_complete_channel_information"], [77, 2, 1, "", "get_complete_device_information"], [77, 2, 1, "", "get_complete_station_information"], [77, 2, 1, "", "get_component_data"], [77, 2, 1, "", "get_database_time"], [77, 2, 1, "", "get_detector_time"], [77, 2, 1, "", "get_general_channel_information"], [77, 2, 1, "", "get_general_device_information"], [77, 2, 1, "", "get_general_station_information"], [77, 2, 1, "", "get_identifier"], [77, 2, 1, "", "get_object_names"], [77, 2, 1, "", "get_position"], [77, 2, 1, "", "get_quantity_names"], [77, 2, 1, "", "get_station_ids"], [77, 2, 1, "", "load_board_information"], [77, 2, 1, "", "query_modification_timestamps_per_station"], [77, 2, 1, "", "set_database_time"], [77, 2, 1, "", "set_detector_time"]], "NuRadioReco.detector.RNO_G.db_mongo_write": [[78, 1, 1, "", "Database"]], "NuRadioReco.detector.RNO_G.db_mongo_write.Database": [[78, 2, 1, "", "add_entry_to_database"], [78, 2, 1, "", "add_general_channel_info_to_station"], [78, 2, 1, "", "add_general_device_info_to_station"], [78, 2, 1, "", "add_general_station_info"], [78, 2, 1, "", "add_measurement_protocol"], [78, 2, 1, "", "change_primary_antenna_measurement"], [78, 2, 1, "", "change_primary_cable_measurement"], [78, 2, 1, "", "change_primary_downhole_measurement"], [78, 2, 1, "", "change_primary_drab_measurement"], [78, 2, 1, "", "change_primary_iglu_measurement"], [78, 2, 1, "", "change_primary_surface_measurement"], [78, 2, 1, "", "clone_collection_to_collection"], [78, 2, 1, "", "create_empty_collection"], [78, 2, 1, "", "decommission_a_channel"], [78, 2, 1, "", "decommission_a_device"], [78, 2, 1, "", "decommission_a_station"], [78, 2, 1, "", "find_primary_measurement"], [78, 2, 1, "", "get_all_available_signal_chain_configs"], [78, 2, 1, "", "get_channel_signal_chain"], [78, 2, 1, "", "get_channel_signal_chain_measurement"], [78, 2, 1, "", "get_collection_information"], [78, 2, 1, "", "get_collection_names"], [78, 2, 1, "", "get_complete_channel_information"], [78, 2, 1, "", "get_complete_device_information"], [78, 2, 1, "", "get_complete_station_information"], [78, 2, 1, "", "get_component_data"], [78, 2, 1, "", "get_database_time"], [78, 2, 1, "", "get_detector_time"], [78, 2, 1, "", "get_general_channel_information"], [78, 2, 1, "", "get_general_device_information"], [78, 2, 1, "", "get_general_station_information"], [78, 2, 1, "", "get_identifier"], [78, 2, 1, "", "get_object_names"], [78, 2, 1, "", "get_position"], [78, 2, 1, "", "get_quantity_names"], [78, 2, 1, "", "get_station_ids"], [78, 2, 1, "", "load_board_information"], [78, 2, 1, "", "query_modification_timestamps_per_station"], [78, 2, 1, "", "rename_database_collection"], [78, 2, 1, "", "set_database_time"], [78, 2, 1, "", "set_detector_time"], [78, 2, 1, "", "set_not_working"], [78, 2, 1, "", "update_current_primary"]], "NuRadioReco.detector.RNO_G.rnog_detector": [[79, 1, 1, "", "Detector"]], "NuRadioReco.detector.RNO_G.rnog_detector.Detector": [[79, 2, 1, "", "export"], [79, 2, 1, "", "export_as_string"], [79, 2, 1, "", "get_absolute_position"], [79, 2, 1, "", "get_amplifier_response"], [79, 2, 1, "", "get_antenna_model"], [79, 2, 1, "", "get_antenna_orientation"], [79, 2, 1, "", "get_antenna_type"], [79, 2, 1, "", "get_cable_delay"], [79, 2, 1, "", "get_channel"], [79, 2, 1, "", "get_channel_ids"], [79, 2, 1, "", "get_channel_orientation"], [79, 2, 1, "", "get_channel_signal_chain"], [79, 2, 1, "", "get_detector_time"], [79, 2, 1, "", "get_devices"], [79, 2, 1, "", "get_noise_temperature"], [79, 2, 1, "", "get_number_of_channels"], [79, 2, 1, "", "get_number_of_samples"], [79, 2, 1, "", "get_relative_position"], [79, 2, 1, "", "get_relative_position_device"], [79, 2, 1, "", "get_sampling_frequency"], [79, 2, 1, "", "get_signal_chain_components"], [79, 2, 1, "", "get_signal_chain_response"], [79, 2, 1, "", "get_site"], [79, 2, 1, "", "get_site_coordinates"], [79, 2, 1, "", "get_station"], [79, 2, 1, "", "get_station_ids"], [79, 2, 1, "", "get_time_delay"], [79, 2, 1, "", "has_station"], [79, 2, 1, "", "is_channel_noiseless"], [79, 2, 1, "", "update"]], "NuRadioReco.detector.amp": [[80, 3, 1, "", "get_amp_response"]], "NuRadioReco.detector.antennapattern": [[81, 1, 1, "", "AntennaPattern"], [81, 1, 1, "", "AntennaPatternAnalytic"], [81, 1, 1, "", "AntennaPatternBase"], [81, 1, 1, "", "AntennaPatternProvider"], [81, 3, 1, "", "get_group_delay"], [81, 3, 1, "", "get_pickle_antenna_response"], [81, 3, 1, "", "interpolate_linear"], [81, 3, 1, "", "interpolate_linear_vectorized"], [81, 3, 1, "", "parse_AERA_XML_file"], [81, 3, 1, "", "parse_ARA_file"], [81, 3, 1, "", "parse_HFSS_file"], [81, 3, 1, "", "parse_LOFAR_txt_file"], [81, 3, 1, "", "parse_RNOG_XFDTD_file"], [81, 3, 1, "", "parse_WIPLD_file"], [81, 3, 1, "", "preprocess_AERA"], [81, 3, 1, "", "preprocess_ARA"], [81, 3, 1, "", "preprocess_HFSS"], [81, 3, 1, "", "preprocess_LOFAR_txt"], [81, 3, 1, "", "preprocess_RNOG_XFDTD"], [81, 3, 1, "", "preprocess_WIPLD"], [81, 3, 1, "", "preprocess_WIPLD_old"], [81, 3, 1, "", "preprocess_XFDTD"], [81, 3, 1, "", "save_preprocessed_WIPLD"], [81, 3, 1, "", "save_preprocessed_WIPLD_forARA"], [81, 3, 1, "", "save_preprocessed_WIPLD_old"]], "NuRadioReco.detector.antennapattern.AntennaPattern": [[81, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic": [[81, 2, 1, "", "get_antenna_response_vectorized"], [81, 2, 1, "", "parametric_phase"]], "NuRadioReco.detector.antennapattern.AntennaPatternBase": [[81, 2, 1, "", "get_antenna_response_vectorized"]], "NuRadioReco.detector.antennapattern.AntennaPatternProvider": [[81, 2, 1, "", "load_antenna_pattern"]], "NuRadioReco.detector.detector": [[82, 3, 1, "", "Detector"]], "NuRadioReco.detector.detector_base": [[83, 1, 1, "", "DateTimeSerializer"], [83, 1, 1, "", "DetectorBase"], [83, 3, 1, "", "buffer_db"]], "NuRadioReco.detector.detector_base.DateTimeSerializer": [[83, 6, 1, "", "OBJ_CLASS"], [83, 2, 1, "", "decode"], [83, 2, 1, "", "encode"]], "NuRadioReco.detector.detector_base.DetectorBase": [[83, 5, 1, "", "antenna_by_depth"], [83, 5, 1, "", "assume_inf"], [83, 2, 1, "", "get_absolute_position"], [83, 2, 1, "", "get_absolute_position_site"], [83, 2, 1, "", "get_amplifier_measurement"], [83, 2, 1, "", "get_amplifier_response"], [83, 2, 1, "", "get_amplifier_type"], [83, 2, 1, "", "get_antenna_deployment_time"], [83, 2, 1, "", "get_antenna_model"], [83, 2, 1, "", "get_antenna_orientation"], [83, 2, 1, "", "get_antenna_type"], [83, 2, 1, "", "get_cable_delay"], [83, 2, 1, "", "get_cable_type_and_length"], [83, 2, 1, "", "get_channel"], [83, 2, 1, "", "get_channel_group_id"], [83, 2, 1, "", "get_channel_ids"], [83, 2, 1, "", "get_detector_time"], [83, 2, 1, "", "get_device"], [83, 2, 1, "", "get_device_ids"], [83, 2, 1, "", "get_noise_RMS"], [83, 2, 1, "", "get_noise_temperature"], [83, 2, 1, "", "get_number_of_channels"], [83, 2, 1, "", "get_number_of_devices"], [83, 2, 1, "", "get_number_of_samples"], [83, 2, 1, "", "get_parallel_channels"], [83, 2, 1, "", "get_relative_position"], [83, 2, 1, "", "get_sampling_frequency"], [83, 2, 1, "", "get_site"], [83, 2, 1, "", "get_site_coordinates"], [83, 2, 1, "", "get_station"], [83, 2, 1, "", "get_station_ids"], [83, 2, 1, "", "get_unique_time_periods"], [83, 2, 1, "", "has_station"], [83, 2, 1, "", "is_channel_noiseless"], [83, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sql": [[84, 1, 1, "", "Detector"], [84, 3, 1, "", "get_amplifier_type"], [84, 3, 1, "", "get_antenna_model_file"], [84, 3, 1, "", "get_antenna_type"], [84, 3, 1, "", "get_cable_delays"], [84, 3, 1, "", "get_number_of_channels"], [84, 3, 1, "", "get_relative_position"], [84, 3, 1, "", "get_relative_positions"], [84, 3, 1, "", "get_station_type"]], "NuRadioReco.detector.detector_sql.Detector": [[84, 2, 1, "", "get_absolute_position_site"], [84, 2, 1, "", "get_amplifier_type"], [84, 2, 1, "", "get_antenna_deployment_time"], [84, 2, 1, "", "get_antenna_model"], [84, 2, 1, "", "get_antenna_orientation"], [84, 2, 1, "", "get_antenna_type"], [84, 2, 1, "", "get_cable_delay"], [84, 2, 1, "", "get_cable_type_and_length"], [84, 2, 1, "", "get_everything"], [84, 2, 1, "", "get_everything_channels"], [84, 2, 1, "", "get_everything_positions"], [84, 2, 1, "", "get_everything_stations"], [84, 2, 1, "", "get_number_of_channels"], [84, 2, 1, "", "get_number_of_samples"], [84, 2, 1, "", "get_relative_position"], [84, 2, 1, "", "get_relative_positions"], [84, 2, 1, "", "get_sampling_frequency"], [84, 2, 1, "", "get_site"], [84, 2, 1, "", "update"]], "NuRadioReco.detector.detector_sys_uncertainties": [[85, 1, 1, "", "DetectorSysUncertainties"]], "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties": [[85, 5, 1, "", "antenna_by_depth"], [85, 5, 1, "", "assume_inf"], [85, 2, 1, "", "get_absolute_position"], [85, 2, 1, "", "get_absolute_position_site"], [85, 2, 1, "", "get_amplifier_measurement"], [85, 2, 1, "", "get_amplifier_response"], [85, 2, 1, "", "get_amplifier_type"], [85, 2, 1, "", "get_antenna_deployment_time"], [85, 2, 1, "", "get_antenna_model"], [85, 2, 1, "", "get_antenna_orientation"], [85, 2, 1, "", "get_antenna_type"], [85, 2, 1, "", "get_cable_delay"], [85, 2, 1, "", "get_cable_type_and_length"], [85, 2, 1, "", "get_channel"], [85, 2, 1, "", "get_channel_group_id"], [85, 2, 1, "", "get_channel_ids"], [85, 2, 1, "", "get_detector_time"], [85, 2, 1, "", "get_device"], [85, 2, 1, "", "get_device_ids"], [85, 2, 1, "", "get_noise_RMS"], [85, 2, 1, "", "get_noise_temperature"], [85, 2, 1, "", "get_number_of_channels"], [85, 2, 1, "", "get_number_of_devices"], [85, 2, 1, "", "get_number_of_samples"], [85, 2, 1, "", "get_parallel_channels"], [85, 2, 1, "", "get_relative_position"], [85, 2, 1, "", "get_sampling_frequency"], [85, 2, 1, "", "get_site"], [85, 2, 1, "", "get_site_coordinates"], [85, 2, 1, "", "get_station"], [85, 2, 1, "", "get_station_ids"], [85, 2, 1, "", "get_unique_time_periods"], [85, 2, 1, "", "has_station"], [85, 2, 1, "", "is_channel_noiseless"], [85, 2, 1, "", "reset_antenna_orientation_offsets"], [85, 2, 1, "", "reset_antenna_position_offsets"], [85, 2, 1, "", "set_antenna_orientation_offsets"], [85, 2, 1, "", "set_antenna_position_offsets"], [85, 2, 1, "", "update"]], "NuRadioReco.detector.filterresponse": [[86, 3, 1, "", "get_filter_response"], [86, 3, 1, "", "get_filter_response_mini_circuits"], [86, 3, 1, "", "get_filter_response_mini_circuits2"]], "NuRadioReco.detector.generic_detector": [[87, 1, 1, "", "GenericDetector"]], "NuRadioReco.detector.generic_detector.GenericDetector": [[87, 2, 1, "", "add_generic_station"], [87, 2, 1, "", "add_station_properties_for_event"], [87, 5, 1, "", "antenna_by_depth"], [87, 5, 1, "", "assume_inf"], [87, 2, 1, "", "get_absolute_position"], [87, 2, 1, "", "get_absolute_position_site"], [87, 2, 1, "", "get_amplifier_measurement"], [87, 2, 1, "", "get_amplifier_response"], [87, 2, 1, "", "get_amplifier_type"], [87, 2, 1, "", "get_antenna_deployment_time"], [87, 2, 1, "", "get_antenna_model"], [87, 2, 1, "", "get_antenna_orientation"], [87, 2, 1, "", "get_antenna_type"], [87, 2, 1, "", "get_cable_delay"], [87, 2, 1, "", "get_cable_type_and_length"], [87, 2, 1, "", "get_channel"], [87, 2, 1, "", "get_channel_group_id"], [87, 2, 1, "", "get_channel_ids"], [87, 2, 1, "", "get_default_channel"], [87, 2, 1, "", "get_default_channel_id"], [87, 2, 1, "", "get_default_station"], [87, 2, 1, "", "get_default_station_id"], [87, 2, 1, "", "get_detector_time"], [87, 2, 1, "", "get_device"], [87, 2, 1, "", "get_device_ids"], [87, 2, 1, "", "get_noise_RMS"], [87, 2, 1, "", "get_noise_temperature"], [87, 2, 1, "", "get_number_of_channels"], [87, 2, 1, "", "get_number_of_devices"], [87, 2, 1, "", "get_number_of_samples"], [87, 2, 1, "", "get_parallel_channels"], [87, 2, 1, "", "get_raw_channel"], [87, 2, 1, "", "get_raw_station"], [87, 2, 1, "", "get_reference_station"], [87, 2, 1, "", "get_reference_station_id"], [87, 2, 1, "", "get_reference_station_ids"], [87, 2, 1, "", "get_reference_stations"], [87, 2, 1, "", "get_relative_position"], [87, 2, 1, "", "get_sampling_frequency"], [87, 2, 1, "", "get_site"], [87, 2, 1, "", "get_site_coordinates"], [87, 2, 1, "", "get_station"], [87, 2, 1, "", "get_station_ids"], [87, 2, 1, "", "get_station_properties_for_event"], [87, 2, 1, "", "get_unique_time_periods"], [87, 2, 1, "", "has_station"], [87, 2, 1, "", "is_channel_noiseless"], [87, 2, 1, "", "set_event"], [87, 2, 1, "", "update"]], "NuRadioReco.detector.response": [[88, 1, 1, "", "Response"], [88, 3, 1, "", "subtract_time_delay_from_response"]], "NuRadioReco.detector.response.Response": [[88, 2, 1, "", "get_names"], [88, 2, 1, "", "get_time_delay"], [88, 2, 1, "", "get_time_delays"], [88, 2, 1, "", "plot"], [88, 2, 1, "", "remove"]], "NuRadioReco.framework": [[93, 0, 0, "-", "base_shower"], [94, 0, 0, "-", "base_station"], [95, 0, 0, "-", "base_trace"], [96, 0, 0, "-", "channel"], [97, 0, 0, "-", "electric_field"], [98, 0, 0, "-", "emitter"], [99, 0, 0, "-", "event"], [100, 0, 0, "-", "hybrid_information"], [101, 0, 0, "-", "hybrid_shower"], [102, 0, 0, "-", "parameter_serialization"], [103, 0, 0, "-", "parameters"], [104, 0, 0, "-", "particle"], [105, 0, 0, "-", "radio_shower"], [106, 0, 0, "-", "sim_channel"], [107, 0, 0, "-", "sim_emitter"], [108, 0, 0, "-", "sim_station"], [109, 0, 0, "-", "station"], [110, 0, 0, "-", "trigger"]], "NuRadioReco.framework.base_shower": [[93, 1, 1, "", "BaseShower"]], "NuRadioReco.framework.base_shower.BaseShower": [[93, 2, 1, "", "deserialize"], [93, 2, 1, "", "get_axis"], [93, 2, 1, "", "get_coordinatesystem"], [93, 2, 1, "", "get_id"], [93, 2, 1, "", "get_parameter"], [93, 2, 1, "", "get_parameters"], [93, 2, 1, "", "has_parameter"], [93, 2, 1, "", "serialize"], [93, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.base_station": [[94, 1, 1, "", "BaseStation"]], "NuRadioReco.framework.base_station.BaseStation": [[94, 2, 1, "", "add_electric_field"], [94, 2, 1, "", "deserialize"], [94, 2, 1, "", "get_ARIANNA_parameter"], [94, 2, 1, "", "get_ARIANNA_parameters"], [94, 2, 1, "", "get_electric_field_ids"], [94, 2, 1, "", "get_electric_fields"], [94, 2, 1, "", "get_electric_fields_for_channels"], [94, 2, 1, "", "get_first_trigger"], [94, 2, 1, "", "get_id"], [94, 2, 1, "", "get_parameter"], [94, 2, 1, "", "get_parameter_error"], [94, 2, 1, "", "get_parameters"], [94, 2, 1, "", "get_primary_trigger"], [94, 2, 1, "", "get_station_time"], [94, 2, 1, "", "get_station_time_dict"], [94, 2, 1, "", "get_trigger"], [94, 2, 1, "", "get_triggers"], [94, 2, 1, "", "has_ARIANNA_parameter"], [94, 2, 1, "", "has_parameter"], [94, 2, 1, "", "has_trigger"], [94, 2, 1, "", "has_triggered"], [94, 2, 1, "", "is_cosmic_ray"], [94, 2, 1, "", "is_neutrino"], [94, 2, 1, "", "remove_parameter"], [94, 2, 1, "", "remove_triggers"], [94, 2, 1, "", "serialize"], [94, 2, 1, "", "set_ARIANNA_parameter"], [94, 2, 1, "", "set_electric_fields"], [94, 2, 1, "", "set_is_cosmic_ray"], [94, 2, 1, "", "set_is_neutrino"], [94, 2, 1, "", "set_parameter"], [94, 2, 1, "", "set_parameter_error"], [94, 2, 1, "", "set_station_time"], [94, 2, 1, "", "set_trigger"], [94, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.base_trace": [[95, 1, 1, "", "BaseTrace"], [95, 3, 1, "", "get_frequencies"]], "NuRadioReco.framework.base_trace.BaseTrace": [[95, 2, 1, "", "add_to_trace"], [95, 2, 1, "", "add_trace_start_time"], [95, 2, 1, "", "apply_time_shift"], [95, 2, 1, "", "deserialize"], [95, 2, 1, "", "get_filtered_trace"], [95, 2, 1, "", "get_frequencies"], [95, 2, 1, "", "get_frequency_spectrum"], [95, 2, 1, "", "get_hilbert_envelope"], [95, 2, 1, "", "get_hilbert_envelope_mag"], [95, 2, 1, "", "get_number_of_samples"], [95, 2, 1, "", "get_sampling_rate"], [95, 2, 1, "", "get_times"], [95, 2, 1, "", "get_trace"], [95, 2, 1, "", "get_trace_start_time"], [95, 2, 1, "", "resample"], [95, 2, 1, "", "serialize"], [95, 2, 1, "", "set_frequency_spectrum"], [95, 2, 1, "", "set_trace"], [95, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.channel": [[96, 1, 1, "", "Channel"]], "NuRadioReco.framework.channel.Channel": [[96, 2, 1, "", "add_to_trace"], [96, 2, 1, "", "add_trace_start_time"], [96, 2, 1, "", "apply_time_shift"], [96, 2, 1, "", "deserialize"], [96, 2, 1, "", "get_filtered_trace"], [96, 2, 1, "", "get_frequencies"], [96, 2, 1, "", "get_frequency_spectrum"], [96, 2, 1, "", "get_group_id"], [96, 2, 1, "", "get_hilbert_envelope"], [96, 2, 1, "", "get_hilbert_envelope_mag"], [96, 2, 1, "", "get_id"], [96, 2, 1, "", "get_number_of_samples"], [96, 2, 1, "", "get_parameter"], [96, 2, 1, "", "get_parameters"], [96, 2, 1, "", "get_sampling_rate"], [96, 2, 1, "", "get_times"], [96, 2, 1, "", "get_trace"], [96, 2, 1, "", "get_trace_start_time"], [96, 2, 1, "", "has_parameter"], [96, 2, 1, "", "resample"], [96, 2, 1, "", "serialize"], [96, 2, 1, "", "set_frequency_spectrum"], [96, 2, 1, "", "set_parameter"], [96, 2, 1, "", "set_trace"], [96, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.electric_field": [[97, 1, 1, "", "ElectricField"]], "NuRadioReco.framework.electric_field.ElectricField": [[97, 2, 1, "", "add_to_trace"], [97, 2, 1, "", "add_trace_start_time"], [97, 2, 1, "", "apply_time_shift"], [97, 2, 1, "", "deserialize"], [97, 2, 1, "", "get_channel_ids"], [97, 2, 1, "", "get_filtered_trace"], [97, 2, 1, "", "get_frequencies"], [97, 2, 1, "", "get_frequency_spectrum"], [97, 2, 1, "", "get_hilbert_envelope"], [97, 2, 1, "", "get_hilbert_envelope_mag"], [97, 2, 1, "", "get_number_of_samples"], [97, 2, 1, "", "get_parameter"], [97, 2, 1, "", "get_parameter_error"], [97, 2, 1, "", "get_parameters"], [97, 2, 1, "", "get_position"], [97, 2, 1, "", "get_ray_tracing_solution_id"], [97, 2, 1, "", "get_sampling_rate"], [97, 2, 1, "", "get_shower_id"], [97, 2, 1, "", "get_stokes_parameters"], [97, 2, 1, "", "get_times"], [97, 2, 1, "", "get_trace"], [97, 2, 1, "", "get_trace_start_time"], [97, 2, 1, "", "get_unique_identifier"], [97, 2, 1, "", "has_channel_ids"], [97, 2, 1, "", "has_parameter"], [97, 2, 1, "", "has_parameter_error"], [97, 2, 1, "", "resample"], [97, 2, 1, "", "serialize"], [97, 2, 1, "", "set_channel_ids"], [97, 2, 1, "", "set_frequency_spectrum"], [97, 2, 1, "", "set_parameter"], [97, 2, 1, "", "set_parameter_error"], [97, 2, 1, "", "set_position"], [97, 2, 1, "", "set_trace"], [97, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.emitter": [[98, 1, 1, "", "Emitter"]], "NuRadioReco.framework.emitter.Emitter": [[98, 2, 1, "", "deserialize"], [98, 2, 1, "", "get_id"], [98, 2, 1, "", "get_parameter"], [98, 2, 1, "", "get_parameters"], [98, 2, 1, "", "get_station_ids"], [98, 2, 1, "", "has_parameter"], [98, 2, 1, "", "has_station_ids"], [98, 2, 1, "", "serialize"], [98, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.event": [[99, 1, 1, "", "Event"]], "NuRadioReco.framework.event.Event": [[99, 2, 1, "", "add_particle"], [99, 2, 1, "", "add_shower"], [99, 2, 1, "", "add_sim_emitter"], [99, 2, 1, "", "add_sim_shower"], [99, 2, 1, "", "deserialize"], [99, 2, 1, "", "get_event_time"], [99, 2, 1, "", "get_first_shower"], [99, 2, 1, "", "get_first_sim_emitter"], [99, 2, 1, "", "get_first_sim_shower"], [99, 2, 1, "", "get_generator_info"], [99, 2, 1, "", "get_hybrid_information"], [99, 2, 1, "", "get_id"], [99, 2, 1, "", "get_interaction_products"], [99, 2, 1, "", "get_parameter"], [99, 2, 1, "", "get_parent"], [99, 2, 1, "", "get_particle"], [99, 2, 1, "", "get_particles"], [99, 2, 1, "", "get_primary"], [99, 2, 1, "", "get_run_number"], [99, 2, 1, "", "get_shower"], [99, 2, 1, "", "get_showers"], [99, 2, 1, "", "get_sim_emitter"], [99, 2, 1, "", "get_sim_emitters"], [99, 2, 1, "", "get_sim_shower"], [99, 2, 1, "", "get_sim_showers"], [99, 2, 1, "", "get_station"], [99, 2, 1, "", "get_station_ids"], [99, 2, 1, "", "get_stations"], [99, 2, 1, "", "has_generator_info"], [99, 2, 1, "", "has_parameter"], [99, 2, 1, "", "has_particle"], [99, 2, 1, "", "has_shower"], [99, 2, 1, "", "has_sim_emitter"], [99, 2, 1, "", "has_sim_shower"], [99, 2, 1, "", "has_triggered"], [99, 2, 1, "", "iter_modules"], [99, 2, 1, "", "register_module_event"], [99, 2, 1, "", "register_module_station"], [99, 2, 1, "", "serialize"], [99, 2, 1, "", "set_event_time"], [99, 2, 1, "", "set_generator_info"], [99, 2, 1, "", "set_id"], [99, 2, 1, "", "set_parameter"], [99, 2, 1, "", "set_station"]], "NuRadioReco.framework.hybrid_information": [[100, 1, 1, "", "HybridInformation"]], "NuRadioReco.framework.hybrid_information.HybridInformation": [[100, 2, 1, "", "add_hybrid_shower"], [100, 2, 1, "", "deserialize"], [100, 2, 1, "", "get_hybrid_shower"], [100, 2, 1, "", "get_hybrid_showers"], [100, 2, 1, "", "serialize"]], "NuRadioReco.framework.hybrid_shower": [[101, 1, 1, "", "HybridShower"]], "NuRadioReco.framework.hybrid_shower.HybridShower": [[101, 2, 1, "", "deserialize"], [101, 2, 1, "", "get_axis"], [101, 2, 1, "", "get_coordinatesystem"], [101, 2, 1, "", "get_hybrid_detector"], [101, 2, 1, "", "get_id"], [101, 2, 1, "", "get_name"], [101, 2, 1, "", "get_parameter"], [101, 2, 1, "", "get_parameters"], [101, 2, 1, "", "has_parameter"], [101, 2, 1, "", "serialize"], [101, 2, 1, "", "set_hybrid_detector"], [101, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.parameter_serialization": [[102, 3, 1, "", "deserialize"], [102, 3, 1, "", "deserialize_covariances"], [102, 3, 1, "", "serialize"], [102, 3, 1, "", "serialize_covariances"]], "NuRadioReco.framework.parameters": [[103, 1, 1, "", "ARIANNAParameters"], [103, 1, 1, "", "channelParameters"], [103, 1, 1, "", "electricFieldParameters"], [103, 1, 1, "", "emitterParameters"], [103, 1, 1, "", "eventParameters"], [103, 1, 1, "", "generatorAttributes"], [103, 1, 1, "", "particleParameters"], [103, 1, 1, "", "showerParameters"], [103, 1, 1, "", "stationParameters"]], "NuRadioReco.framework.parameters.ARIANNAParameters": [[103, 6, 1, "", "comm_duration"], [103, 6, 1, "", "comm_period"], [103, 6, 1, "", "internal_clock_time"], [103, 6, 1, "", "l1_supression_value"], [103, 6, 1, "", "seq_num"], [103, 6, 1, "", "seq_start_time"], [103, 6, 1, "", "seq_stop_time"], [103, 6, 1, "", "trigger_thresholds"]], "NuRadioReco.framework.parameters.channelParameters": [[103, 6, 1, "", "P2P_amplitude"], [103, 6, 1, "", "SNR"], [103, 6, 1, "", "Vrms_NuRadioMC_simulation"], [103, 6, 1, "", "azimuth"], [103, 6, 1, "", "bandwidth_NuRadioMC_simulation"], [103, 6, 1, "", "block_offsets"], [103, 6, 1, "", "cr_xcorrelations"], [103, 6, 1, "", "maximum_amplitude"], [103, 6, 1, "", "maximum_amplitude_envelope"], [103, 6, 1, "", "noise_regions"], [103, 6, 1, "", "noise_rms"], [103, 6, 1, "", "nu_xcorrelations"], [103, 6, 1, "", "signal_ray_type"], [103, 6, 1, "", "signal_receiving_azimuth"], [103, 6, 1, "", "signal_receiving_zenith"], [103, 6, 1, "", "signal_regions"], [103, 6, 1, "", "signal_time"], [103, 6, 1, "", "signal_time_offset"], [103, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.electricFieldParameters": [[103, 6, 1, "", "azimuth"], [103, 6, 1, "", "cr_spectrum_quadratic_term"], [103, 6, 1, "", "cr_spectrum_slope"], [103, 6, 1, "", "energy_fluence_ratios"], [103, 6, 1, "", "launch_vector"], [103, 6, 1, "", "max_amp_antenna"], [103, 6, 1, "", "max_amp_antenna_envelope"], [103, 6, 1, "", "nu_vertex_distance"], [103, 6, 1, "", "nu_vertex_propagation_time"], [103, 6, 1, "", "nu_viewing_angle"], [103, 6, 1, "", "polarization_angle"], [103, 6, 1, "", "polarization_angle_expectation"], [103, 6, 1, "", "ray_path_type"], [103, 6, 1, "", "raytracing_solution"], [103, 6, 1, "", "reflection_coefficient_phi"], [103, 6, 1, "", "reflection_coefficient_theta"], [103, 6, 1, "", "signal_energy_fluence"], [103, 6, 1, "", "signal_time"], [103, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.emitterParameters": [[103, 6, 1, "", "amplitude"], [103, 6, 1, "", "antenna_type"], [103, 6, 1, "", "frequency"], [103, 6, 1, "", "half_width"], [103, 6, 1, "", "model"], [103, 6, 1, "", "orientation_phi"], [103, 6, 1, "", "orientation_theta"], [103, 6, 1, "", "polarization"], [103, 6, 1, "", "position"], [103, 6, 1, "", "realization_id"], [103, 6, 1, "", "rotation_phi"], [103, 6, 1, "", "rotation_theta"], [103, 6, 1, "", "time"]], "NuRadioReco.framework.parameters.eventParameters": [[103, 6, 1, "", "hash_NuRadioMC"], [103, 6, 1, "", "hash_NuRadioReco"], [103, 6, 1, "", "sim_config"]], "NuRadioReco.framework.parameters.generatorAttributes": [[103, 6, 1, "", "Emax"], [103, 6, 1, "", "Emin"], [103, 6, 1, "", "NuRadioMC_EvtGen_version"], [103, 6, 1, "", "NuRadioMC_EvtGen_version_hash"], [103, 6, 1, "", "NuRadioMC_version"], [103, 6, 1, "", "NuRadioMC_version_hash"], [103, 6, 1, "", "Tnoise"], [103, 6, 1, "", "Vrms"], [103, 6, 1, "", "area"], [103, 6, 1, "", "bandwidth"], [103, 6, 1, "", "deposited"], [103, 6, 1, "", "dt"], [103, 6, 1, "", "fiducial_rmax"], [103, 6, 1, "", "fiducial_rmin"], [103, 6, 1, "", "fiducial_xmax"], [103, 6, 1, "", "fiducial_xmin"], [103, 6, 1, "", "fiducial_ymax"], [103, 6, 1, "", "fiducial_ymin"], [103, 6, 1, "", "fiducial_zmax"], [103, 6, 1, "", "fiducial_zmin"], [103, 6, 1, "", "flavors"], [103, 6, 1, "", "n_events"], [103, 6, 1, "", "n_samples"], [103, 6, 1, "", "phimax"], [103, 6, 1, "", "phimin"], [103, 6, 1, "", "rmax"], [103, 6, 1, "", "rmin"], [103, 6, 1, "", "start_event_id"], [103, 6, 1, "", "thetamax"], [103, 6, 1, "", "thetamin"], [103, 6, 1, "", "total_number_of_events"], [103, 6, 1, "", "volume"], [103, 6, 1, "", "xmax"], [103, 6, 1, "", "xmin"], [103, 6, 1, "", "ymax"], [103, 6, 1, "", "ymin"], [103, 6, 1, "", "zmax"], [103, 6, 1, "", "zmin"]], "NuRadioReco.framework.parameters.particleParameters": [[103, 6, 1, "", "azimuth"], [103, 6, 1, "", "cr_azimuth"], [103, 6, 1, "", "cr_energy"], [103, 6, 1, "", "cr_energy_em"], [103, 6, 1, "", "cr_zenith"], [103, 6, 1, "", "energy"], [103, 6, 1, "", "flavor"], [103, 6, 1, "", "inelasticity"], [103, 6, 1, "", "interaction_type"], [103, 6, 1, "", "n_interaction"], [103, 6, 1, "", "parent_id"], [103, 6, 1, "", "shower_id"], [103, 6, 1, "", "vertex"], [103, 6, 1, "", "vertex_time"], [103, 6, 1, "", "weight"], [103, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.showerParameters": [[103, 6, 1, "", "atmospheric_model"], [103, 6, 1, "", "azimuth"], [103, 6, 1, "", "charge_excess_profile_id"], [103, 6, 1, "", "core"], [103, 6, 1, "", "distance_shower_maximum_geometric"], [103, 6, 1, "", "distance_shower_maximum_grammage"], [103, 6, 1, "", "electromagnetic_energy"], [103, 6, 1, "", "electromagnetic_radiation_energy"], [103, 6, 1, "", "energy"], [103, 6, 1, "", "flavor"], [103, 6, 1, "", "interaction_type"], [103, 6, 1, "", "interferometric_core"], [103, 6, 1, "", "interferometric_shower_axis"], [103, 6, 1, "", "interferometric_shower_maximum"], [103, 6, 1, "", "k_L"], [103, 6, 1, "", "magnetic_field_rotation"], [103, 6, 1, "", "magnetic_field_vector"], [103, 6, 1, "", "n_interaction"], [103, 6, 1, "", "observation_level"], [103, 6, 1, "", "parent_id"], [103, 6, 1, "", "primary_particle"], [103, 6, 1, "", "radiation_energy"], [103, 6, 1, "", "refractive_index_at_ground"], [103, 6, 1, "", "shower_maximum"], [103, 6, 1, "", "type"], [103, 6, 1, "", "vertex"], [103, 6, 1, "", "vertex_time"], [103, 6, 1, "", "zenith"]], "NuRadioReco.framework.parameters.stationParameters": [[103, 6, 1, "", "azimuth"], [103, 6, 1, "", "ccnc"], [103, 6, 1, "", "channels_max_amplitude"], [103, 6, 1, "", "chi2_efield_time_direction_fit"], [103, 6, 1, "", "cr_azimuth"], [103, 6, 1, "", "cr_dominant_polarisation"], [103, 6, 1, "", "cr_energy"], [103, 6, 1, "", "cr_energy_em"], [103, 6, 1, "", "cr_xcorrelations"], [103, 6, 1, "", "cr_xmax"], [103, 6, 1, "", "cr_zenith"], [103, 6, 1, "", "dirty_fft_channels"], [103, 6, 1, "", "distance_correlations"], [103, 6, 1, "", "flagged_channels"], [103, 6, 1, "", "inelasticity"], [103, 6, 1, "", "ndf_efield_time_direction_fit"], [103, 6, 1, "", "nu_azimuth"], [103, 6, 1, "", "nu_energy"], [103, 6, 1, "", "nu_flavor"], [103, 6, 1, "", "nu_inttype"], [103, 6, 1, "", "nu_vertex"], [103, 6, 1, "", "nu_xcorrelations"], [103, 6, 1, "", "nu_zenith"], [103, 6, 1, "", "shower_energy"], [103, 6, 1, "", "station_time"], [103, 6, 1, "", "triggered"], [103, 6, 1, "", "vertex_2D_fit"], [103, 6, 1, "", "viewing_angles"], [103, 6, 1, "", "zenith"], [103, 6, 1, "", "zenith_cr_templatefit"], [103, 6, 1, "", "zenith_nu_templatefit"]], "NuRadioReco.framework.particle": [[104, 1, 1, "", "Particle"]], "NuRadioReco.framework.particle.Particle": [[104, 2, 1, "", "as_hdf5_dict"], [104, 2, 1, "", "deserialize"], [104, 2, 1, "", "get_id"], [104, 2, 1, "", "get_parameter"], [104, 2, 1, "", "get_parameters"], [104, 2, 1, "", "has_parameter"], [104, 2, 1, "", "serialize"], [104, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.radio_shower": [[105, 1, 1, "", "RadioShower"]], "NuRadioReco.framework.radio_shower.RadioShower": [[105, 2, 1, "", "deserialize"], [105, 2, 1, "", "get_axis"], [105, 2, 1, "", "get_coordinatesystem"], [105, 2, 1, "", "get_id"], [105, 2, 1, "", "get_parameter"], [105, 2, 1, "", "get_parameters"], [105, 2, 1, "", "get_station_ids"], [105, 2, 1, "", "has_parameter"], [105, 2, 1, "", "has_station_ids"], [105, 2, 1, "", "serialize"], [105, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_channel": [[106, 1, 1, "", "SimChannel"]], "NuRadioReco.framework.sim_channel.SimChannel": [[106, 2, 1, "", "add_to_trace"], [106, 2, 1, "", "add_trace_start_time"], [106, 2, 1, "", "apply_time_shift"], [106, 2, 1, "", "deserialize"], [106, 2, 1, "", "get_filtered_trace"], [106, 2, 1, "", "get_frequencies"], [106, 2, 1, "", "get_frequency_spectrum"], [106, 2, 1, "", "get_group_id"], [106, 2, 1, "", "get_hilbert_envelope"], [106, 2, 1, "", "get_hilbert_envelope_mag"], [106, 2, 1, "", "get_id"], [106, 2, 1, "", "get_number_of_samples"], [106, 2, 1, "", "get_parameter"], [106, 2, 1, "", "get_parameters"], [106, 2, 1, "", "get_ray_tracing_solution_id"], [106, 2, 1, "", "get_sampling_rate"], [106, 2, 1, "", "get_shower_id"], [106, 2, 1, "", "get_times"], [106, 2, 1, "", "get_trace"], [106, 2, 1, "", "get_trace_start_time"], [106, 2, 1, "", "get_unique_identifier"], [106, 2, 1, "", "has_parameter"], [106, 2, 1, "", "resample"], [106, 2, 1, "", "serialize"], [106, 2, 1, "", "set_frequency_spectrum"], [106, 2, 1, "", "set_parameter"], [106, 2, 1, "", "set_trace"], [106, 2, 1, "", "set_trace_start_time"]], "NuRadioReco.framework.sim_emitter": [[107, 1, 1, "", "SimEmitter"]], "NuRadioReco.framework.sim_emitter.SimEmitter": [[107, 2, 1, "", "deserialize"], [107, 2, 1, "", "get_id"], [107, 2, 1, "", "get_parameter"], [107, 2, 1, "", "get_parameters"], [107, 2, 1, "", "get_station_ids"], [107, 2, 1, "", "has_parameter"], [107, 2, 1, "", "has_station_ids"], [107, 2, 1, "", "serialize"], [107, 2, 1, "", "set_parameter"]], "NuRadioReco.framework.sim_station": [[108, 1, 1, "", "SimStation"]], "NuRadioReco.framework.sim_station.SimStation": [[108, 2, 1, "", "add_channel"], [108, 2, 1, "", "add_electric_field"], [108, 2, 1, "", "deserialize"], [108, 2, 1, "", "get_ARIANNA_parameter"], [108, 2, 1, "", "get_ARIANNA_parameters"], [108, 2, 1, "", "get_channel"], [108, 2, 1, "", "get_channel_ids"], [108, 2, 1, "", "get_channels_by_channel_id"], [108, 2, 1, "", "get_channels_by_ray_tracing_id"], [108, 2, 1, "", "get_channels_by_shower_id"], [108, 2, 1, "", "get_electric_field_ids"], [108, 2, 1, "", "get_electric_fields"], [108, 2, 1, "", "get_electric_fields_for_channels"], [108, 2, 1, "", "get_first_trigger"], [108, 2, 1, "", "get_id"], [108, 2, 1, "", "get_magnetic_field_vector"], [108, 2, 1, "", "get_parameter"], [108, 2, 1, "", "get_parameter_error"], [108, 2, 1, "", "get_parameters"], [108, 2, 1, "", "get_primary_trigger"], [108, 2, 1, "", "get_ray_tracing_ids"], [108, 2, 1, "", "get_shower_ids"], [108, 2, 1, "", "get_simulation_weight"], [108, 2, 1, "", "get_station_time"], [108, 2, 1, "", "get_station_time_dict"], [108, 2, 1, "", "get_trigger"], [108, 2, 1, "", "get_triggers"], [108, 2, 1, "", "has_ARIANNA_parameter"], [108, 2, 1, "", "has_parameter"], [108, 2, 1, "", "has_trigger"], [108, 2, 1, "", "has_triggered"], [108, 2, 1, "", "is_candidate"], [108, 2, 1, "", "is_cosmic_ray"], [108, 2, 1, "", "is_neutrino"], [108, 2, 1, "", "iter_channels"], [108, 2, 1, "", "remove_parameter"], [108, 2, 1, "", "remove_triggers"], [108, 2, 1, "", "serialize"], [108, 2, 1, "", "set_ARIANNA_parameter"], [108, 2, 1, "", "set_candidate"], [108, 2, 1, "", "set_electric_fields"], [108, 2, 1, "", "set_is_cosmic_ray"], [108, 2, 1, "", "set_is_neutrino"], [108, 2, 1, "", "set_magnetic_field_vector"], [108, 2, 1, "", "set_parameter"], [108, 2, 1, "", "set_parameter_error"], [108, 2, 1, "", "set_simulation_weight"], [108, 2, 1, "", "set_station_time"], [108, 2, 1, "", "set_trigger"], [108, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.station": [[109, 1, 1, "", "Station"]], "NuRadioReco.framework.station.Station": [[109, 2, 1, "", "add_channel"], [109, 2, 1, "", "add_electric_field"], [109, 2, 1, "", "add_sim_station"], [109, 2, 1, "", "deserialize"], [109, 2, 1, "", "get_ARIANNA_parameter"], [109, 2, 1, "", "get_ARIANNA_parameters"], [109, 2, 1, "", "get_channel"], [109, 2, 1, "", "get_channel_ids"], [109, 2, 1, "", "get_electric_field_ids"], [109, 2, 1, "", "get_electric_fields"], [109, 2, 1, "", "get_electric_fields_for_channels"], [109, 2, 1, "", "get_first_trigger"], [109, 2, 1, "", "get_id"], [109, 2, 1, "", "get_magnetic_field_vector"], [109, 2, 1, "", "get_number_of_channels"], [109, 2, 1, "", "get_parameter"], [109, 2, 1, "", "get_parameter_error"], [109, 2, 1, "", "get_parameters"], [109, 2, 1, "", "get_primary_trigger"], [109, 2, 1, "", "get_reference_direction"], [109, 2, 1, "", "get_reference_reconstruction"], [109, 2, 1, "", "get_sim_station"], [109, 2, 1, "", "get_station_time"], [109, 2, 1, "", "get_station_time_dict"], [109, 2, 1, "", "get_trigger"], [109, 2, 1, "", "get_triggers"], [109, 2, 1, "", "has_ARIANNA_parameter"], [109, 2, 1, "", "has_channel"], [109, 2, 1, "", "has_parameter"], [109, 2, 1, "", "has_sim_station"], [109, 2, 1, "", "has_trigger"], [109, 2, 1, "", "has_triggered"], [109, 2, 1, "", "is_cosmic_ray"], [109, 2, 1, "", "is_neutrino"], [109, 2, 1, "", "iter_channel_group"], [109, 2, 1, "", "iter_channels"], [109, 2, 1, "", "remove_channel"], [109, 2, 1, "", "remove_parameter"], [109, 2, 1, "", "remove_triggers"], [109, 2, 1, "", "serialize"], [109, 2, 1, "", "set_ARIANNA_parameter"], [109, 2, 1, "", "set_electric_fields"], [109, 2, 1, "", "set_is_cosmic_ray"], [109, 2, 1, "", "set_is_neutrino"], [109, 2, 1, "", "set_parameter"], [109, 2, 1, "", "set_parameter_error"], [109, 2, 1, "", "set_reference_reconstruction"], [109, 2, 1, "", "set_sim_station"], [109, 2, 1, "", "set_station_time"], [109, 2, 1, "", "set_trigger"], [109, 2, 1, "", "set_triggered"]], "NuRadioReco.framework.trigger": [[110, 1, 1, "", "EnvelopePhasedTrigger"], [110, 1, 1, "", "EnvelopeTrigger"], [110, 1, 1, "", "HighLowTrigger"], [110, 1, 1, "", "IntegratedPowerTrigger"], [110, 1, 1, "", "RNOGSurfaceTrigger"], [110, 1, 1, "", "SimplePhasedTrigger"], [110, 1, 1, "", "SimpleThresholdTrigger"], [110, 1, 1, "", "Trigger"], [110, 3, 1, "", "deserialize"]], "NuRadioReco.framework.trigger.EnvelopePhasedTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.EnvelopeTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.HighLowTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.IntegratedPowerTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.RNOGSurfaceTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"], [110, 6, 1, "", "units"]], "NuRadioReco.framework.trigger.SimplePhasedTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.SimpleThresholdTrigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.framework.trigger.Trigger": [[110, 2, 1, "", "deserialize"], [110, 2, 1, "", "get_name"], [110, 2, 1, "", "get_pre_trigger_time_channel"], [110, 2, 1, "", "get_pre_trigger_times"], [110, 2, 1, "", "get_trigger_settings"], [110, 2, 1, "", "get_trigger_time"], [110, 2, 1, "", "get_trigger_times"], [110, 2, 1, "", "get_triggered_channels"], [110, 2, 1, "", "get_type"], [110, 2, 1, "", "has_triggered"], [110, 2, 1, "", "is_primary"], [110, 2, 1, "", "serialize"], [110, 2, 1, "", "set_pre_trigger_times"], [110, 2, 1, "", "set_primary"], [110, 2, 1, "", "set_trigger_time"], [110, 2, 1, "", "set_trigger_times"], [110, 2, 1, "", "set_triggered"], [110, 2, 1, "", "set_triggered_channels"]], "NuRadioReco.modules": [[112, 0, 0, "-", "ARA"], [115, 0, 0, "-", "ARIANNA"], [117, 0, 0, "-", "LOFAR"], [123, 0, 0, "-", "RNO_G"], [128, 0, 0, "-", "analogToDigitalConverter"], [129, 0, 0, "-", "base"], [131, 0, 0, "-", "beamFormingDirectionFitter"], [132, 0, 0, "-", "channelAddCableDelay"], [133, 0, 0, "-", "channelAntennaDedispersion"], [134, 0, 0, "-", "channelBandPassFilter"], [135, 0, 0, "-", "channelCWNotchFilter"], [136, 0, 0, "-", "channelGalacticNoiseAdder"], [137, 0, 0, "-", "channelGenericNoiseAdder"], [138, 0, 0, "-", "channelLengthAdjuster"], [139, 0, 0, "-", "channelResampler"], [140, 0, 0, "-", "channelSignalReconstructor"], [141, 0, 0, "-", "channelStopFilter"], [142, 0, 0, "-", "channelTemplateCorrelation"], [143, 0, 0, "-", "channelTimeOffsetCalculator"], [144, 0, 0, "-", "channelTimeWindow"], [145, 0, 0, "-", "correlationDirectionFitter"], [146, 0, 0, "-", "cosmicRayEnergyReconstructor"], [147, 0, 0, "-", "custom"], [150, 0, 0, "-", "efieldAirToIcePropagator"], [151, 0, 0, "-", "efieldRadioInterferometricReconstruction"], [152, 0, 0, "-", "efieldTimeDirectionFitter"], [153, 0, 0, "-", "efieldToVoltageConverter"], [154, 0, 0, "-", "efieldToVoltageConverterPerEfield"], [155, 0, 0, "-", "electricFieldBandPassFilter"], [156, 0, 0, "-", "electricFieldResampler"], [157, 0, 0, "-", "electricFieldSignalReconstructor"], [158, 0, 0, "-", "eventTypeIdentifier"], [159, 0, 0, "-", "iftElectricFieldReconstructor"], [162, 0, 0, "-", "io"], [184, 0, 0, "-", "measured_noise"], [190, 0, 0, "-", "neutrinoDirectionReconstructor"], [192, 0, 0, "-", "neutrinoVertexReconstructor"], [196, 0, 0, "-", "phasedarray"], [198, 0, 0, "-", "sphericalWaveFitter"], [199, 0, 0, "-", "templateDirectionFitter"], [200, 0, 0, "-", "trigger"], [208, 0, 0, "-", "triggerTimeAdjuster"], [209, 0, 0, "-", "voltageToAnalyticEfieldConverter"], [210, 0, 0, "-", "voltageToEfieldConverter"], [211, 0, 0, "-", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.ARA": [[113, 0, 0, "-", "hardwareResponseIncorporator"], [114, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator": [[113, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[113, 2, 1, "", "begin"], [113, 2, 1, "", "end"], [113, 2, 1, "", "run"]], "NuRadioReco.modules.ARA.triggerSimulator": [[114, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator": [[114, 2, 1, "", "end"], [114, 2, 1, "", "has_triggered"], [114, 2, 1, "", "run"]], "NuRadioReco.modules.ARIANNA": [[116, 0, 0, "-", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator": [[116, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator": [[116, 2, 1, "", "begin"], [116, 2, 1, "", "end"], [116, 2, 1, "", "get_filter"], [116, 2, 1, "", "get_mingainlin"], [116, 2, 1, "", "get_time_delay"], [116, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR": [[118, 0, 0, "-", "beamformingDirectionFitter_LOFAR"], [119, 0, 0, "-", "beamforming_utilities"], [120, 0, 0, "-", "stationGalacticCalibrator"], [121, 0, 0, "-", "stationPulseFinder"], [122, 0, 0, "-", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR": [[118, 1, 1, "", "beamformingDirectionFitter"], [118, 3, 1, "", "geometric_delays"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter": [[118, 2, 1, "", "begin"], [118, 2, 1, "", "end"], [118, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.beamforming_utilities": [[119, 3, 1, "", "GeometricDelayFarField"], [119, 3, 1, "", "beamformer"], [119, 3, 1, "", "geometric_delays"], [119, 3, 1, "", "mini_beamformer"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator": [[120, 3, 1, "", "fourier_series"], [120, 1, 1, "", "stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator": [[120, 2, 1, "", "begin"], [120, 2, 1, "", "end"], [120, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationPulseFinder": [[121, 3, 1, "", "find_snr_of_timeseries"], [121, 1, 1, "", "stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder": [[121, 2, 1, "", "begin"], [121, 2, 1, "", "end"], [121, 2, 1, "", "run"]], "NuRadioReco.modules.LOFAR.stationRFIFilter": [[122, 3, 1, "", "FindRFI_LOFAR"], [122, 3, 1, "", "median_sorted_by_power"], [122, 3, 1, "", "num_double_zeros"], [122, 1, 1, "", "stationRFIFilter"]], "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter": [[122, 2, 1, "", "begin"], [122, 2, 1, "", "end"], [122, 5, 1, "", "metadata_dir"], [122, 2, 1, "", "run"], [122, 5, 1, "", "station_list"]], "NuRadioReco.modules.RNO_G": [[124, 0, 0, "-", "channelBlockOffsetFitter"], [125, 0, 0, "-", "crRNOGTemplateCreator"], [126, 0, 0, "-", "hardwareResponseIncorporator"], [127, 0, 0, "-", "triggerBoardResponse"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter": [[124, 1, 1, "", "channelBlockOffsets"], [124, 3, 1, "", "fit_block_offsets"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets": [[124, 2, 1, "", "add_offsets"], [124, 2, 1, "", "remove_offsets"]], "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator": [[125, 1, 1, "", "crRNOGTemplateCreator"]], "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.crRNOGTemplateCreator": [[125, 2, 1, "", "begin"], [125, 2, 1, "", "run"], [125, 2, 1, "", "set_template_parameter"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator": [[126, 1, 1, "", "hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator": [[126, 2, 1, "", "begin"], [126, 2, 1, "", "end"], [126, 2, 1, "", "get_filter"], [126, 2, 1, "", "get_mingainlin"], [126, 2, 1, "", "get_time_delay"], [126, 2, 1, "", "run"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse": [[127, 1, 1, "", "triggerBoardResponse"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse": [[127, 2, 1, "", "apply_adc_gain"], [127, 2, 1, "", "apply_trigger_filter"], [127, 2, 1, "", "begin"], [127, 2, 1, "", "digitize_trace"], [127, 2, 1, "", "end"], [127, 2, 1, "", "get_avg_vrms"], [127, 2, 1, "", "get_trigger_values"], [127, 2, 1, "", "run"]], "NuRadioReco.modules.analogToDigitalConverter": [[128, 1, 1, "", "analogToDigitalConverter"], [128, 3, 1, "", "apply_saturation"], [128, 3, 1, "", "perfect_ceiling_comparator"], [128, 3, 1, "", "perfect_comparator"], [128, 3, 1, "", "perfect_floor_comparator"], [128, 3, 1, "", "round_to_int"]], "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter": [[128, 2, 1, "", "end"], [128, 2, 1, "", "get_digital_trace"], [128, 2, 1, "", "run"]], "NuRadioReco.modules.base": [[130, 0, 0, "-", "module"]], "NuRadioReco.modules.base.module": [[130, 3, 1, "", "register_run"], [130, 3, 1, "", "setup_logger"]], "NuRadioReco.modules.beamFormingDirectionFitter": [[131, 1, 1, "", "beamFormingDirectionFitter"], [131, 3, 1, "", "get_array_of_channels"]], "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter": [[131, 2, 1, "", "begin"], [131, 2, 1, "", "end"], [131, 2, 1, "", "run"]], "NuRadioReco.modules.channelAddCableDelay": [[132, 1, 1, "", "channelAddCableDelay"]], "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay": [[132, 2, 1, "", "run"]], "NuRadioReco.modules.channelAntennaDedispersion": [[133, 1, 1, "", "channelAntennaDedispersion"]], "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion": [[133, 2, 1, "", "end"], [133, 2, 1, "", "run"]], "NuRadioReco.modules.channelBandPassFilter": [[134, 1, 1, "", "channelBandPassFilter"], [134, 3, 1, "", "test_equality"]], "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter": [[134, 2, 1, "", "begin"], [134, 2, 1, "", "end"], [134, 2, 1, "", "get_filter"], [134, 2, 1, "", "get_filter_arguments"], [134, 2, 1, "", "run"]], "NuRadioReco.modules.channelCWNotchFilter": [[135, 1, 1, "", "channelCWNotchFilter"], [135, 3, 1, "", "filter_cws"], [135, 3, 1, "", "find_frequency_peaks"], [135, 3, 1, "", "find_frequency_peaks_from_trace"], [135, 3, 1, "", "get_filter"], [135, 3, 1, "", "plot_ft"], [135, 3, 1, "", "plot_trace"]], "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter": [[135, 2, 1, "", "begin"], [135, 2, 1, "", "run"]], "NuRadioReco.modules.channelGalacticNoiseAdder": [[136, 1, 1, "", "channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder": [[136, 2, 1, "", "begin"], [136, 2, 1, "", "run"]], "NuRadioReco.modules.channelGenericNoiseAdder": [[137, 1, 1, "", "channelGenericNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder": [[137, 2, 1, "", "add_random_phases"], [137, 2, 1, "", "bandlimited_noise"], [137, 2, 1, "", "bandlimited_noise_from_precalculated_parameters"], [137, 2, 1, "", "bandlimited_noise_from_spectrum"], [137, 2, 1, "", "begin"], [137, 2, 1, "", "end"], [137, 2, 1, "", "fftnoise_fullfft"], [137, 2, 1, "", "precalculate_bandlimited_noise_parameters"], [137, 2, 1, "", "run"]], "NuRadioReco.modules.channelLengthAdjuster": [[138, 1, 1, "", "channelLengthAdjuster"]], "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster": [[138, 2, 1, "", "begin"], [138, 2, 1, "", "end"], [138, 2, 1, "", "run"]], "NuRadioReco.modules.channelResampler": [[139, 1, 1, "", "channelResampler"]], "NuRadioReco.modules.channelResampler.channelResampler": [[139, 2, 1, "", "begin"], [139, 2, 1, "", "end"], [139, 2, 1, "", "run"]], "NuRadioReco.modules.channelSignalReconstructor": [[140, 1, 1, "", "channelSignalReconstructor"]], "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor": [[140, 2, 1, "", "begin"], [140, 2, 1, "", "end"], [140, 2, 1, "", "get_SNR"], [140, 2, 1, "", "run"]], "NuRadioReco.modules.channelStopFilter": [[141, 1, 1, "", "channelStopFilter"]], "NuRadioReco.modules.channelStopFilter.channelStopFilter": [[141, 2, 1, "", "begin"], [141, 2, 1, "", "end"], [141, 2, 1, "", "run"]], "NuRadioReco.modules.channelTemplateCorrelation": [[142, 1, 1, "", "channelTemplateCorrelation"]], "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation": [[142, 2, 1, "", "begin"], [142, 2, 1, "", "end"], [142, 2, 1, "", "match_sampling"], [142, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeOffsetCalculator": [[143, 1, 1, "", "channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator": [[143, 2, 1, "", "begin"], [143, 2, 1, "", "run"]], "NuRadioReco.modules.channelTimeWindow": [[144, 1, 1, "", "channelTimeWindow"]], "NuRadioReco.modules.channelTimeWindow.channelTimeWindow": [[144, 2, 1, "", "begin"], [144, 2, 1, "", "end"], [144, 2, 1, "", "run"]], "NuRadioReco.modules.correlationDirectionFitter": [[145, 1, 1, "", "correlationDirectionFitter"]], "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter": [[145, 2, 1, "", "begin"], [145, 2, 1, "", "end"], [145, 2, 1, "", "run"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor": [[146, 1, 1, "", "cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor": [[146, 2, 1, "", "begin"], [146, 2, 1, "", "run"]], "NuRadioReco.modules.custom": [[148, 0, 0, "-", "deltaT"]], "NuRadioReco.modules.custom.deltaT": [[149, 0, 0, "-", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution": [[149, 1, 1, "", "calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution": [[149, 2, 1, "", "begin"], [149, 2, 1, "", "end"], [149, 2, 1, "", "run"]], "NuRadioReco.modules.efieldAirToIcePropagator": [[150, 1, 1, "", "efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator": [[150, 2, 1, "", "begin"], [150, 2, 1, "", "end"], [150, 2, 1, "", "run"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction": [[151, 1, 1, "", "efieldInterferometricAxisReco"], [151, 1, 1, "", "efieldInterferometricDepthReco"], [151, 3, 1, "", "get_geometry_and_transformation"], [151, 3, 1, "", "get_station_data"], [151, 4, 1, "", "logger"], [151, 3, 1, "", "plot_lateral_cross_section"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco": [[151, 2, 1, "", "begin"], [151, 2, 1, "", "end"], [151, 2, 1, "", "find_maximum_in_plane"], [151, 2, 1, "", "reconstruct_interferometric_depth"], [151, 2, 1, "", "reconstruct_shower_axis"], [151, 2, 1, "", "run"], [151, 2, 1, "", "sample_lateral_cross_section"], [151, 2, 1, "", "sample_longitudinal_profile"], [151, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco": [[151, 2, 1, "", "begin"], [151, 2, 1, "", "end"], [151, 2, 1, "", "reconstruct_interferometric_depth"], [151, 2, 1, "", "run"], [151, 2, 1, "", "sample_longitudinal_profile"], [151, 2, 1, "", "update_atmospheric_model_and_refractivity_table"]], "NuRadioReco.modules.efieldTimeDirectionFitter": [[152, 1, 1, "", "efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter": [[152, 2, 1, "", "begin"], [152, 2, 1, "", "end"], [152, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverter": [[153, 3, 1, "", "calculate_time_shift_for_cosmic_ray"], [153, 1, 1, "", "efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter": [[153, 2, 1, "", "begin"], [153, 2, 1, "", "end"], [153, 2, 1, "", "run"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield": [[154, 1, 1, "", "efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield": [[154, 2, 1, "", "end"], [154, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldBandPassFilter": [[155, 1, 1, "", "electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter": [[155, 2, 1, "", "begin"], [155, 2, 1, "", "end"], [155, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldResampler": [[156, 1, 1, "", "electricFieldResampler"]], "NuRadioReco.modules.electricFieldResampler.electricFieldResampler": [[156, 2, 1, "", "begin"], [156, 2, 1, "", "end"], [156, 2, 1, "", "run"]], "NuRadioReco.modules.electricFieldSignalReconstructor": [[157, 1, 1, "", "electricFieldSignalReconstructor"]], "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor": [[157, 2, 1, "", "begin"], [157, 2, 1, "", "end"], [157, 2, 1, "", "run"]], "NuRadioReco.modules.eventTypeIdentifier": [[158, 1, 1, "", "eventTypeIdentifier"]], "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier": [[158, 2, 1, "", "begin"], [158, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor": [[160, 0, 0, "-", "iftElectricFieldReconstructor"], [161, 0, 0, "-", "operators"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor": [[160, 1, 1, "", "IftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor": [[160, 2, 1, "", "begin"], [160, 2, 1, "", "make_priors_plot"], [160, 2, 1, "", "run"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators": [[161, 1, 1, "", "DomainFlipper"], [161, 1, 1, "", "Inserter"], [161, 1, 1, "", "LinearSlopeOperator"], [161, 3, 1, "", "SlopeSpectrumOperator"], [161, 1, 1, "", "SymmetrizingOperator"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper": [[161, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter": [[161, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator": [[161, 2, 1, "", "apply"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator": [[161, 2, 1, "", "apply"]], "NuRadioReco.modules.io": [[163, 0, 0, "-", "LOFAR"], [168, 0, 0, "-", "NuRadioRecoio"], [169, 0, 0, "-", "RNO_G"], [171, 0, 0, "-", "coreas"], [178, 0, 0, "-", "eventReader"], [179, 0, 0, "-", "eventWriter"], [180, 0, 0, "-", "event_parser_factory"], [181, 0, 0, "-", "snowshovel"]], "NuRadioReco.modules.io.LOFAR": [[164, 0, 0, "-", "rawTBBio"], [165, 0, 0, "-", "rawTBBio_metadata"], [166, 0, 0, "-", "rawTBBio_utilities"], [167, 0, 0, "-", "readLOFARData"]], "NuRadioReco.modules.io.LOFAR.rawTBBio": [[164, 1, 1, "", "MultiFile_Dal1"], [164, 1, 1, "", "TBBData_Dal1"], [164, 3, 1, "", "decode_if_needed"], [164, 3, 1, "", "read_antenna_delays"], [164, 3, 1, "", "read_antenna_pol_flips"], [164, 3, 1, "", "read_bad_antennas"], [164, 3, 1, "", "read_station_delays"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1": [[164, 2, 1, "", "close_file"], [164, 2, 1, "", "find_and_set_polarization_delay"], [164, 2, 1, "", "get_ITRF_antenna_positions"], [164, 2, 1, "", "get_LOFAR_centered_positions"], [164, 2, 1, "", "get_all_sample_numbers"], [164, 2, 1, "", "get_antenna_names"], [164, 2, 1, "", "get_antenna_set"], [164, 2, 1, "", "get_data"], [164, 2, 1, "", "get_filter_selection"], [164, 2, 1, "", "get_full_data_lengths"], [164, 2, 1, "", "get_geometric_delays"], [164, 2, 1, "", "get_nominal_data_lengths"], [164, 2, 1, "", "get_nominal_sample_number"], [164, 2, 1, "", "get_sample_frequency"], [164, 2, 1, "", "get_station_ID"], [164, 2, 1, "", "get_station_name"], [164, 2, 1, "", "get_time_from_second"], [164, 2, 1, "", "get_timestamp"], [164, 2, 1, "", "get_timestamp_as_datetime"], [164, 2, 1, "", "get_timing_callibration_delays"], [164, 2, 1, "", "get_timing_callibration_phases"], [164, 2, 1, "", "get_total_delays"], [164, 2, 1, "", "has_antenna"], [164, 2, 1, "", "needs_metadata"], [164, 2, 1, "", "set_odd_polarization_delay"], [164, 2, 1, "", "set_polarization_flips"], [164, 2, 1, "", "set_station_delay"]], "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1": [[164, 2, 1, "", "close_file"], [164, 2, 1, "", "get_ITRF_antenna_positions"], [164, 2, 1, "", "get_LOFAR_centered_positions"], [164, 2, 1, "", "get_all_sample_numbers"], [164, 2, 1, "", "get_antenna_names"], [164, 2, 1, "", "get_antenna_set"], [164, 2, 1, "", "get_data"], [164, 2, 1, "", "get_filter_selection"], [164, 2, 1, "", "get_full_data_lengths"], [164, 2, 1, "", "get_nominal_data_lengths"], [164, 2, 1, "", "get_nominal_sample_number"], [164, 2, 1, "", "get_sample_frequency"], [164, 2, 1, "", "get_station_ID"], [164, 2, 1, "", "get_station_name"], [164, 2, 1, "", "get_timestamp"], [164, 2, 1, "", "get_timing_callibration_delays"], [164, 2, 1, "", "get_timing_callibration_phases"], [164, 2, 1, "", "needs_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata": [[165, 3, 1, "", "convertITRFToLocal"], [165, 3, 1, "", "convertPhase_to_Timing"], [165, 3, 1, "", "getClockCorrectionFromParsetAddition"], [165, 3, 1, "", "getClockCorrections"], [165, 3, 1, "", "getItrfAntennaPosition"], [165, 3, 1, "", "getStationPhaseCalibration"], [165, 3, 1, "", "getStationPositions"], [165, 3, 1, "", "make_antennaID_filter"], [165, 3, 1, "", "mapAntennasetKeyword"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities": [[166, 3, 1, "", "antName_is_even"], [166, 3, 1, "", "even_antName_to_odd"]], "NuRadioReco.modules.io.LOFAR.readLOFARData": [[167, 1, 1, "", "getLOFARtraces"], [167, 3, 1, "", "get_metadata"], [167, 3, 1, "", "lora_timestamp_to_blocknumber"], [167, 1, 1, "", "readLOFARData"], [167, 3, 1, "", "tbb_filetag_from_utc"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces": [[167, 2, 1, "", "check_trace_quality"], [167, 2, 1, "", "close_file"], [167, 2, 1, "", "get_trace"], [167, 2, 1, "", "setup_trace_loading"]], "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData": [[167, 2, 1, "", "begin"], [167, 2, 1, "", "end"], [167, 2, 1, "", "get_stations"], [167, 2, 1, "", "run"]], "NuRadioReco.modules.io.NuRadioRecoio": [[168, 1, 1, "", "NuRadioRecoio"]], "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio": [[168, 2, 1, "", "close_files"], [168, 2, 1, "", "get_detector"], [168, 2, 1, "", "get_event"], [168, 2, 1, "", "get_event_i"], [168, 2, 1, "", "get_event_ids"], [168, 2, 1, "", "get_events"], [168, 2, 1, "", "get_filenames"], [168, 2, 1, "", "get_header"], [168, 2, 1, "", "get_n_events"], [168, 2, 1, "", "openFile"]], "NuRadioReco.modules.io.RNO_G": [[170, 0, 0, "-", "readRNOGDataMattak"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak": [[170, 3, 1, "", "get_time_offset"], [170, 1, 1, "", "readRNOGData"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData": [[170, 2, 1, "", "add_selectors"], [170, 2, 1, "", "begin"], [170, 2, 1, "", "end"], [170, 2, 1, "", "get_event"], [170, 2, 1, "", "get_event_by_index"], [170, 2, 1, "", "get_events_information"], [170, 2, 1, "", "get_waveforms"], [170, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas": [[172, 0, 0, "-", "coreas"], [173, 0, 0, "-", "readCoREAS"], [174, 0, 0, "-", "readCoREASShower"], [175, 0, 0, "-", "readCoREASStation"], [176, 0, 0, "-", "readCoREASStationGrid"], [177, 0, 0, "-", "simulationSelector"]], "NuRadioReco.modules.io.coreas.coreas": [[172, 3, 1, "", "calculate_simulation_weights"], [172, 3, 1, "", "get_angles"], [172, 3, 1, "", "make_sim_shower"], [172, 3, 1, "", "make_sim_station"]], "NuRadioReco.modules.io.coreas.readCoREAS": [[173, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS": [[173, 2, 1, "", "begin"], [173, 2, 1, "", "end"], [173, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASShower": [[174, 3, 1, "", "antenna_id"], [174, 1, 1, "", "readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower": [[174, 2, 1, "", "begin"], [174, 2, 1, "", "end"], [174, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStation": [[175, 1, 1, "", "readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation": [[175, 2, 1, "", "begin"], [175, 2, 1, "", "end"], [175, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid": [[176, 1, 1, "", "readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS": [[176, 2, 1, "", "begin"], [176, 2, 1, "", "end"], [176, 2, 1, "", "run"]], "NuRadioReco.modules.io.coreas.simulationSelector": [[177, 1, 1, "", "simulationSelector"]], "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector": [[177, 2, 1, "", "begin"], [177, 2, 1, "", "end"], [177, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventReader": [[178, 1, 1, "", "eventReader"]], "NuRadioReco.modules.io.eventReader.eventReader": [[178, 2, 1, "", "begin"], [178, 2, 1, "", "end"], [178, 2, 1, "", "get_detector"], [178, 2, 1, "", "get_header"], [178, 2, 1, "", "run"]], "NuRadioReco.modules.io.eventWriter": [[179, 1, 1, "", "eventWriter"], [179, 3, 1, "", "get_header"]], "NuRadioReco.modules.io.eventWriter.eventWriter": [[179, 2, 1, "", "begin"], [179, 2, 1, "", "end"], [179, 2, 1, "", "run"]], "NuRadioReco.modules.io.event_parser_factory": [[180, 3, 1, "", "iter_events_function"], [180, 3, 1, "", "scan_files_function"]], "NuRadioReco.modules.io.snowshovel": [[182, 0, 0, "-", "readARIANNAData"], [183, 0, 0, "-", "readARIANNADataCalib"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData": [[182, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData": [[182, 2, 1, "", "begin"], [182, 2, 1, "", "end"], [182, 2, 1, "", "run"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib": [[183, 1, 1, "", "readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData": [[183, 2, 1, "", "begin"], [183, 2, 1, "", "end"], [183, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise": [[185, 0, 0, "-", "ARIANNA"], [187, 0, 0, "-", "RNO_G"], [189, 0, 0, "-", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.ARIANNA": [[186, 0, 0, "-", "noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT": [[186, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter": [[186, 2, 1, "", "begin"], [186, 2, 1, "", "end"], [186, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.RNO_G": [[188, 0, 0, "-", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter": [[188, 1, 1, "", "noiseImporter"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter": [[188, 2, 1, "", "begin"], [188, 2, 1, "", "end"], [188, 2, 1, "", "run"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder": [[189, 1, 1, "", "channelMeasuredNoiseAdder"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder": [[189, 2, 1, "", "begin"], [189, 2, 1, "", "end"], [189, 2, 1, "", "get_noise_station"], [189, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoDirectionReconstructor": [[191, 0, 0, "-", "voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos": [[191, 1, 1, "", "voltageToAnalyticEfieldConverterNeutrinos"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos": [[191, 2, 1, "", "begin"], [191, 2, 1, "", "end"], [191, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor": [[193, 0, 0, "-", "create_lookup_table"], [194, 0, 0, "-", "neutrino2DVertexReconstructor"], [195, 0, 0, "-", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor": [[194, 1, 1, "", "neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor": [[194, 2, 1, "", "begin"], [194, 2, 1, "", "find_ray_type"], [194, 2, 1, "", "find_receiving_zenith"], [194, 2, 1, "", "get_correlation_array_2d"], [194, 2, 1, "", "get_correlation_for_pos"], [194, 2, 1, "", "get_signal_travel_time"], [194, 2, 1, "", "run"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor": [[195, 1, 1, "", "neutrino3DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor": [[195, 2, 1, "", "begin"], [195, 2, 1, "", "get_correlation_array_2d"], [195, 2, 1, "", "get_correlation_array_3d"], [195, 2, 1, "", "get_correlation_for_pos"], [195, 2, 1, "", "get_signal_travel_time"], [195, 2, 1, "", "run"]], "NuRadioReco.modules.phasedarray": [[197, 0, 0, "-", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator": [[197, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator": [[197, 2, 1, "", "begin"], [197, 2, 1, "", "calculate_time_delays"], [197, 2, 1, "", "check_vertical_string"], [197, 2, 1, "", "end"], [197, 2, 1, "", "get_antenna_positions"], [197, 2, 1, "", "get_channel_trace_start_time"], [197, 2, 1, "", "phase_signals"], [197, 2, 1, "", "phased_trigger"], [197, 2, 1, "", "power_sum"], [197, 2, 1, "", "run"]], "NuRadioReco.modules.sphericalWaveFitter": [[198, 1, 1, "", "sphericalWaveFitter"]], "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter": [[198, 2, 1, "", "begin"], [198, 2, 1, "", "end"], [198, 2, 1, "", "run"]], "NuRadioReco.modules.templateDirectionFitter": [[199, 1, 1, "", "templateDirectionFitter"]], "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter": [[199, 2, 1, "", "begin"], [199, 2, 1, "", "end"], [199, 2, 1, "", "run"]], "NuRadioReco.modules.trigger": [[201, 0, 0, "-", "calc_parameters_for_rnog_surface_trigger"], [202, 0, 0, "-", "envelopeTrigger"], [203, 0, 0, "-", "highLowThreshold"], [204, 0, 0, "-", "multiHighLowThreshold"], [205, 0, 0, "-", "powerIntegration"], [206, 0, 0, "-", "rnog_surface_trigger"], [207, 0, 0, "-", "simpleThreshold"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[201, 3, 1, "", "linear_fit"]], "NuRadioReco.modules.trigger.envelopeTrigger": [[202, 3, 1, "", "get_envelope_triggers"], [202, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator": [[202, 2, 1, "", "begin"], [202, 2, 1, "", "end"], [202, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.highLowThreshold": [[203, 3, 1, "", "get_high_low_triggers"], [203, 3, 1, "", "get_majority_logic"], [203, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator": [[203, 2, 1, "", "begin"], [203, 2, 1, "", "end"], [203, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.multiHighLowThreshold": [[204, 3, 1, "", "get_high_triggers"], [204, 3, 1, "", "get_low_triggers"], [204, 3, 1, "", "get_multiple_high_low_trigger"], [204, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator": [[204, 2, 1, "", "begin"], [204, 2, 1, "", "end"], [204, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.powerIntegration": [[205, 3, 1, "", "get_power_int_triggers"], [205, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator": [[205, 2, 1, "", "begin"], [205, 2, 1, "", "end"], [205, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.rnog_surface_trigger": [[206, 3, 1, "", "schottky_diode"], [206, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator": [[206, 2, 1, "", "begin"], [206, 2, 1, "", "end"], [206, 2, 1, "", "run"]], "NuRadioReco.modules.trigger.simpleThreshold": [[207, 3, 1, "", "get_threshold_triggers"], [207, 1, 1, "", "triggerSimulator"]], "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator": [[207, 2, 1, "", "begin"], [207, 2, 1, "", "end"], [207, 2, 1, "", "run"]], "NuRadioReco.modules.triggerTimeAdjuster": [[208, 1, 1, "", "triggerTimeAdjuster"]], "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster": [[208, 2, 1, "", "begin"], [208, 2, 1, "", "get_pre_trigger_time"], [208, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter": [[209, 3, 1, "", "covariance"], [209, 3, 1, "", "stacked_lstsq"], [209, 1, 1, "", "voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter": [[209, 2, 1, "", "begin"], [209, 2, 1, "", "end"], [209, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverter": [[210, 3, 1, "", "get_array_of_channels"], [210, 3, 1, "", "stacked_lstsq"], [210, 1, 1, "", "voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter": [[210, 2, 1, "", "begin"], [210, 2, 1, "", "end"], [210, 2, 1, "", "run"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel": [[211, 1, 1, "", "voltageToEfieldConverterPerChannel"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel": [[211, 2, 1, "", "begin"], [211, 2, 1, "", "end"], [211, 2, 1, "", "run"]], "NuRadioReco.utilities": [[213, 0, 0, "-", "analytic_pulse"], [214, 0, 0, "-", "bandpass_filter"], [215, 0, 0, "-", "cr_flux"], [216, 0, 0, "-", "dataservers"], [217, 0, 0, "-", "diodeSimulator"], [218, 0, 0, "-", "fft"], [219, 0, 0, "-", "geometryUtilities"], [220, 0, 0, "-", "ice"], [221, 0, 0, "-", "interferometry"], [222, 0, 0, "-", "io_utilities"], [223, 0, 0, "-", "logging"], [224, 0, 0, "-", "metaclasses"], [225, 0, 0, "-", "noise"], [226, 0, 0, "-", "particle_names"], [227, 0, 0, "-", "signal_processing"], [228, 0, 0, "-", "templates"], [229, 0, 0, "-", "timing"], [230, 0, 0, "-", "traceWindows"], [231, 0, 0, "-", "trace_utilities"], [232, 0, 0, "-", "units"], [233, 0, 0, "-", "variableWindowSizeCorrelation"], [234, 0, 0, "-", "version"]], "NuRadioReco.utilities.analytic_pulse": [[213, 3, 1, "", "amp_from_energy"], [213, 3, 1, "", "get_analytic_pulse"], [213, 3, 1, "", "get_analytic_pulse_freq"]], "NuRadioReco.utilities.bandpass_filter": [[214, 3, 1, "", "get_filter_response"]], "NuRadioReco.utilities.cr_flux": [[215, 3, 1, "", "get_analytic_cr_flux"], [215, 3, 1, "", "get_cr_event_rate"], [215, 3, 1, "", "get_flux_per_energy_bin"], [215, 3, 1, "", "get_interpolated_cr_flux"], [215, 3, 1, "", "get_measured_data"], [215, 3, 1, "", "plot_measured_spectrum"]], "NuRadioReco.utilities.dataservers": [[216, 3, 1, "", "download_from_dataserver"], [216, 3, 1, "", "get_available_dataservers_by_responsetime"]], "NuRadioReco.utilities.diodeSimulator": [[217, 1, 1, "", "diodeSimulator"]], "NuRadioReco.utilities.diodeSimulator.diodeSimulator": [[217, 2, 1, "", "calculate_noise_parameters"], [217, 2, 1, "", "end"], [217, 2, 1, "", "tunnel_diode"]], "NuRadioReco.utilities.fft": [[218, 3, 1, "", "freq2time"], [218, 3, 1, "", "freqs"], [218, 3, 1, "", "time2freq"]], "NuRadioReco.utilities.geometryUtilities": [[219, 3, 1, "", "get_efield_in_spherical_coords"], [219, 3, 1, "", "get_fresnel_angle"], [219, 3, 1, "", "get_fresnel_r_p"], [219, 3, 1, "", "get_fresnel_r_s"], [219, 3, 1, "", "get_fresnel_t_p"], [219, 3, 1, "", "get_fresnel_t_s"], [219, 3, 1, "", "get_time_delay_from_direction"], [219, 3, 1, "", "rot_x"], [219, 3, 1, "", "rot_y"], [219, 3, 1, "", "rot_z"]], "NuRadioReco.utilities.ice": [[220, 3, 1, "", "get_refractive_index"]], "NuRadioReco.utilities.interferometry": [[221, 3, 1, "", "fit_axis"], [221, 3, 1, "", "get_intersection_between_line_and_plane"], [221, 3, 1, "", "get_signal"], [221, 3, 1, "", "get_time_shifts"], [221, 3, 1, "", "interfere_traces_interpolation"]], "NuRadioReco.utilities.io_utilities": [[222, 3, 1, "", "read_pickle"]], "NuRadioReco.utilities.logging": [[223, 1, 1, "", "NuRadioLogger"], [223, 3, 1, "", "addLoggingLevel"], [223, 3, 1, "", "get_fancy_formatter"], [223, 3, 1, "", "set_general_log_level"]], "NuRadioReco.utilities.logging.NuRadioLogger": [[223, 2, 1, "", "addFilter"], [223, 2, 1, "", "addHandler"], [223, 2, 1, "", "callHandlers"], [223, 2, 1, "", "critical"], [223, 2, 1, "", "debug"], [223, 2, 1, "", "error"], [223, 2, 1, "", "exception"], [223, 2, 1, "", "fatal"], [223, 2, 1, "", "filter"], [223, 2, 1, "", "findCaller"], [223, 2, 1, "", "getChild"], [223, 2, 1, "", "getEffectiveLevel"], [223, 2, 1, "", "handle"], [223, 2, 1, "", "hasHandlers"], [223, 2, 1, "", "info"], [223, 2, 1, "", "isEnabledFor"], [223, 2, 1, "", "log"], [223, 2, 1, "", "makeRecord"], [223, 6, 1, "", "manager"], [223, 2, 1, "", "removeFilter"], [223, 2, 1, "", "removeHandler"], [223, 6, 1, "", "root"], [223, 2, 1, "", "setLevel"], [223, 2, 1, "", "status"], [223, 2, 1, "", "warn"], [223, 2, 1, "", "warning"]], "NuRadioReco.utilities.metaclasses": [[224, 1, 1, "", "Singleton"]], "NuRadioReco.utilities.metaclasses.Singleton": [[224, 2, 1, "", "mro"]], "NuRadioReco.utilities.noise": [[225, 3, 1, "", "rolled_sum_roll"], [225, 3, 1, "", "rolled_sum_slicing"], [225, 3, 1, "", "rolled_sum_take"], [225, 3, 1, "", "rolling_indices"], [225, 1, 1, "", "thermalNoiseGenerator"], [225, 1, 1, "", "thermalNoiseGeneratorPhasedArray"]], "NuRadioReco.utilities.noise.thermalNoiseGenerator": [[225, 2, 1, "", "generate_noise"]], "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray": [[225, 2, 1, "", "generate_noise"], [225, 2, 1, "", "generate_noise2"]], "NuRadioReco.utilities.particle_names": [[226, 3, 1, "", "particle_id"], [226, 3, 1, "", "particle_name"]], "NuRadioReco.utilities.signal_processing": [[227, 3, 1, "", "half_hann_window"]], "NuRadioReco.utilities.templates": [[228, 1, 1, "", "Templates"]], "NuRadioReco.utilities.templates.Templates": [[228, 2, 1, "", "get_cr_ref_template"], [228, 2, 1, "", "get_cr_ref_templates"], [228, 2, 1, "", "get_nu_ref_template"], [228, 2, 1, "", "get_nu_ref_templates"], [228, 2, 1, "", "get_set_of_cr_templates"], [228, 2, 1, "", "get_set_of_cr_templates_full"], [228, 2, 1, "", "get_set_of_nu_templates"], [228, 2, 1, "", "set_template_directory"]], "NuRadioReco.utilities.timing": [[229, 3, 1, "", "analyze_timing"]], "NuRadioReco.utilities.traceWindows": [[230, 3, 1, "", "get_window_around_maximum"]], "NuRadioReco.utilities.trace_utilities": [[231, 3, 1, "", "apply_butterworth"], [231, 3, 1, "", "butterworth_filter_trace"], [231, 3, 1, "", "delay_trace"], [231, 3, 1, "", "get_channel_voltage_from_efield"], [231, 3, 1, "", "get_efield_antenna_factor"], [231, 3, 1, "", "get_electric_field_energy_fluence"], [231, 3, 1, "", "get_stokes"], [231, 3, 1, "", "upsampling_fir"]], "NuRadioReco.utilities.variableWindowSizeCorrelation": [[233, 1, 1, "", "variableWindowSizeCorrelation"]], "NuRadioReco.utilities.variableWindowSizeCorrelation.variableWindowSizeCorrelation": [[233, 2, 1, "", "begin"], [233, 2, 1, "", "run"]], "NuRadioReco.utilities.version": [[234, 3, 1, "", "get_NuRadioMC_commit_hash"], [234, 3, 1, "", "get_NuRadioReco_commit_hash"], [234, 3, 1, "", "get_git_commit_hash"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"lofar": [0, 74, 117, 118, 119, 120, 121, 122, 163, 164, 165, 166, 167], "experi": 1, "specif": [1, 58, 237, 246], "featur": 1, "contribut": 2, "nuradiomc": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 67], "workflow": 2, "code": [2, 55, 65, 235], "convent": [2, 3], "how": [2, 62, 242], "write": [2, 237, 242], "docstr": 2, "updat": 2, "version": [2, 4, 234], "number": 2, "depend": [2, 4], "addit": [2, 236], "document": [2, 65, 67, 235, 248, 249], "compil": 2, "head": 2, "text": 2, "list": [2, 64, 242], "link": 2, "cross": 2, "refer": 2, "show": 2, "some": 3, "note": 3, "coordin": [3, 238], "default": 3, "system": [3, 232, 247], "point": 3, "angl": 3, "direct": [3, 58], "elect": 3, "field": [3, 242, 243, 246], "unit": [3, 232, 247], "particl": [3, 55, 104, 242], "type": 3, "fourier": [3, 247], "transform": [3, 247], "instal": 4, "nuradioreco": [4, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 248], "requir": 4, "us": [4, 55, 58, 61, 242, 243], "pip": 4, "develop": [4, 62, 242], "pythonpath": 4, "manual": [4, 66, 244], "core": 4, "option": [4, 58], "Not": 4, "packag": [4, 7, 20, 21, 27, 33, 37, 68, 69, 71, 74, 75, 92, 111, 112, 115, 117, 123, 129, 147, 148, 159, 162, 163, 169, 171, 181, 184, 185, 187, 190, 192, 196, 200, 212], "introduct": [5, 6], "evtgen": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "submodul": [7, 20, 21, 27, 33, 37, 68, 69, 71, 75, 92, 111, 112, 115, 117, 123, 129, 148, 159, 162, 163, 169, 171, 181, 184, 185, 187, 190, 192, 196, 200, 212], "nuradiomctoarasim": 8, "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 62, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 245, 246], "nuradiopropos": [9, 55], "create_tau_tab": 10, "generate_cylind": 11, "generate_unforc": 12, "gener": [13, 55, 56, 59, 60, 61, 64], "generator_ascii": 14, "generator_skeleton": 15, "hdf5_to_ascii": 16, "proposal_table_manag": 17, "readaraeventlist": 18, "readeventlist_ascii": 19, "signalgen": [20, 21, 22, 23, 24, 25, 26], "subpackag": [20, 68, 111, 147, 162, 184], "arz": [21, 22, 61], "hcrb2017": 23, "askaryan": 24, "emitt": [25, 60, 98], "parametr": 26, "signalprop": [27, 28, 29, 30, 31, 32], "analyticraytrac": 28, "directraytrac": 29, "propag": [30, 58, 62], "propagation_base_class": 31, "radioproparaytrac": 32, "simul": [33, 34, 35, 36, 56, 63, 64], "output_writer_hdf5": 34, "time_logg": 36, "util": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 247], "veff": 38, "attenu": [39, 58], "cross_sect": 40, "dump_hdf5": 41, "earth_attenu": 42, "flux": 43, "inelast": 44, "medium": 45, "medium_bas": 46, "merge_hdf5": 47, "muon_flux": 48, "plot": 49, "runner": 50, "runner_exampl": 51, "split_hdf5": 52, "hdf5": [53, 54, 59], "output": [53, 54, 56, 59], "structur": [53, 54, 239, 242, 245], "open": [53, 54], "file": [53, 54, 59, 63, 64, 237, 242], "what": [53, 54], "": [53, 54, 249], "behind": [53, 54], "attribut": [53, 54, 55], "station": [53, 54, 56, 109, 242, 246], "content": [53, 54, 249], "item": 53, "data": [53, 54, 55, 242], "v2": 54, "2": [54, 56, 59], "event": [55, 64, 99, 237, 241, 242], "cylindr": 55, "volum": [55, 64], "input": [55, 59, 64], "paramet": [55, 103, 242], "set": 55, "atmospher": 55, "muon": 55, "flat": 55, "surfac": 55, "standalon": 55, "exampl": [56, 57, 58, 62, 64], "multi": 56, "coincid": 56, "1": [56, 59], "detector": [56, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 237, 238, 239, 240, 242], "layout": 56, "3": [56, 59], "run": [56, 59, 64], "4": [56, 59, 236], "analyz": 56, "calcul": [57, 62, 64], "expect": 57, "sensit": 57, "ic": [58, 61, 220], "model": [58, 61, 236], "implement": 58, "The": [58, 232, 237, 239], "icemodel": 58, "icemodel_simpl": 58, "class": [58, 237, 239, 242], "radiopropaicewrapp": 58, "avail": [58, 236], "simpl": 58, "radiopropa": [58, 62], "script": [58, 59, 62], "birefring": 58, "south": 58, "pole": 58, "greenland": 58, "flow": 58, "cluster": 59, "job": 59, "sh": 59, "submit": 59, "merg": 59, "individu": 59, "signal": [60, 61, 62, 237, 239], "spice": 60, "pulser": 60, "from": 61, "shower": [61, 242], "frequenc": 61, "domain": 61, "parameteris": 61, "semi": 61, "analyt": [61, 62], "valid": 61, "time": [61, 229, 239, 246], "same": 61, "random": 61, "seed": 61, "fft": [61, 218], "normalis": 61, "rai": 62, "trace": [62, 246], "tracer": 62, "gsl": 62, "speed": 62, "boost": 62, "numer": 62, "an": [62, 64], "path": 62, "configur": 63, "steer": 63, "config": [63, 64], "descript": [63, 64, 237, 238, 240], "effect": 64, "more": 64, "detail": [64, 246], "visual": 64, "result": 64, "ara": [69, 70, 112, 113, 114], "analog_compon": [70, 72, 76], "arianna": [71, 72, 73, 115, 116, 185, 186, 246], "preprocessamprespons": 73, "rno_g": [75, 76, 77, 78, 79, 123, 124, 125, 126, 127, 169, 170, 187, 188], "db_mongo_read": 77, "db_mongo_writ": 78, "rnog_detector": 79, "amp": 80, "antennapattern": 81, "detector_bas": 83, "detector_sql": 84, "detector_sys_uncertainti": 85, "filterrespons": 86, "generic_detector": 87, "respons": [88, 237, 239], "sql_to_json": 89, "test_detector_db": 90, "visualize_detector": 91, "framework": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "base_show": 93, "base_st": 94, "base_trac": 95, "channel": [96, 242, 246], "electric_field": 97, "hybrid_inform": 100, "hybrid_show": 101, "parameter_seri": 102, "radio_show": 105, "sim_channel": 106, "sim_emitt": 107, "sim_stat": 108, "trigger": [110, 200, 201, 202, 203, 204, 205, 206, 207, 242], "hardwareresponseincorpor": [113, 116, 126], "triggersimul": [114, 197], "beamformingdirectionfitter_lofar": 118, "beamforming_util": 119, "stationgalacticcalibr": 120, "stationpulsefind": 121, "stationrfifilt": 122, "channelblockoffsetfitt": 124, "crrnogtemplatecr": 125, "triggerboardrespons": 127, "analogtodigitalconvert": 128, "base": [129, 130, 232], "beamformingdirectionfitt": 131, "channeladdcabledelai": 132, "channelantennadedispers": 133, "channelbandpassfilt": 134, "channelcwnotchfilt": 135, "channelgalacticnoiseadd": 136, "channelgenericnoiseadd": 137, "channellengthadjust": 138, "channelresampl": 139, "channelsignalreconstructor": 140, "channelstopfilt": 141, "channeltemplatecorrel": 142, "channeltimeoffsetcalcul": 143, "channeltimewindow": 144, "correlationdirectionfitt": 145, "cosmicrayenergyreconstructor": 146, "custom": [147, 148, 149], "deltat": [148, 149], "calculateamplitudeperraysolut": 149, "efieldairtoicepropag": 150, "efieldradiointerferometricreconstruct": 151, "efieldtimedirectionfitt": 152, "efieldtovoltageconvert": 153, "efieldtovoltageconverterperefield": 154, "electricfieldbandpassfilt": 155, "electricfieldresampl": 156, "electricfieldsignalreconstructor": 157, "eventtypeidentifi": 158, "iftelectricfieldreconstructor": [159, 160, 161], "oper": 161, "io": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "rawtbbio": 164, "rawtbbio_metadata": 165, "rawtbbio_util": 166, "readlofardata": 167, "nuradiorecoio": 168, "readrnogdatamattak": 170, "corea": [171, 172, 173, 174, 175, 176, 177], "readcorea": 173, "readcoreasshow": 174, "readcoreasst": 175, "readcoreasstationgrid": 176, "simulationselector": 177, "eventread": 178, "eventwrit": 179, "event_parser_factori": 180, "snowshovel": [181, 182, 183], "readariannadata": 182, "readariannadatacalib": 183, "measured_nois": [184, 185, 186, 187, 188, 189], "noiseimporterroot": 186, "noiseimport": 188, "channelmeasurednoiseadd": 189, "neutrinodirectionreconstructor": [190, 191], "voltagetoefieldanalyticconverterforneutrino": 191, "neutrinovertexreconstructor": [192, 193, 194, 195], "create_lookup_t": 193, "neutrino2dvertexreconstructor": 194, "neutrino3dvertexreconstructor": 195, "phasedarrai": [196, 197], "sphericalwavefitt": 198, "templatedirectionfitt": 199, "calc_parameters_for_rnog_surface_trigg": 201, "envelopetrigg": 202, "highlowthreshold": 203, "multihighlowthreshold": 204, "powerintegr": 205, "rnog_surface_trigg": 206, "simplethreshold": 207, "triggertimeadjust": 208, "voltagetoanalyticefieldconvert": 209, "voltagetoefieldconvert": 210, "voltagetoefieldconverterperchannel": 211, "analytic_puls": 213, "bandpass_filt": 214, "cr_flux": 215, "dataserv": 216, "diodesimul": 217, "geometryutil": 219, "interferometri": 221, "io_util": 222, "log": [223, 245], "metaclass": [224, 247], "nois": 225, "particle_nam": 226, "signal_process": 227, "templat": [228, 243], "tracewindow": 230, "trace_util": 231, "standard": 232, "ar": 232, "variablewindowsizecorrel": 233, "antenna": [236, 238], "implemet": 236, "overview": [236, 246], "bicone_v8_infair": 236, "bicone_v8_inffirn": 236, "bicone_v8_inf_n1": 236, "32": 236, "78": 236, "createlpda_100mhz_inffirn": 236, "createlpda_inffirn_n1": 236, "createlpda_100mhz_z1cm_infirn_rg": 236, "createlpda_100mhz_z1cm_infirn_boresighttoboundari": 236, "createlpda_100mhz_z10cm_infirn_rg": 236, "createlpda_100mhz_z1m_infirn_rg": 236, "createlpda_100mhz_z2m_infirn_rg": 236, "createlpda_100mhz_z2m_infirn_backlobe_norg": 236, "createlpda_100mhz_z3m_inair_rg": 236, "createlpda_100mhz_z3m_infirn_boresighttoboundari": 236, "createlpda_100mhz_z3mandlpdalen_infirn_boresighttoboundari": 236, "createlpda_100mhz_z5m_infirn_rg": 236, "createlpda_100mhz_z10m_infirn_rg": 236, "createlpda_100mhz_z100m_infirn_rg": 236, "createlpda_100mhz_z200m_infirn_rg": 236, "createlpda_100mhz_infair": 236, "createlpda_100mhz_z1cm_inair_rg": 236, "createlpda_100mhz_z1m_infirn_rg_v2": 236, "dip7cm_hpol_inffirn": 236, "dip7cm_z260mm_infirn_rg": 236, "dip7cm_z1m_infirn_rg": 236, "dip7cm_z2m_infirn_rg": 236, "dip7cm_z3m_infirn_rg_nearhorizontalhd": 236, "dip7cm_z5m_infirn_rg": 236, "dip7cm_z10m_infirn_rg": 236, "dip7cm_z200m_infirn_rg": 236, "dip7cm_z100m_infirn_rg": 236, "dip7cm_infair_s12": 236, "dip7cm_z270mm_inair": 236, "dip7cm_z1m_inair": 236, "dip7cm_z1m_inair_rg_nearhorizontalhd": 236, "dip7cm_z1m_inair_rg_nearhorizontalhd2": 236, "dip7cm_z2m_inair": 236, "dip7cm_z5m_inair": 236, "rnog_vpol_4inch_center_n1": 236, "73": 236, "rnog_vpol_4inch_half_n1": 236, "rnog_vpol_4inch_wall_n1": 236, "rnog_vpol_v2_5inch_center_n1": 236, "75": 236, "rnog_quadslot_v1_n1": 236, "74": 236, "rnog_quadslot_v2_n1": 236, "rnog_quadslot_v2_rescaled_finefreq": 236, "rnog_quadslot_v3_air_rescaled_to_n1": 236, "skala_inffirn": 236, "rnog_vpol_v1_n1": 236, "fourslot_inffirn": 236, "greenland_vpol_inffirn": 236, "trislot_rnog": 236, "dipole_ara_bicone_infinitefirn": 236, "xfdtd_hpol_150mmhole_n1": 236, "xfdtd_vpol_crossfeed_150mmhole_n1": 236, "78_inffirn": 236, "format": 237, "databas": [237, 239], "json": 237, "dictionari": 237, "chain": [237, 239], "genericdetector": 237, "chang": 237, "read": [237, 242], "viewer": 237, "properti": 238, "further": 238, "discuss": 238, "adc": 238, "tabl": [238, 243, 249], "rno": 239, "g": 239, "interfac": 239, "displai": 241, "nur": 242, "them": 242, "philosophi": 242, "basic": [242, 245], "storag": 242, "For": 242, "radio": 242, "simshow": 242, "simemitt": 242, "simstat": 242, "basetrac": 242, "electr": [242, 243], "hybrid": 242, "inform": 242, "vertex": 243, "reconstruct": 243, "creat": 243, "lookup": 243, "2d": 243, "v": 243, "3d": 243, "reconstructor": 243, "start": 246, "e": 246, "alter": 246, "singleton": 247, "welcom": 249, "nuradio": 249, "indic": 249}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"LOFAR": [[0, "lofar"]], "Experiment-specific features": [[1, "experiment-specific-features"]], "Contributing to NuRadioMC": [[2, "contributing-to-nuradiomc"]], "Workflow": [[2, "workflow"]], "Coding conventions": [[2, "coding-conventions"]], "How to": [[2, "how-to"]], "Writing docstrings": [[2, "writing-docstrings"]], "Update the version number / dependencies": [[2, "update-the-version-number-dependencies"]], "Writing additional documentation": [[2, "writing-additional-documentation"]], "Compiling the documentation": [[2, "compiling-the-documentation"]], "Headings and text": [[2, "headings-and-text"]], "Lists": [[2, "lists"]], "Links and cross-references": [[2, "links-and-cross-references"]], "Showing code": [[2, "showing-code"]], "Some notes on conventions": [[3, "some-notes-on-conventions"]], "Coordinates": [[3, "coordinates"]], "Default coordinate system": [[3, "default-coordinate-system"]], "Points": [[3, "points"]], "Angles": [[3, "angles"]], "Directions": [[3, "directions"]], "Electic Fields": [[3, "electic-fields"]], "Units": [[3, "units"]], "Particle types": [[3, "particle-types"]], "Fourier transformations": [[3, "fourier-transformations"]], "Installing NuRadioMC / NuRadioReco": [[4, "installing-nuradiomc-nuradioreco"]], "Requirements": [[4, "requirements"]], "Installation using pip": [[4, "installation-using-pip"]], "Development version": [[4, "development-version"]], "PYTHONPATH": [[4, "pythonpath"]], "Manual installation": [[4, "manual-installation"]], "Pip-installable dependencies": [[4, "pip-installable-dependencies"]], "Core Dependencies": [[4, "core-dependencies"]], "Optional Dependencies": [[4, "optional-dependencies"]], "Not pip-installable packages": [[4, "not-pip-installable-packages"]], "Introduction": [[5, "introduction"], [6, "introduction"]], "NuRadioMC.EvtGen package": [[7, "module-NuRadioMC.EvtGen"]], "Submodules": [[7, "submodules"], [20, "submodules"], [21, "submodules"], [27, "submodules"], [33, "submodules"], [37, "submodules"], [68, "submodules"], [69, "submodules"], [71, "submodules"], [75, "submodules"], [92, "submodules"], [111, "submodules"], [112, "submodules"], [115, "submodules"], [117, "submodules"], [123, "submodules"], [129, "submodules"], [148, "submodules"], [159, "submodules"], [162, "submodules"], [163, "submodules"], [169, "submodules"], [171, "submodules"], [181, "submodules"], [184, "submodules"], [185, "submodules"], [187, "submodules"], [190, "submodules"], [192, "submodules"], [196, "submodules"], [200, "submodules"], [212, "submodules"]], "NuRadioMC.EvtGen.NuRadioMCtoAraSim module": [[8, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "NuRadioMC.EvtGen.NuRadioProposal module": [[9, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "NuRadioMC.EvtGen.create_tau_tab module": [[10, "module-NuRadioMC.EvtGen.create_tau_tab"]], "NuRadioMC.EvtGen.generate_cylinder module": [[11, "module-NuRadioMC.EvtGen.generate_cylinder"]], "NuRadioMC.EvtGen.generate_unforced module": [[12, "module-NuRadioMC.EvtGen.generate_unforced"]], "NuRadioMC.EvtGen.generator module": [[13, "module-NuRadioMC.EvtGen.generator"]], "NuRadioMC.EvtGen.generator_ASCII module": [[14, "module-NuRadioMC.EvtGen.generator_ASCII"]], "NuRadioMC.EvtGen.generator_skeleton module": [[15, "module-NuRadioMC.EvtGen.generator_skeleton"]], "NuRadioMC.EvtGen.hdf5_to_ASCII module": [[16, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "NuRadioMC.EvtGen.proposal_table_manager module": [[17, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "NuRadioMC.EvtGen.readARAEventList module": [[18, "module-NuRadioMC.EvtGen.readARAEventList"]], "NuRadioMC.EvtGen.readEventList_ASCII module": [[19, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "NuRadioMC.SignalGen package": [[20, "module-NuRadioMC.SignalGen"]], "Subpackages": [[20, "subpackages"], [68, "subpackages"], [111, "subpackages"], [147, "subpackages"], [162, "subpackages"], [184, "subpackages"]], "NuRadioMC.SignalGen.ARZ package": [[21, "module-NuRadioMC.SignalGen.ARZ"]], "NuRadioMC.SignalGen.ARZ.ARZ module": [[22, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "NuRadioMC.SignalGen.HCRB2017 module": [[23, "module-NuRadioMC.SignalGen.HCRB2017"]], "NuRadioMC.SignalGen.askaryan module": [[24, "module-NuRadioMC.SignalGen.askaryan"]], "NuRadioMC.SignalGen.emitter module": [[25, "module-NuRadioMC.SignalGen.emitter"]], "NuRadioMC.SignalGen.parametrizations module": [[26, "module-NuRadioMC.SignalGen.parametrizations"]], "NuRadioMC.SignalProp package": [[27, "module-NuRadioMC.SignalProp"]], "NuRadioMC.SignalProp.analyticraytracing module": [[28, "module-NuRadioMC.SignalProp.analyticraytracing"]], "NuRadioMC.SignalProp.directRayTracing module": [[29, "module-NuRadioMC.SignalProp.directRayTracing"]], "NuRadioMC.SignalProp.propagation module": [[30, "module-NuRadioMC.SignalProp.propagation"]], "NuRadioMC.SignalProp.propagation_base_class module": [[31, "module-NuRadioMC.SignalProp.propagation_base_class"]], "NuRadioMC.SignalProp.radioproparaytracing module": [[32, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "NuRadioMC.simulation package": [[33, "module-NuRadioMC.simulation"]], "NuRadioMC.simulation.output_writer_hdf5 module": [[34, "module-NuRadioMC.simulation.output_writer_hdf5"]], "NuRadioMC.simulation.simulation module": [[35, "module-NuRadioMC.simulation.simulation"]], "NuRadioMC.simulation.time_logger module": [[36, "module-NuRadioMC.simulation.time_logger"]], "NuRadioMC.utilities package": [[37, "module-NuRadioMC.utilities"]], "NuRadioMC.utilities.Veff module": [[38, "module-NuRadioMC.utilities.Veff"]], "NuRadioMC.utilities.attenuation module": [[39, "module-NuRadioMC.utilities.attenuation"]], "NuRadioMC.utilities.cross_sections module": [[40, "module-NuRadioMC.utilities.cross_sections"]], "NuRadioMC.utilities.dump_hdf5 module": [[41, "module-NuRadioMC.utilities.dump_hdf5"]], "NuRadioMC.utilities.earth_attenuation module": [[42, "module-NuRadioMC.utilities.earth_attenuation"]], "NuRadioMC.utilities.fluxes module": [[43, "module-NuRadioMC.utilities.fluxes"]], "NuRadioMC.utilities.inelasticities module": [[44, "module-NuRadioMC.utilities.inelasticities"]], "NuRadioMC.utilities.medium module": [[45, "module-NuRadioMC.utilities.medium"]], "NuRadioMC.utilities.medium_base module": [[46, "module-NuRadioMC.utilities.medium_base"]], "NuRadioMC.utilities.merge_hdf5 module": [[47, "module-NuRadioMC.utilities.merge_hdf5"]], "NuRadioMC.utilities.muon_flux module": [[48, "module-NuRadioMC.utilities.muon_flux"]], "NuRadioMC.utilities.plotting module": [[49, "module-NuRadioMC.utilities.plotting"]], "NuRadioMC.utilities.runner module": [[50, "module-NuRadioMC.utilities.runner"]], "NuRadioMC.utilities.runner_example module": [[51, "module-NuRadioMC.utilities.runner_example"]], "NuRadioMC.utilities.split_hdf5 module": [[52, "module-NuRadioMC.utilities.split_hdf5"]], "HDF5 output structure": [[53, "hdf5-output-structure"]], "Opening the HDF5 file": [[53, "opening-the-hdf5-file"], [54, "opening-the-hdf5-file"]], "What\u2019s behind the HDF5 files": [[53, "what-s-behind-the-hdf5-files"], [54, "what-s-behind-the-hdf5-files"]], "HDF5 structure": [[53, "hdf5-structure"], [54, "hdf5-structure"]], "HDF5 file attributes": [[53, "hdf5-file-attributes"], [54, "hdf5-file-attributes"]], "HDF5 attributes": [[53, "id1"]], "HDF5 station attributes": [[53, "id2"]], "HDF5 file contents": [[53, "hdf5-file-contents"], [54, "hdf5-file-contents"]], "HDF5 items": [[53, "id3"]], "Station data": [[53, "station-data"], [54, "station-data"]], "HDF5 station items": [[53, "id4"]], "HDF5 output structure (v2.2)": [[54, "hdf5-output-structure-v2-2"]], "Event Generation": [[55, "event-generation"]], "Events in a cylindrical volume": [[55, "events-in-a-cylindrical-volume"]], "Input parameters": [[55, "input-parameters"]], "Data sets and attributes": [[55, "data-sets-and-attributes"]], "Particle codes used in NuRadioMC": [[55, "id1"]], "Atmospheric muons generated on a flat surface": [[55, "atmospheric-muons-generated-on-a-flat-surface"]], "NuRadioProposal as a standalone module": [[55, "nuradioproposal-as-a-standalone-module"]], "Example: Multi-station coincidences": [[56, "example-multi-station-coincidences"]], "1. Generation of detector layout": [[56, "generation-of-detector-layout"]], "2. Detector simulation": [[56, "detector-simulation"]], "3. Running the simulation": [[56, "running-the-simulation"]], "4. Analyzing the output": [[56, "analyzing-the-output"]], "Example: Calculating expected sensitivities": [[57, "example-calculating-expected-sensitivities"]], "Ice and attenuation models": [[58, "ice-and-attenuation-models"]], "Ice model implementation": [[58, "ice-model-implementation"]], "The IceModel and IceModel_Simple class": [[58, "the-icemodel-and-icemodel-simple-class"]], "RadioPropaIceWrapper": [[58, "radiopropaicewrapper"]], "Available models in NuRadioMC": [[58, "available-models-in-nuradiomc"]], "Simple ice models": [[58, "simple-ice-models"]], "Simple Ice Models": [[58, "id1"]], "RadioPropa ice models": [[58, "radiopropa-ice-models"]], "Attenuation model": [[58, "attenuation-model"]], "Using specific models": [[58, "using-specific-models"]], "Example script": [[58, "example-script"]], "Birefringence Ice Models": [[58, "birefringence-ice-models"]], "Available Birefringence Ice Models": [[58, "available-birefringence-ice-models"]], "South Pole Birefringence Ice Models": [[58, "id2"]], "Greenland Birefringence Ice Models": [[58, "id3"]], "Ice-Flow Direction": [[58, "ice-flow-direction"]], "Available Birefringence Propagation Options": [[58, "available-birefringence-propagation-options"]], "Using specific birefringence models": [[58, "using-specific-birefringence-models"]], "Running on a cluster": [[59, "running-on-a-cluster"]], "1. Generate input files": [[59, "generate-input-files"]], "2. Generate job *.sh scripts": [[59, "generate-job-sh-scripts"]], "3. Submit jobs to the cluster": [[59, "submit-jobs-to-the-cluster"]], "4. Merge individual hdf5 output files": [[59, "merge-individual-hdf5-output-files"]], "Signal Generation (emitter)": [[60, "signal-generation-emitter"]], "SPice Pulser": [[60, "spice-pulser"]], "Signal Generation (from in-ice showers)": [[61, "signal-generation-from-in-ice-showers"]], "Frequency-domain parameterisations": [[61, "frequency-domain-parameterisations"]], "ARZ - semi-analytical model": [[61, "arz-semi-analytical-model"]], "Validity of the parameterisations and the ARZ model": [[61, "validity-of-the-parameterisations-and-the-arz-model"]], "Timing": [[61, "timing"]], "Using the same shower. Random seed": [[61, "using-the-same-shower-random-seed"]], "FFT normalisation": [[61, "fft-normalisation"]], "Signal Propagation": [[62, "signal-propagation"]], "Propagation module": [[62, "propagation-module"]], "Ray tracing": [[62, "ray-tracing"]], "Analytical ray tracer": [[62, "analytical-ray-tracer"]], "GSL speed-boost": [[62, "gsl-speed-boost"]], "RadioPropa numerical ray tracer (in development)": [[62, "radiopropa-numerical-ray-tracer-in-development"]], "Example scripts": [[62, "example-scripts"]], "How to calculate an analytic ray path": [[62, "how-to-calculate-an-analytic-ray-path"]], "How to calculate an radiopropa ray path": [[62, "how-to-calculate-an-radiopropa-ray-path"]], "Simulation and configuration": [[63, "simulation-and-configuration"]], "Steering files": [[63, "steering-files"]], "Config files": [[63, "config-files"]], "Detector description": [[63, "detector-description"]], "Detector simulation": [[63, "detector-simulation"]], "Example: Calculating effective volume": [[64, "example-calculating-effective-volume"]], "Run an effective volume simulation": [[64, "run-an-effective-volume-simulation"]], "Generating the input event list": [[64, "generating-the-input-event-list"]], "Running the simulation": [[64, "running-the-simulation"]], "More details: the detector description": [[64, "more-details-the-detector-description"]], "More details: the config file": [[64, "more-details-the-config-file"]], "Visualization of results": [[64, "visualization-of-results"]], "Code Documentation": [[65, "code-documentation"], [235, "code-documentation"]], "Manuals": [[66, "manuals"], [244, "manuals"]], "NuRadioMC Documentation": [[67, "nuradiomc-documentation"]], "NuRadioReco.detector package": [[68, "module-NuRadioReco.detector"]], "NuRadioReco.detector.ARA package": [[69, "module-NuRadioReco.detector.ARA"]], "NuRadioReco.detector.ARA.analog_components module": [[70, "module-NuRadioReco.detector.ARA.analog_components"]], "NuRadioReco.detector.ARIANNA package": [[71, "module-NuRadioReco.detector.ARIANNA"]], "NuRadioReco.detector.ARIANNA.analog_components module": [[72, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "NuRadioReco.detector.ARIANNA.preprocessAmpResponses module": [[73, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "NuRadioReco.detector.LOFAR package": [[74, "module-NuRadioReco.detector.LOFAR"]], "NuRadioReco.detector.RNO_G package": [[75, "module-NuRadioReco.detector.RNO_G"]], "NuRadioReco.detector.RNO_G.analog_components module": [[76, "module-NuRadioReco.detector.RNO_G.analog_components"]], "NuRadioReco.detector.RNO_G.db_mongo_read module": [[77, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "NuRadioReco.detector.RNO_G.db_mongo_write module": [[78, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "NuRadioReco.detector.RNO_G.rnog_detector module": [[79, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "NuRadioReco.detector.amp module": [[80, "module-NuRadioReco.detector.amp"]], "NuRadioReco.detector.antennapattern module": [[81, "module-NuRadioReco.detector.antennapattern"]], "NuRadioReco.detector.detector module": [[82, "module-NuRadioReco.detector.detector"]], "NuRadioReco.detector.detector_base module": [[83, "module-NuRadioReco.detector.detector_base"]], "NuRadioReco.detector.detector_sql module": [[84, "module-NuRadioReco.detector.detector_sql"]], "NuRadioReco.detector.detector_sys_uncertainties module": [[85, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "NuRadioReco.detector.filterresponse module": [[86, "module-NuRadioReco.detector.filterresponse"]], "NuRadioReco.detector.generic_detector module": [[87, "module-NuRadioReco.detector.generic_detector"]], "NuRadioReco.detector.response module": [[88, "module-NuRadioReco.detector.response"]], "NuRadioReco.detector.sql_to_json module": [[89, "module-NuRadioReco.detector.sql_to_json"]], "NuRadioReco.detector.test_detector_db module": [[90, "module-NuRadioReco.detector.test_detector_db"]], "NuRadioReco.detector.visualize_detector module": [[91, "module-NuRadioReco.detector.visualize_detector"]], "NuRadioReco.framework package": [[92, "module-NuRadioReco.framework"]], "NuRadioReco.framework.base_shower module": [[93, "module-NuRadioReco.framework.base_shower"]], "NuRadioReco.framework.base_station module": [[94, "module-NuRadioReco.framework.base_station"]], "NuRadioReco.framework.base_trace module": [[95, "module-NuRadioReco.framework.base_trace"]], "NuRadioReco.framework.channel module": [[96, "module-NuRadioReco.framework.channel"]], "NuRadioReco.framework.electric_field module": [[97, "module-NuRadioReco.framework.electric_field"]], "NuRadioReco.framework.emitter module": [[98, "module-NuRadioReco.framework.emitter"]], "NuRadioReco.framework.event module": [[99, "module-NuRadioReco.framework.event"]], "NuRadioReco.framework.hybrid_information module": [[100, "module-NuRadioReco.framework.hybrid_information"]], "NuRadioReco.framework.hybrid_shower module": [[101, "module-NuRadioReco.framework.hybrid_shower"]], "NuRadioReco.framework.parameter_serialization module": [[102, "module-NuRadioReco.framework.parameter_serialization"]], "NuRadioReco.framework.parameters module": [[103, "module-NuRadioReco.framework.parameters"]], "NuRadioReco.framework.particle module": [[104, "module-NuRadioReco.framework.particle"]], "NuRadioReco.framework.radio_shower module": [[105, "module-NuRadioReco.framework.radio_shower"]], "NuRadioReco.framework.sim_channel module": [[106, "module-NuRadioReco.framework.sim_channel"]], "NuRadioReco.framework.sim_emitter module": [[107, "module-NuRadioReco.framework.sim_emitter"]], "NuRadioReco.framework.sim_station module": [[108, "module-NuRadioReco.framework.sim_station"]], "NuRadioReco.framework.station module": [[109, "module-NuRadioReco.framework.station"]], "NuRadioReco.framework.trigger module": [[110, "module-NuRadioReco.framework.trigger"]], "NuRadioReco.modules package": [[111, "module-NuRadioReco.modules"]], "NuRadioReco.modules.ARA package": [[112, "module-NuRadioReco.modules.ARA"]], "NuRadioReco.modules.ARA.hardwareResponseIncorporator module": [[113, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "NuRadioReco.modules.ARA.triggerSimulator module": [[114, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "NuRadioReco.modules.ARIANNA package": [[115, "module-NuRadioReco.modules.ARIANNA"]], "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator module": [[116, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "NuRadioReco.modules.LOFAR package": [[117, "module-NuRadioReco.modules.LOFAR"]], "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR module": [[118, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "NuRadioReco.modules.LOFAR.beamforming_utilities module": [[119, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "NuRadioReco.modules.LOFAR.stationGalacticCalibrator module": [[120, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "NuRadioReco.modules.LOFAR.stationPulseFinder module": [[121, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "NuRadioReco.modules.LOFAR.stationRFIFilter module": [[122, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "NuRadioReco.modules.RNO_G package": [[123, "module-NuRadioReco.modules.RNO_G"]], "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter module": [[124, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator module": [[125, "module-NuRadioReco.modules.RNO_G.crRNOGTemplateCreator"]], "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator module": [[126, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "NuRadioReco.modules.RNO_G.triggerBoardResponse module": [[127, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"]], "NuRadioReco.modules.analogToDigitalConverter module": [[128, "module-NuRadioReco.modules.analogToDigitalConverter"]], "NuRadioReco.modules.base package": [[129, "module-NuRadioReco.modules.base"]], "NuRadioReco.modules.base.module module": [[130, "module-NuRadioReco.modules.base.module"]], "NuRadioReco.modules.beamFormingDirectionFitter module": [[131, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "NuRadioReco.modules.channelAddCableDelay module": [[132, "module-NuRadioReco.modules.channelAddCableDelay"]], "NuRadioReco.modules.channelAntennaDedispersion module": [[133, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "NuRadioReco.modules.channelBandPassFilter module": [[134, "module-NuRadioReco.modules.channelBandPassFilter"]], "NuRadioReco.modules.channelCWNotchFilter module": [[135, "module-NuRadioReco.modules.channelCWNotchFilter"]], "NuRadioReco.modules.channelGalacticNoiseAdder module": [[136, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "NuRadioReco.modules.channelGenericNoiseAdder module": [[137, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "NuRadioReco.modules.channelLengthAdjuster module": [[138, "module-NuRadioReco.modules.channelLengthAdjuster"]], "NuRadioReco.modules.channelResampler module": [[139, "module-NuRadioReco.modules.channelResampler"]], "NuRadioReco.modules.channelSignalReconstructor module": [[140, "module-NuRadioReco.modules.channelSignalReconstructor"]], "NuRadioReco.modules.channelStopFilter module": [[141, "module-NuRadioReco.modules.channelStopFilter"]], "NuRadioReco.modules.channelTemplateCorrelation module": [[142, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "NuRadioReco.modules.channelTimeOffsetCalculator module": [[143, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "NuRadioReco.modules.channelTimeWindow module": [[144, "module-NuRadioReco.modules.channelTimeWindow"]], "NuRadioReco.modules.correlationDirectionFitter module": [[145, "module-NuRadioReco.modules.correlationDirectionFitter"]], "NuRadioReco.modules.cosmicRayEnergyReconstructor module": [[146, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "NuRadioReco.modules.custom package": [[147, "module-NuRadioReco.modules.custom"]], "NuRadioReco.modules.custom.deltaT package": [[148, "module-NuRadioReco.modules.custom.deltaT"]], "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution module": [[149, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "NuRadioReco.modules.efieldAirToIcePropagator module": [[150, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "NuRadioReco.modules.efieldRadioInterferometricReconstruction module": [[151, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "NuRadioReco.modules.efieldTimeDirectionFitter module": [[152, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "NuRadioReco.modules.efieldToVoltageConverter module": [[153, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "NuRadioReco.modules.efieldToVoltageConverterPerEfield module": [[154, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "NuRadioReco.modules.electricFieldBandPassFilter module": [[155, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "NuRadioReco.modules.electricFieldResampler module": [[156, "module-NuRadioReco.modules.electricFieldResampler"]], "NuRadioReco.modules.electricFieldSignalReconstructor module": [[157, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "NuRadioReco.modules.eventTypeIdentifier module": [[158, "module-NuRadioReco.modules.eventTypeIdentifier"]], "NuRadioReco.modules.iftElectricFieldReconstructor package": [[159, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor module": [[160, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "NuRadioReco.modules.iftElectricFieldReconstructor.operators module": [[161, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "NuRadioReco.modules.io package": [[162, "module-NuRadioReco.modules.io"]], "NuRadioReco.modules.io.LOFAR package": [[163, "module-NuRadioReco.modules.io.LOFAR"]], "NuRadioReco.modules.io.LOFAR.rawTBBio module": [[164, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata module": [[165, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities module": [[166, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "NuRadioReco.modules.io.LOFAR.readLOFARData module": [[167, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "NuRadioReco.modules.io.NuRadioRecoio module": [[168, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "NuRadioReco.modules.io.RNO_G package": [[169, "module-NuRadioReco.modules.io.RNO_G"]], "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak module": [[170, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "NuRadioReco.modules.io.coreas package": [[171, "module-NuRadioReco.modules.io.coreas"]], "NuRadioReco.modules.io.coreas.coreas module": [[172, "module-NuRadioReco.modules.io.coreas.coreas"]], "NuRadioReco.modules.io.coreas.readCoREAS module": [[173, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "NuRadioReco.modules.io.coreas.readCoREASShower module": [[174, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "NuRadioReco.modules.io.coreas.readCoREASStation module": [[175, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "NuRadioReco.modules.io.coreas.readCoREASStationGrid module": [[176, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "NuRadioReco.modules.io.coreas.simulationSelector module": [[177, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "NuRadioReco.modules.io.eventReader module": [[178, "module-NuRadioReco.modules.io.eventReader"]], "NuRadioReco.modules.io.eventWriter module": [[179, "module-NuRadioReco.modules.io.eventWriter"]], "NuRadioReco.modules.io.event_parser_factory module": [[180, "module-NuRadioReco.modules.io.event_parser_factory"]], "NuRadioReco.modules.io.snowshovel package": [[181, "module-NuRadioReco.modules.io.snowshovel"]], "NuRadioReco.modules.io.snowshovel.readARIANNAData module": [[182, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib module": [[183, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "NuRadioReco.modules.measured_noise package": [[184, "module-NuRadioReco.modules.measured_noise"]], "NuRadioReco.modules.measured_noise.ARIANNA package": [[185, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT module": [[186, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "NuRadioReco.modules.measured_noise.RNO_G package": [[187, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter module": [[188, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder module": [[189, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "NuRadioReco.modules.neutrinoDirectionReconstructor package": [[190, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos module": [[191, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "NuRadioReco.modules.neutrinoVertexReconstructor package": [[192, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table module": [[193, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor module": [[194, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor module": [[195, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "NuRadioReco.modules.phasedarray package": [[196, "module-NuRadioReco.modules.phasedarray"]], "NuRadioReco.modules.phasedarray.triggerSimulator module": [[197, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "NuRadioReco.modules.sphericalWaveFitter module": [[198, "module-NuRadioReco.modules.sphericalWaveFitter"]], "NuRadioReco.modules.templateDirectionFitter module": [[199, "module-NuRadioReco.modules.templateDirectionFitter"]], "NuRadioReco.modules.trigger package": [[200, "module-NuRadioReco.modules.trigger"]], "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger module": [[201, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "NuRadioReco.modules.trigger.envelopeTrigger module": [[202, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "NuRadioReco.modules.trigger.highLowThreshold module": [[203, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "NuRadioReco.modules.trigger.multiHighLowThreshold module": [[204, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "NuRadioReco.modules.trigger.powerIntegration module": [[205, "module-NuRadioReco.modules.trigger.powerIntegration"]], "NuRadioReco.modules.trigger.rnog_surface_trigger module": [[206, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "NuRadioReco.modules.trigger.simpleThreshold module": [[207, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "NuRadioReco.modules.triggerTimeAdjuster module": [[208, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "NuRadioReco.modules.voltageToAnalyticEfieldConverter module": [[209, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverter module": [[210, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "NuRadioReco.modules.voltageToEfieldConverterPerChannel module": [[211, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "NuRadioReco.utilities package": [[212, "module-NuRadioReco.utilities"]], "NuRadioReco.utilities.analytic_pulse module": [[213, "module-NuRadioReco.utilities.analytic_pulse"]], "NuRadioReco.utilities.bandpass_filter module": [[214, "module-NuRadioReco.utilities.bandpass_filter"]], "NuRadioReco.utilities.cr_flux module": [[215, "module-NuRadioReco.utilities.cr_flux"]], "NuRadioReco.utilities.dataservers module": [[216, "module-NuRadioReco.utilities.dataservers"]], "NuRadioReco.utilities.diodeSimulator module": [[217, "module-NuRadioReco.utilities.diodeSimulator"]], "NuRadioReco.utilities.fft module": [[218, "module-NuRadioReco.utilities.fft"]], "NuRadioReco.utilities.geometryUtilities module": [[219, "module-NuRadioReco.utilities.geometryUtilities"]], "NuRadioReco.utilities.ice module": [[220, "module-NuRadioReco.utilities.ice"]], "NuRadioReco.utilities.interferometry module": [[221, "module-NuRadioReco.utilities.interferometry"]], "NuRadioReco.utilities.io_utilities module": [[222, "module-NuRadioReco.utilities.io_utilities"]], "NuRadioReco.utilities.logging module": [[223, "module-NuRadioReco.utilities.logging"]], "NuRadioReco.utilities.metaclasses module": [[224, "module-NuRadioReco.utilities.metaclasses"]], "NuRadioReco.utilities.noise module": [[225, "module-NuRadioReco.utilities.noise"]], "NuRadioReco.utilities.particle_names module": [[226, "module-NuRadioReco.utilities.particle_names"]], "NuRadioReco.utilities.signal_processing module": [[227, "module-NuRadioReco.utilities.signal_processing"]], "NuRadioReco.utilities.templates module": [[228, "module-NuRadioReco.utilities.templates"]], "NuRadioReco.utilities.timing module": [[229, "module-NuRadioReco.utilities.timing"]], "NuRadioReco.utilities.traceWindows module": [[230, "module-NuRadioReco.utilities.traceWindows"]], "NuRadioReco.utilities.trace_utilities module": [[231, "module-NuRadioReco.utilities.trace_utilities"]], "NuRadioReco.utilities.units module": [[232, "module-NuRadioReco.utilities.units"]], "standard system of units": [[232, "standard-system-of-units"]], "The base units are:": [[232, "the-base-units-are"]], "NuRadioReco.utilities.variableWindowSizeCorrelation module": [[233, "module-NuRadioReco.utilities.variableWindowSizeCorrelation"]], "NuRadioReco.utilities.version module": [[234, "module-NuRadioReco.utilities.version"]], "Antenna Models": [[236, "antenna-models"]], "Implemetation of Antenna Models": [[236, "implemetation-of-antenna-models"]], "Overview of available Antenna Models": [[236, "overview-of-available-antenna-models"]], "bicone_v8_InfAir": [[236, "bicone-v8-infair"]], "bicone_v8_InfFirn": [[236, "bicone-v8-inffirn"]], "bicone_v8_inf_n1.32": [[236, "bicone-v8-inf-n1-32"]], "bicone_v8_inf_n1.4": [[236, "bicone-v8-inf-n1-4"]], "bicone_v8_inf_n1.78": [[236, "bicone-v8-inf-n1-78"]], "createLPDA_100MHz_InfFirn": [[236, "createlpda-100mhz-inffirn"]], "createLPDA_InfFirn_n1.4": [[236, "createlpda-inffirn-n1-4"]], "createLPDA_100MHz_z1cm_InFirn_RG": [[236, "createlpda-100mhz-z1cm-infirn-rg"]], "createLPDA_100MHz_z1cm_InFirn_BoresightToBoundary": [[236, "createlpda-100mhz-z1cm-infirn-boresighttoboundary"]], "createLPDA_100MHz_z10cm_InFirn_RG": [[236, "createlpda-100mhz-z10cm-infirn-rg"]], "createLPDA_100MHz_z1m_InFirn_RG": [[236, "createlpda-100mhz-z1m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_RG": [[236, "createlpda-100mhz-z2m-infirn-rg"]], "createLPDA_100MHz_z2m_InFirn_Backlobe_NoRG": [[236, "createlpda-100mhz-z2m-infirn-backlobe-norg"]], "createLPDA_100MHz_z3m_InAir_RG": [[236, "createlpda-100mhz-z3m-inair-rg"]], "createLPDA_100MHz_z3m_InFirn_BoresightToBoundary": [[236, "createlpda-100mhz-z3m-infirn-boresighttoboundary"]], "createLPDA_100MHz_z3mAndLPDALen_InFirn_BoresightToBoundary": [[236, "createlpda-100mhz-z3mandlpdalen-infirn-boresighttoboundary"]], "createLPDA_100MHz_z5m_InFirn_RG": [[236, "createlpda-100mhz-z5m-infirn-rg"]], "createLPDA_100MHz_z10m_InFirn_RG": [[236, "createlpda-100mhz-z10m-infirn-rg"]], "createLPDA_100MHz_z100m_InFirn_RG": [[236, "createlpda-100mhz-z100m-infirn-rg"]], "createLPDA_100MHz_z200m_InFirn_RG": [[236, "createlpda-100mhz-z200m-infirn-rg"]], "createLPDA_100MHz_InfAir": [[236, "createlpda-100mhz-infair"]], "createLPDA_100MHz_z1cm_InAir_RG": [[236, "createlpda-100mhz-z1cm-inair-rg"]], "createLPDA_100MHz_z1m_InFirn_RG_v2": [[236, "createlpda-100mhz-z1m-infirn-rg-v2"]], "dip7cm_hpol_infFirn": [[236, "dip7cm-hpol-inffirn"]], "dip7cm_z260mm_InFirn_RG": [[236, "dip7cm-z260mm-infirn-rg"]], "dip7cm_z1m_InFirn_RG": [[236, "dip7cm-z1m-infirn-rg"]], "dip7cm_z2m_InFirn_RG": [[236, "dip7cm-z2m-infirn-rg"]], "dip7cm_z3m_InFirn_RG_NearHorizontalHD": [[236, "dip7cm-z3m-infirn-rg-nearhorizontalhd"]], "dip7cm_z5m_InFirn_RG": [[236, "dip7cm-z5m-infirn-rg"]], "dip7cm_z10m_InFirn_RG": [[236, "dip7cm-z10m-infirn-rg"]], "dip7cm_z200m_InFirn_RG": [[236, "dip7cm-z200m-infirn-rg"]], "dip7cm_z100m_InFirn_RG": [[236, "dip7cm-z100m-infirn-rg"]], "dip7cm_infAir_s12": [[236, "dip7cm-infair-s12"]], "dip7cm_z270mm_InAir": [[236, "dip7cm-z270mm-inair"]], "dip7cm_z1m_InAir": [[236, "dip7cm-z1m-inair"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD": [[236, "dip7cm-z1m-inair-rg-nearhorizontalhd"]], "dip7cm_z1m_InAir_RG_NearHorizontalHD2": [[236, "dip7cm-z1m-inair-rg-nearhorizontalhd2"]], "dip7cm_z2m_InAir": [[236, "dip7cm-z2m-inair"]], "dip7cm_z5m_InAir": [[236, "dip7cm-z5m-inair"]], "RNOG_vpol_4inch_center_n1.73": [[236, "rnog-vpol-4inch-center-n1-73"]], "RNOG_vpol_4inch_half_n1.73": [[236, "rnog-vpol-4inch-half-n1-73"]], "RNOG_vpol_4inch_wall_n1.73": [[236, "rnog-vpol-4inch-wall-n1-73"]], "RNOG_vpol_v2_5inch_center_n1.75": [[236, "rnog-vpol-v2-5inch-center-n1-75"]], "RNOG_quadslot_v1_n1.74": [[236, "rnog-quadslot-v1-n1-74"]], "RNOG_quadslot_v2_n1.74": [[236, "rnog-quadslot-v2-n1-74"]], "RNOG_quadslot_v2_rescaled_fineFreq": [[236, "rnog-quadslot-v2-rescaled-finefreq"]], "RNOG_quadslot_v3_air_rescaled_to_n1.74": [[236, "rnog-quadslot-v3-air-rescaled-to-n1-74"]], "SKALA_InfFirn": [[236, "skala-inffirn"]], "Additional Models": [[236, "additional-models"]], "RNOG_vpol_v1_n1.4": [[236, "rnog-vpol-v1-n1-4"]], "RNOG_vpol_v1_n1.73": [[236, "rnog-vpol-v1-n1-73"]], "fourslot_InfFirn": [[236, "fourslot-inffirn"]], "greenland_vpol_InfFirn": [[236, "greenland-vpol-inffirn"]], "trislot_RNOG": [[236, "trislot-rnog"]], "dipole_ARA_bicone_infinitefirn": [[236, "dipole-ara-bicone-infinitefirn"]], "XFDTD_Hpol_150mmHole_n1.78": [[236, "xfdtd-hpol-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78": [[236, "xfdtd-vpol-crossfeed-150mmhole-n1-78"]], "XFDTD_Vpol_CrossFeed_150mmHole_n1.78_InfFirn": [[236, "xfdtd-vpol-crossfeed-150mmhole-n1-78-inffirn"]], "Detector Description": [[237, "detector-description"], [240, "detector-description"]], "The Detector Class": [[237, "the-detector-class"]], "Detector Description Formats": [[237, "detector-description-formats"]], "DataBase": [[237, "database"]], "JSON": [[237, "json"]], "Dictionary": [[237, "dictionary"]], "Signal Chain Responses": [[237, "signal-chain-responses"]], "GenericDetector": [[237, "genericdetector"]], "Event-Specific Changes": [[237, "event-specific-changes"]], "Detector Description in Event Files": [[237, "detector-description-in-event-files"]], "Writing the Detector": [[237, "writing-the-detector"]], "Reading the Detector": [[237, "reading-the-detector"]], "Detector Viewer": [[237, "detector-viewer"]], "Properties of Detector Description": [[238, "properties-of-detector-description"]], "Antennas": [[238, "antennas"]], "Further Discussion on Antenna Coordinates": [[238, "further-discussion-on-antenna-coordinates"]], "ADC Table": [[238, "adc-table"]], "The RNO-G detector class and database interface": [[239, "the-rno-g-detector-class-and-database-interface"]], "Detector time and database time": [[239, "detector-time-and-database-time"]], "Database structure": [[239, "database-structure"]], "Signal Chain": [[239, "signal-chain"]], "Response class": [[239, "response-class"]], "Detector class": [[239, "detector-class"]], "Event Display": [[241, "event-display"]], "Data Structure": [[242, "data-structure"]], ".nur Files and How to Use Them": [[242, "nur-files-and-how-to-use-them"]], "Philosophy and Basic Structure": [[242, "philosophy-and-basic-structure"]], "Reading and Writing .nur Files": [[242, "reading-and-writing-nur-files"]], "Parameter Storage": [[242, "parameter-storage"]], "For Developers": [[242, null]], "List of Data Classes": [[242, "list-of-data-classes"]], "Event": [[242, "event"]], "Radio Shower": [[242, "radio-shower"]], "SimShower": [[242, "simshower"]], "SimEmitter": [[242, "simemitter"]], "Particle": [[242, "particle"]], "Station": [[242, "station"]], "Trigger": [[242, "trigger"]], "SimStation": [[242, "simstation"]], "BaseTrace": [[242, "basetrace"]], "Electric Field": [[242, "electric-field"]], "Channel": [[242, "channel"]], "Hybrid Information": [[242, "hybrid-information"]], "Hybrid Shower": [[242, "hybrid-shower"]], "Hybrid Detector": [[242, "hybrid-detector"]], "Use the Vertex Reconstruction Modules": [[243, "use-the-vertex-reconstruction-modules"]], "Creating Lookup Tables": [[243, "creating-lookup-tables"]], "Creating Electric Field Templates": [[243, "creating-electric-field-templates"]], "2D vs. 3D Vertex Reconstructor": [[243, "d-vs-3d-vertex-reconstructor"]], "Modules": [[245, "modules"]], "Basic Module Structure": [[245, "basic-module-structure"]], "Logging": [[245, "logging"]], "overview of times": [[246, "overview-of-times"]], "ARIANNA specific details:": [[246, "arianna-specific-details"]], "Station time": [[246, "station-time"]], "Trace start times in channels": [[246, "trace-start-times-in-channels"]], "Trace start times in E-fields": [[246, "trace-start-times-in-e-fields"]], "overview of modules that alter time": [[246, "overview-of-modules-that-alter-time"]], "Utilities": [[247, "utilities"]], "Unit System": [[247, "unit-system"]], "Fourier Transformation": [[247, "fourier-transformation"]], "Metaclasses": [[247, "metaclasses"]], "Singleton": [[247, "singleton"]], "NuRadioReco Documentation": [[248, "nuradioreco-documentation"]], "Welcome to NuRadio\u2019s documentation!": [[249, "welcome-to-nuradio-s-documentation"]], "Contents:": [[249, null]], "Indices and tables": [[249, "indices-and-tables"]]}, "indexentries": {"nuradiomc.evtgen": [[7, "module-NuRadioMC.EvtGen"]], "module": [[7, "module-NuRadioMC.EvtGen"], [8, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"], [9, "module-NuRadioMC.EvtGen.NuRadioProposal"], [10, "module-NuRadioMC.EvtGen.create_tau_tab"], [11, "module-NuRadioMC.EvtGen.generate_cylinder"], [12, "module-NuRadioMC.EvtGen.generate_unforced"], [13, "module-NuRadioMC.EvtGen.generator"], [14, "module-NuRadioMC.EvtGen.generator_ASCII"], [15, "module-NuRadioMC.EvtGen.generator_skeleton"], [16, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"], [17, "module-NuRadioMC.EvtGen.proposal_table_manager"], [18, "module-NuRadioMC.EvtGen.readARAEventList"], [19, "module-NuRadioMC.EvtGen.readEventList_ASCII"], [20, "module-NuRadioMC.SignalGen"], [21, "module-NuRadioMC.SignalGen.ARZ"], [22, "module-NuRadioMC.SignalGen.ARZ.ARZ"], [23, "module-NuRadioMC.SignalGen.HCRB2017"], [24, "module-NuRadioMC.SignalGen.askaryan"], [25, "module-NuRadioMC.SignalGen.emitter"], [26, "module-NuRadioMC.SignalGen.parametrizations"], [27, "module-NuRadioMC.SignalProp"], [28, "module-NuRadioMC.SignalProp.analyticraytracing"], [29, "module-NuRadioMC.SignalProp.directRayTracing"], [30, "module-NuRadioMC.SignalProp.propagation"], [31, "module-NuRadioMC.SignalProp.propagation_base_class"], [32, "module-NuRadioMC.SignalProp.radioproparaytracing"], [33, "module-NuRadioMC.simulation"], [34, "module-NuRadioMC.simulation.output_writer_hdf5"], [35, "module-NuRadioMC.simulation.simulation"], [36, "module-NuRadioMC.simulation.time_logger"], [37, "module-NuRadioMC.utilities"], [38, "module-NuRadioMC.utilities.Veff"], [39, "module-NuRadioMC.utilities.attenuation"], [40, "module-NuRadioMC.utilities.cross_sections"], [41, "module-NuRadioMC.utilities.dump_hdf5"], [42, "module-NuRadioMC.utilities.earth_attenuation"], [43, "module-NuRadioMC.utilities.fluxes"], [44, "module-NuRadioMC.utilities.inelasticities"], [45, "module-NuRadioMC.utilities.medium"], [46, "module-NuRadioMC.utilities.medium_base"], [47, "module-NuRadioMC.utilities.merge_hdf5"], [48, "module-NuRadioMC.utilities.muon_flux"], [49, "module-NuRadioMC.utilities.plotting"], [50, "module-NuRadioMC.utilities.runner"], [51, "module-NuRadioMC.utilities.runner_example"], [52, "module-NuRadioMC.utilities.split_hdf5"], [68, "module-NuRadioReco.detector"], [69, "module-NuRadioReco.detector.ARA"], [70, "module-NuRadioReco.detector.ARA.analog_components"], [71, "module-NuRadioReco.detector.ARIANNA"], [72, "module-NuRadioReco.detector.ARIANNA.analog_components"], [73, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"], [74, "module-NuRadioReco.detector.LOFAR"], [75, "module-NuRadioReco.detector.RNO_G"], [76, "module-NuRadioReco.detector.RNO_G.analog_components"], [77, "module-NuRadioReco.detector.RNO_G.db_mongo_read"], [78, "module-NuRadioReco.detector.RNO_G.db_mongo_write"], [79, "module-NuRadioReco.detector.RNO_G.rnog_detector"], [80, "module-NuRadioReco.detector.amp"], [81, "module-NuRadioReco.detector.antennapattern"], [82, "module-NuRadioReco.detector.detector"], [83, "module-NuRadioReco.detector.detector_base"], [84, "module-NuRadioReco.detector.detector_sql"], [85, "module-NuRadioReco.detector.detector_sys_uncertainties"], [86, "module-NuRadioReco.detector.filterresponse"], [87, "module-NuRadioReco.detector.generic_detector"], [88, "module-NuRadioReco.detector.response"], [89, "module-NuRadioReco.detector.sql_to_json"], [90, "module-NuRadioReco.detector.test_detector_db"], [91, "module-NuRadioReco.detector.visualize_detector"], [92, "module-NuRadioReco.framework"], [93, "module-NuRadioReco.framework.base_shower"], [94, "module-NuRadioReco.framework.base_station"], [95, "module-NuRadioReco.framework.base_trace"], [96, "module-NuRadioReco.framework.channel"], [97, "module-NuRadioReco.framework.electric_field"], [98, "module-NuRadioReco.framework.emitter"], [99, "module-NuRadioReco.framework.event"], [100, "module-NuRadioReco.framework.hybrid_information"], [101, "module-NuRadioReco.framework.hybrid_shower"], [102, "module-NuRadioReco.framework.parameter_serialization"], [103, "module-NuRadioReco.framework.parameters"], [104, "module-NuRadioReco.framework.particle"], [105, "module-NuRadioReco.framework.radio_shower"], [106, "module-NuRadioReco.framework.sim_channel"], [107, "module-NuRadioReco.framework.sim_emitter"], [108, "module-NuRadioReco.framework.sim_station"], [109, "module-NuRadioReco.framework.station"], [110, "module-NuRadioReco.framework.trigger"], [111, "module-NuRadioReco.modules"], [112, "module-NuRadioReco.modules.ARA"], [113, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"], [114, "module-NuRadioReco.modules.ARA.triggerSimulator"], [115, "module-NuRadioReco.modules.ARIANNA"], [116, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"], [117, "module-NuRadioReco.modules.LOFAR"], [118, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"], [119, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"], [120, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"], [121, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"], [122, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"], [123, "module-NuRadioReco.modules.RNO_G"], [124, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"], [125, "module-NuRadioReco.modules.RNO_G.crRNOGTemplateCreator"], [126, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"], [127, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"], [128, "module-NuRadioReco.modules.analogToDigitalConverter"], [129, "module-NuRadioReco.modules.base"], [130, "module-NuRadioReco.modules.base.module"], [131, "module-NuRadioReco.modules.beamFormingDirectionFitter"], [132, "module-NuRadioReco.modules.channelAddCableDelay"], [133, "module-NuRadioReco.modules.channelAntennaDedispersion"], [134, "module-NuRadioReco.modules.channelBandPassFilter"], [135, "module-NuRadioReco.modules.channelCWNotchFilter"], [136, "module-NuRadioReco.modules.channelGalacticNoiseAdder"], [137, "module-NuRadioReco.modules.channelGenericNoiseAdder"], [138, "module-NuRadioReco.modules.channelLengthAdjuster"], [139, "module-NuRadioReco.modules.channelResampler"], [140, "module-NuRadioReco.modules.channelSignalReconstructor"], [141, "module-NuRadioReco.modules.channelStopFilter"], [142, "module-NuRadioReco.modules.channelTemplateCorrelation"], [143, "module-NuRadioReco.modules.channelTimeOffsetCalculator"], [144, "module-NuRadioReco.modules.channelTimeWindow"], [145, "module-NuRadioReco.modules.correlationDirectionFitter"], [146, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"], [147, "module-NuRadioReco.modules.custom"], [148, "module-NuRadioReco.modules.custom.deltaT"], [149, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"], [150, "module-NuRadioReco.modules.efieldAirToIcePropagator"], [151, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"], [152, "module-NuRadioReco.modules.efieldTimeDirectionFitter"], [153, "module-NuRadioReco.modules.efieldToVoltageConverter"], [154, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"], [155, "module-NuRadioReco.modules.electricFieldBandPassFilter"], [156, "module-NuRadioReco.modules.electricFieldResampler"], [157, "module-NuRadioReco.modules.electricFieldSignalReconstructor"], [158, "module-NuRadioReco.modules.eventTypeIdentifier"], [159, "module-NuRadioReco.modules.iftElectricFieldReconstructor"], [160, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"], [161, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"], [162, "module-NuRadioReco.modules.io"], [163, "module-NuRadioReco.modules.io.LOFAR"], [164, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"], [165, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"], [166, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"], [167, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"], [168, "module-NuRadioReco.modules.io.NuRadioRecoio"], [169, "module-NuRadioReco.modules.io.RNO_G"], [170, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"], [171, "module-NuRadioReco.modules.io.coreas"], [172, "module-NuRadioReco.modules.io.coreas.coreas"], [173, "module-NuRadioReco.modules.io.coreas.readCoREAS"], [174, "module-NuRadioReco.modules.io.coreas.readCoREASShower"], [175, "module-NuRadioReco.modules.io.coreas.readCoREASStation"], [176, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"], [177, "module-NuRadioReco.modules.io.coreas.simulationSelector"], [178, "module-NuRadioReco.modules.io.eventReader"], [179, "module-NuRadioReco.modules.io.eventWriter"], [180, "module-NuRadioReco.modules.io.event_parser_factory"], [181, "module-NuRadioReco.modules.io.snowshovel"], [182, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"], [183, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"], [184, "module-NuRadioReco.modules.measured_noise"], [185, "module-NuRadioReco.modules.measured_noise.ARIANNA"], [186, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"], [187, "module-NuRadioReco.modules.measured_noise.RNO_G"], [188, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"], [189, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"], [190, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"], [191, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"], [192, "module-NuRadioReco.modules.neutrinoVertexReconstructor"], [193, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"], [194, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"], [195, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"], [196, "module-NuRadioReco.modules.phasedarray"], [197, "module-NuRadioReco.modules.phasedarray.triggerSimulator"], [198, "module-NuRadioReco.modules.sphericalWaveFitter"], [199, "module-NuRadioReco.modules.templateDirectionFitter"], [200, "module-NuRadioReco.modules.trigger"], [201, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"], [202, "module-NuRadioReco.modules.trigger.envelopeTrigger"], [203, "module-NuRadioReco.modules.trigger.highLowThreshold"], [204, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"], [205, "module-NuRadioReco.modules.trigger.powerIntegration"], [206, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"], [207, "module-NuRadioReco.modules.trigger.simpleThreshold"], [208, "module-NuRadioReco.modules.triggerTimeAdjuster"], [209, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"], [210, "module-NuRadioReco.modules.voltageToEfieldConverter"], [211, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"], [212, "module-NuRadioReco.utilities"], [213, "module-NuRadioReco.utilities.analytic_pulse"], [214, "module-NuRadioReco.utilities.bandpass_filter"], [215, "module-NuRadioReco.utilities.cr_flux"], [216, "module-NuRadioReco.utilities.dataservers"], [217, "module-NuRadioReco.utilities.diodeSimulator"], [218, "module-NuRadioReco.utilities.fft"], [219, "module-NuRadioReco.utilities.geometryUtilities"], [220, "module-NuRadioReco.utilities.ice"], [221, "module-NuRadioReco.utilities.interferometry"], [222, "module-NuRadioReco.utilities.io_utilities"], [223, "module-NuRadioReco.utilities.logging"], [224, "module-NuRadioReco.utilities.metaclasses"], [225, "module-NuRadioReco.utilities.noise"], [226, "module-NuRadioReco.utilities.particle_names"], [227, "module-NuRadioReco.utilities.signal_processing"], [228, "module-NuRadioReco.utilities.templates"], [229, "module-NuRadioReco.utilities.timing"], [230, "module-NuRadioReco.utilities.traceWindows"], [231, "module-NuRadioReco.utilities.trace_utilities"], [232, "module-NuRadioReco.utilities.units"], [233, "module-NuRadioReco.utilities.variableWindowSizeCorrelation"], [234, "module-NuRadioReco.utilities.version"]], "nuradiomc.evtgen.nuradiomctoarasim": [[8, "module-NuRadioMC.EvtGen.NuRadioMCtoAraSim"]], "nuradiomc.evtgen.nuradioproposal": [[9, "module-NuRadioMC.EvtGen.NuRadioProposal"]], "proposalfunctions (class in nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions"]], "secondaryproperties (class in nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.SecondaryProperties"]], "get_decays() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_decays"]], "get_secondaries_array() (nuradiomc.evtgen.nuradioproposal.proposalfunctions method)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.ProposalFunctions.get_secondaries_array"]], "is_em_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.is_em_primary"]], "is_had_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.is_had_primary"]], "is_shower_primary() (in module nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.is_shower_primary"]], "particle_code() (in module nuradiomc.evtgen.nuradioproposal)": [[9, "NuRadioMC.EvtGen.NuRadioProposal.particle_code"]], "nuradiomc.evtgen.create_tau_tab": [[10, "module-NuRadioMC.EvtGen.create_tau_tab"]], "nuradiomc.evtgen.generate_cylinder": [[11, "module-NuRadioMC.EvtGen.generate_cylinder"]], "nuradiomc.evtgen.generate_unforced": [[12, "module-NuRadioMC.EvtGen.generate_unforced"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generate_unforced)": [[12, "NuRadioMC.EvtGen.generate_unforced.generate_eventlist_cylinder"]], "nuradiomc.evtgen.generator": [[13, "module-NuRadioMC.EvtGen.generator"]], "generate_eventlist_cylinder() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.generate_eventlist_cylinder"]], "generate_surface_muons() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.generate_surface_muons"]], "generate_vertex_positions() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.generate_vertex_positions"]], "get_energies() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.get_energies"]], "get_energy_from_flux() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.get_energy_from_flux"]], "get_intersection_volume_neutrino() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.get_intersection_volume_neutrino"]], "get_product_position_time() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.get_product_position_time"]], "get_tau_95_length() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.get_tau_95_length"]], "ice_cube_nu_fit() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit"]], "ice_cube_nu_fit_2022() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.ice_cube_nu_fit_2022"]], "intersection_box_ray() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.intersection_box_ray"]], "is_in_fiducial_volume() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.is_in_fiducial_volume"]], "load_input_hdf5() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.load_input_hdf5"]], "mask_arrival_azimuth() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.mask_arrival_azimuth"]], "primary_energy_from_deposited() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.primary_energy_from_deposited"]], "set_volume_attributes() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.set_volume_attributes"]], "write_events_to_hdf5() (in module nuradiomc.evtgen.generator)": [[13, "NuRadioMC.EvtGen.generator.write_events_to_hdf5"]], "nuradiomc.evtgen.generator_ascii": [[14, "module-NuRadioMC.EvtGen.generator_ASCII"]], "generate_eventlist() (in module nuradiomc.evtgen.generator_ascii)": [[14, "NuRadioMC.EvtGen.generator_ASCII.generate_eventlist"]], "nuradiomc.evtgen.generator_skeleton": [[15, "module-NuRadioMC.EvtGen.generator_skeleton"]], "generate_my_events() (in module nuradiomc.evtgen.generator_skeleton)": [[15, "NuRadioMC.EvtGen.generator_skeleton.generate_my_events"]], "nuradiomc.evtgen.hdf5_to_ascii": [[16, "module-NuRadioMC.EvtGen.hdf5_to_ASCII"]], "nuradiomc.evtgen.proposal_table_manager": [[17, "module-NuRadioMC.EvtGen.proposal_table_manager"]], "download_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[17, "NuRadioMC.EvtGen.proposal_table_manager.download_proposal_tables"]], "get_compiler() (in module nuradiomc.evtgen.proposal_table_manager)": [[17, "NuRadioMC.EvtGen.proposal_table_manager.get_compiler"]], "produce_proposal_tables() (in module nuradiomc.evtgen.proposal_table_manager)": [[17, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables"]], "produce_proposal_tables_tarball() (in module nuradiomc.evtgen.proposal_table_manager)": [[17, "NuRadioMC.EvtGen.proposal_table_manager.produce_proposal_tables_tarball"]], "nuradiomc.evtgen.readaraeventlist": [[18, "module-NuRadioMC.EvtGen.readARAEventList"]], "convert_to_hdf5() (in module nuradiomc.evtgen.readaraeventlist)": [[18, "NuRadioMC.EvtGen.readARAEventList.convert_to_hdf5"]], "read_ara_eventlist() (in module nuradiomc.evtgen.readaraeventlist)": [[18, "NuRadioMC.EvtGen.readARAEventList.read_ARA_eventlist"]], "nuradiomc.evtgen.readeventlist_ascii": [[19, "module-NuRadioMC.EvtGen.readEventList_ASCII"]], "read_eventlist() (in module nuradiomc.evtgen.readeventlist_ascii)": [[19, "NuRadioMC.EvtGen.readEventList_ASCII.read_eventlist"]], "nuradiomc.signalgen": [[20, "module-NuRadioMC.SignalGen"]], "nuradiomc.signalgen.arz": [[21, "module-NuRadioMC.SignalGen.ARZ"]], "arz (class in nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ"]], "arz_tabulated (class in nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated"]], "nuradiomc.signalgen.arz.arz": [[22, "module-NuRadioMC.SignalGen.ARZ.ARZ"]], "em_fraction() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.em_fraction"]], "get_last_shower_profile_id() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_last_shower_profile_id"]], "get_shower_profile() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_shower_profile"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_time_trace"]], "get_time_trace() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.get_time_trace"]], "get_vector_potential() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential"]], "get_vector_potential() (in module nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential"]], "get_vector_potential_fast() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.get_vector_potential_fast"]], "get_vector_potential_numba() (in module nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.get_vector_potential_numba"]], "set_interpolation_factor() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor"]], "set_interpolation_factor2() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_interpolation_factor2"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ.set_seed"]], "set_seed() (nuradiomc.signalgen.arz.arz.arz_tabulated method)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.ARZ_tabulated.set_seed"]], "theta_to_thetaprime() (in module nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.theta_to_thetaprime"]], "thetaprime_to_theta() (in module nuradiomc.signalgen.arz.arz)": [[22, "NuRadioMC.SignalGen.ARZ.ARZ.thetaprime_to_theta"]], "nuradiomc.signalgen.hcrb2017": [[23, "module-NuRadioMC.SignalGen.HCRB2017"]], "gauss() (in module nuradiomc.signalgen.hcrb2017)": [[23, "NuRadioMC.SignalGen.HCRB2017.gauss"]], "get_n_askdeptha() (in module nuradiomc.signalgen.hcrb2017)": [[23, "NuRadioMC.SignalGen.HCRB2017.get_N_AskDepthA"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.hcrb2017)": [[23, "NuRadioMC.SignalGen.HCRB2017.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.hcrb2017)": [[23, "NuRadioMC.SignalGen.HCRB2017.get_time_trace"]], "nuradiomc.signalgen.askaryan": [[24, "module-NuRadioMC.SignalGen.askaryan"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.askaryan)": [[24, "NuRadioMC.SignalGen.askaryan.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.askaryan)": [[24, "NuRadioMC.SignalGen.askaryan.get_time_trace"]], "nuradiomc.signalgen.emitter": [[25, "module-NuRadioMC.SignalGen.emitter"]], "get_frequency_spectrum() (in module nuradiomc.signalgen.emitter)": [[25, "NuRadioMC.SignalGen.emitter.get_frequency_spectrum"]], "get_time_trace() (in module nuradiomc.signalgen.emitter)": [[25, "NuRadioMC.SignalGen.emitter.get_time_trace"]], "nuradiomc.signalgen.parametrizations": [[26, "module-NuRadioMC.SignalGen.parametrizations"]], "get_parametrizations() (in module nuradiomc.signalgen.parametrizations)": [[26, "NuRadioMC.SignalGen.parametrizations.get_parametrizations"]], "get_time_trace() (in module nuradiomc.signalgen.parametrizations)": [[26, "NuRadioMC.SignalGen.parametrizations.get_time_trace"]], "logger (in module nuradiomc.signalgen.parametrizations)": [[26, "NuRadioMC.SignalGen.parametrizations.logger"]], "nuradiomc.signalprop": [[27, "module-NuRadioMC.SignalProp"]], "nuradiomc.signalprop.analyticraytracing": [[28, "module-NuRadioMC.SignalProp.analyticraytracing"]], "angular_diff() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.angular_diff"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.apply_propagation_effects"]], "apply_propagation_effects() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.apply_propagation_effects"]], "determine_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.determine_solution_type"]], "ds() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.ds"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.find_solutions"]], "find_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.find_solutions"]], "get_c0_from_log() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_C0_from_log"]], "get_c_0_from_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_0_from_angle"]], "get_c_1() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_C_1"]], "get_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle"]], "get_angle_from_c_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_C_0"]], "get_angle_from_logc_0() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_angle_from_logC_0"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_attenuation"]], "get_attenuation() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation"]], "get_attenuation_along_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_attenuation_along_path"]], "get_c() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_c"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_config"]], "get_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_config"]], "get_delta_y() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_delta_y"]], "get_effective_index_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_effective_index_birefringence"]], "get_focusing() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_focusing"]], "get_gamma() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_gamma"]], "get_launch_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_angle"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_launch_vector"]], "get_launch_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_launch_vector"]], "get_n_steps() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_n_steps"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_number_of_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_output_parameters"]], "get_output_parameters() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_output_parameters"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path"]], "get_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_length"]], "get_path_length() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length"]], "get_path_length_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_length_analytic"]], "get_path_properties_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_path_properties_birefringence"]], "get_path_reflections() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_reflections"]], "get_path_segments() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_path_segments"]], "get_polarization_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_polarization_birefringence"]], "get_polarization_birefringence_simple() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_polarization_birefringence_simple"]], "get_pulse_propagation_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_pulse_propagation_birefringence"]], "get_ray_path() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_ray_path"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_raytracing_output"]], "get_raytracing_output() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_raytracing_output"]], "get_receive_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_angle"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_receive_vector"]], "get_receive_vector() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_reflection_angle"]], "get_reflection_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_reflection_angle"]], "get_reflection_point() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_reflection_point"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_results"]], "get_results() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_results"]], "get_segments() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_segments"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_solution_type"]], "get_solution_type() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_solution_type"]], "get_surf_skim_angle() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surf_skim_angle"]], "get_surface_pulse() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_surface_pulse"]], "get_tof_for_straight_line() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_tof_for_straight_line"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.get_travel_time"]], "get_travel_time() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time"]], "get_travel_time_analytic() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_travel_time_analytic"]], "get_turning_point() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_turning_point"]], "get_y() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_y"]], "get_y_diff() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_y_diff"]], "get_y_turn() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_y_turn"]], "get_y_with_z_mirror() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_y_with_z_mirror"]], "get_z_deep() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_z_deep"]], "get_z_from_n() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_from_n"]], "get_z_mirrored() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.get_z_mirrored"]], "get_z_unmirrored() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.get_z_unmirrored"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.has_solution"]], "has_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.has_solution"]], "is_in_refraction_zone() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.is_in_refraction_zone"]], "n() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.n"]], "obj_delta_y() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.obj_delta_y"]], "obj_delta_y_square() (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.obj_delta_y_square"]], "on_sky_birefringence() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.on_sky_birefringence"]], "plot_result() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.plot_result"]], "ray_tracing (class in nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing"]], "ray_tracing_2d (class in nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.reset_solutions"]], "reset_solutions() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.reset_solutions"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_config"]], "set_config() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_config"]], "set_solution() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_solution"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.set_start_and_end_point"]], "set_start_and_end_point() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.set_start_and_end_point"]], "speed_of_light (in module nuradiomc.signalprop.analyticraytracing)": [[28, "NuRadioMC.SignalProp.analyticraytracing.speed_of_light"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing.use_optional_function"]], "use_optional_function() (nuradiomc.signalprop.analyticraytracing.ray_tracing_2d method)": [[28, "NuRadioMC.SignalProp.analyticraytracing.ray_tracing_2D.use_optional_function"]], "nuradiomc.signalprop.directraytracing": [[29, "module-NuRadioMC.SignalProp.directRayTracing"]], "apply_propagation_effects() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.apply_propagation_effects"]], "direct_ray_tracing (class in nuradiomc.signalprop.directraytracing)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing"]], "find_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_config"]], "get_launch_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path"]], "get_path_length() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.has_solution"]], "reset_solutions() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.directraytracing.direct_ray_tracing method)": [[29, "NuRadioMC.SignalProp.directRayTracing.direct_ray_tracing.use_optional_function"]], "nuradiomc.signalprop.propagation": [[30, "module-NuRadioMC.SignalProp.propagation"]], "get_propagation_module() (in module nuradiomc.signalprop.propagation)": [[30, "NuRadioMC.SignalProp.propagation.get_propagation_module"]], "nuradiomc.signalprop.propagation_base_class": [[31, "module-NuRadioMC.SignalProp.propagation_base_class"]], "apply_propagation_effects() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.apply_propagation_effects"]], "find_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_attenuation"]], "get_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_config"]], "get_launch_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_launch_vector"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_output_parameters"]], "get_path() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path"]], "get_path_length() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_results"]], "get_solution_type() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.get_travel_time"]], "has_solution() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.has_solution"]], "ray_tracing_base (class in nuradiomc.signalprop.propagation_base_class)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base"]], "reset_solutions() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.reset_solutions"]], "set_config() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_config"]], "set_start_and_end_point() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.propagation_base_class.ray_tracing_base method)": [[31, "NuRadioMC.SignalProp.propagation_base_class.ray_tracing_base.use_optional_function"]], "nuradiomc.signalprop.radioproparaytracing": [[32, "module-NuRadioMC.SignalProp.radioproparaytracing"]], "activate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.activate_auto_step_size"]], "apply_propagation_effects() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.apply_propagation_effects"]], "deactivate_auto_step_size() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.deactivate_auto_step_size"]], "delta_theta_bottom() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_bottom"]], "delta_theta_direct() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_direct"]], "delta_theta_reflective() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.delta_theta_reflective"]], "find_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.find_solutions"]], "get_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_attenuation"]], "get_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_config"]], "get_correction_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_path_length"]], "get_correction_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_correction_travel_time"]], "get_focusing() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_focusing"]], "get_frequencies_for_attenuation() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_frequencies_for_attenuation"]], "get_launch_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector"]], "get_launch_vector_analytic() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_launch_vector_analytic"]], "get_number_of_raytracing_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_raytracing_solutions"]], "get_number_of_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_number_of_solutions"]], "get_output_parameters() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_output_parameters"]], "get_path() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path"]], "get_path_candidate() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_candidate"]], "get_path_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_path_length"]], "get_raytracing_output() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_raytracing_output"]], "get_receive_vector() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_receive_vector"]], "get_reflection_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_reflection_angle"]], "get_results() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_results"]], "get_solution_type() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_solution_type"]], "get_travel_time() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.get_travel_time"]], "has_solution() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.has_solution"]], "radiopropa_ray_tracing (class in nuradiomc.signalprop.radioproparaytracing)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing"]], "raytracer_birefringence() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_birefringence"]], "raytracer_iterative() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_iterative"]], "raytracer_minimizer() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.raytracer_minimizer"]], "reset_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.reset_solutions"]], "set_config() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_config"]], "set_cut_viewing_angle() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_cut_viewing_angle"]], "set_iterative_sphere_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_sphere_sizes"]], "set_iterative_step_sizes() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_iterative_step_sizes"]], "set_maximum_trajectory_length() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_maximum_trajectory_length"]], "set_minimizer_tolerance() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_minimizer_tolerance"]], "set_shower_axis() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_shower_axis"]], "set_solutions() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_solutions"]], "set_start_and_end_point() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.set_start_and_end_point"]], "use_optional_function() (nuradiomc.signalprop.radioproparaytracing.radiopropa_ray_tracing method)": [[32, "NuRadioMC.SignalProp.radioproparaytracing.radiopropa_ray_tracing.use_optional_function"]], "nuradiomc.simulation": [[33, "module-NuRadioMC.simulation"]], "nuradiomc.simulation.output_writer_hdf5": [[34, "module-NuRadioMC.simulation.output_writer_hdf5"]], "add_event_group() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[34, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.add_event_group"]], "calculate_veff() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[34, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.calculate_Veff"]], "outputwriterhdf5 (class in nuradiomc.simulation.output_writer_hdf5)": [[34, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5"]], "write_empty_output_file() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[34, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.write_empty_output_file"]], "write_output_file() (nuradiomc.simulation.output_writer_hdf5.outputwriterhdf5 method)": [[34, "NuRadioMC.simulation.output_writer_hdf5.outputWriterHDF5.write_output_file"]], "nuradiomc.simulation.simulation": [[35, "module-NuRadioMC.simulation.simulation"]], "apply_det_response() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.apply_det_response"]], "apply_det_response_sim() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.apply_det_response_sim"]], "build_nuradioevents_from_hdf5() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.build_NuRadioEvents_from_hdf5"]], "build_dummy_event() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.build_dummy_event"]], "calculate_particle_weight() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.calculate_particle_weight"]], "calculate_polarization_vector() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.calculate_polarization_vector"]], "calculate_sim_efield() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.calculate_sim_efield"]], "calculate_sim_efield_for_emitter() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.calculate_sim_efield_for_emitter"]], "get_vrms() (nuradiomc.simulation.simulation.simulation method)": [[35, "NuRadioMC.simulation.simulation.simulation.get_Vrms"]], "get_bandwidth() (nuradiomc.simulation.simulation.simulation method)": [[35, "NuRadioMC.simulation.simulation.simulation.get_bandwidth"]], "get_config() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.get_config"]], "get_sampling_rate() (nuradiomc.simulation.simulation.simulation method)": [[35, "NuRadioMC.simulation.simulation.simulation.get_sampling_rate"]], "group_into_events() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.group_into_events"]], "increase_signal() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.increase_signal"]], "integrated_channel_response (nuradiomc.simulation.simulation.simulation property)": [[35, "NuRadioMC.simulation.simulation.simulation.integrated_channel_response"]], "merge_config() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.merge_config"]], "read_input_hdf5() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.read_input_hdf5"]], "remove_all_traces() (in module nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.remove_all_traces"]], "run() (nuradiomc.simulation.simulation.simulation method)": [[35, "NuRadioMC.simulation.simulation.simulation.run"]], "simulation (class in nuradiomc.simulation.simulation)": [[35, "NuRadioMC.simulation.simulation.simulation"]], "nuradiomc.simulation.time_logger": [[36, "module-NuRadioMC.simulation.time_logger"]], "pretty_time_delta() (in module nuradiomc.simulation.time_logger)": [[36, "NuRadioMC.simulation.time_logger.pretty_time_delta"]], "reset_times() (nuradiomc.simulation.time_logger.timelogger method)": [[36, "NuRadioMC.simulation.time_logger.timeLogger.reset_times"]], "show_time() (nuradiomc.simulation.time_logger.timelogger method)": [[36, "NuRadioMC.simulation.time_logger.timeLogger.show_time"]], "start_time() (nuradiomc.simulation.time_logger.timelogger method)": [[36, "NuRadioMC.simulation.time_logger.timeLogger.start_time"]], "stop_time() (nuradiomc.simulation.time_logger.timelogger method)": [[36, "NuRadioMC.simulation.time_logger.timeLogger.stop_time"]], "timelogger (class in nuradiomc.simulation.time_logger)": [[36, "NuRadioMC.simulation.time_logger.timeLogger"]], "nuradiomc.utilities": [[37, "module-NuRadioMC.utilities"]], "fc_limits() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.FC_limits"]], "nuradiomc.utilities.veff": [[38, "module-NuRadioMC.utilities.Veff"]], "export() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.export"]], "get_veff_aeff() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_Veff_Aeff"]], "get_veff_aeff_array() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_Veff_Aeff_array"]], "get_veff_aeff_single() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single"]], "get_veff_aeff_single_wrapper() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_Veff_Aeff_single_wrapper"]], "get_veff_water_equivalent() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_Veff_water_equivalent"]], "get_index() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_index"]], "get_veff_output() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.get_veff_output"]], "remove_duplicate_triggers() (in module nuradiomc.utilities.veff)": [[38, "NuRadioMC.utilities.Veff.remove_duplicate_triggers"]], "nuradiomc.utilities.attenuation": [[39, "module-NuRadioMC.utilities.attenuation"]], "fit_gl1() (in module nuradiomc.utilities.attenuation)": [[39, "NuRadioMC.utilities.attenuation.fit_GL1"]], "get_attenuation_length() (in module nuradiomc.utilities.attenuation)": [[39, "NuRadioMC.utilities.attenuation.get_attenuation_length"]], "get_temperature() (in module nuradiomc.utilities.attenuation)": [[39, "NuRadioMC.utilities.attenuation.get_temperature"]], "nuradiomc.utilities.cross_sections": [[40, "module-NuRadioMC.utilities.cross_sections"]], "csms() (in module nuradiomc.utilities.cross_sections)": [[40, "NuRadioMC.utilities.cross_sections.csms"]], "get_interaction_length() (in module nuradiomc.utilities.cross_sections)": [[40, "NuRadioMC.utilities.cross_sections.get_interaction_length"]], "get_nu_cross_section() (in module nuradiomc.utilities.cross_sections)": [[40, "NuRadioMC.utilities.cross_sections.get_nu_cross_section"]], "param() (in module nuradiomc.utilities.cross_sections)": [[40, "NuRadioMC.utilities.cross_sections.param"]], "nuradiomc.utilities.dump_hdf5": [[41, "module-NuRadioMC.utilities.dump_hdf5"]], "dump() (in module nuradiomc.utilities.dump_hdf5)": [[41, "NuRadioMC.utilities.dump_hdf5.dump"]], "coremantlecrustmodel (class in nuradiomc.utilities.earth_attenuation)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel"]], "nuradiomc.utilities.earth_attenuation": [[42, "module-NuRadioMC.utilities.earth_attenuation"]], "prem (class in nuradiomc.utilities.earth_attenuation)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM"]], "densities (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.densities"]], "densities (nuradiomc.utilities.earth_attenuation.prem attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM.densities"]], "density() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.density"]], "density() (nuradiomc.utilities.earth_attenuation.prem method)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM.density"]], "earth_radius (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.earth_radius"]], "earth_radius (nuradiomc.utilities.earth_attenuation.prem attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM.earth_radius"]], "get_core_mantle_crust_weight() (in module nuradiomc.utilities.earth_attenuation)": [[42, "NuRadioMC.utilities.earth_attenuation.get_core_mantle_crust_weight"]], "get_simple_weight() (in module nuradiomc.utilities.earth_attenuation)": [[42, "NuRadioMC.utilities.earth_attenuation.get_simple_weight"]], "get_weight() (in module nuradiomc.utilities.earth_attenuation)": [[42, "NuRadioMC.utilities.earth_attenuation.get_weight"]], "radii (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.radii"]], "radii (nuradiomc.utilities.earth_attenuation.prem attribute)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM.radii"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.coremantlecrustmodel method)": [[42, "NuRadioMC.utilities.earth_attenuation.CoreMantleCrustModel.slant_depth"]], "slant_depth() (nuradiomc.utilities.earth_attenuation.prem method)": [[42, "NuRadioMC.utilities.earth_attenuation.PREM.slant_depth"]], "nuradiomc.utilities.fluxes": [[43, "module-NuRadioMC.utilities.fluxes"]], "get_exposure() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_exposure"]], "get_fluence_limit() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_fluence_limit"]], "get_integrated_exposure() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_integrated_exposure"]], "get_limit_e1_flux() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_limit_e1_flux"]], "get_limit_e2_flux() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_limit_e2_flux"]], "get_limit_flux() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_limit_flux"]], "get_limit_from_aeff() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_limit_from_aeff"]], "get_number_of_events_for_flux() (in module nuradiomc.utilities.fluxes)": [[43, "NuRadioMC.utilities.fluxes.get_number_of_events_for_flux"]], "nuradiomc.utilities.inelasticities": [[44, "module-NuRadioMC.utilities.inelasticities"]], "get_ccnc() (in module nuradiomc.utilities.inelasticities)": [[44, "NuRadioMC.utilities.inelasticities.get_ccnc"]], "get_neutrino_inelasticity() (in module nuradiomc.utilities.inelasticities)": [[44, "NuRadioMC.utilities.inelasticities.get_neutrino_inelasticity"]], "inelasticity_tau_decay() (in module nuradiomc.utilities.inelasticities)": [[44, "NuRadioMC.utilities.inelasticities.inelasticity_tau_decay"]], "random_tau_branch() (in module nuradiomc.utilities.inelasticities)": [[44, "NuRadioMC.utilities.inelasticities.random_tau_branch"]], "rejection_sampling() (in module nuradiomc.utilities.inelasticities)": [[44, "NuRadioMC.utilities.inelasticities.rejection_sampling"]], "ara_2022 (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.ARA_2022"]], "arasim_southpole (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole"]], "nuradiomc.utilities.medium": [[45, "module-NuRadioMC.utilities.medium"]], "add_reflective_bottom() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.add_reflective_bottom"]], "birefringence_medium (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.birefringence_medium"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.get_average_index_of_refraction"]], "get_birefringence_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.get_birefringence_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.get_gradient_of_index_of_refraction"]], "get_ice_model() (in module nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.get_ice_model"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.get_index_of_refraction"]], "greenland_firn (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.greenland_firn"]], "greenland_perturbation (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation"]], "greenland_simple (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.greenland_simple"]], "mooresbay_simple (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple"]], "mooresbay_simple_2 (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.ara_2022 method)": [[45, "NuRadioMC.utilities.medium.ARA_2022.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.arasim_southpole method)": [[45, "NuRadioMC.utilities.medium.ARAsim_southpole.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.birefringence_medium method)": [[45, "NuRadioMC.utilities.medium.birefringence_medium.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_firn method)": [[45, "NuRadioMC.utilities.medium.greenland_firn.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_perturbation method)": [[45, "NuRadioMC.utilities.medium.greenland_perturbation.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.greenland_simple method)": [[45, "NuRadioMC.utilities.medium.greenland_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.mooresbay_simple_2 method)": [[45, "NuRadioMC.utilities.medium.mooresbay_simple_2.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_2015 method)": [[45, "NuRadioMC.utilities.medium.southpole_2015.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.southpole_simple method)": [[45, "NuRadioMC.utilities.medium.southpole_simple.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium.uniform_ice method)": [[45, "NuRadioMC.utilities.medium.uniform_ice.set_ice_model_radiopropa"]], "southpole_2015 (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.southpole_2015"]], "southpole_simple (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.southpole_simple"]], "uniform_ice (class in nuradiomc.utilities.medium)": [[45, "NuRadioMC.utilities.medium.uniform_ice"]], "icemodel (class in nuradiomc.utilities.medium_base)": [[46, "NuRadioMC.utilities.medium_base.IceModel"]], "icemodelbirefringence (class in nuradiomc.utilities.medium_base)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence"]], "icemodelsimple (class in nuradiomc.utilities.medium_base)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple"]], "nuradiomc.utilities.medium_base": [[46, "module-NuRadioMC.utilities.medium_base"]], "radiopropaicewrapper (class in nuradiomc.utilities.medium_base)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper"]], "scalarfieldbuilder (class in nuradiomc.utilities.medium_base)": [[46, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder"]], "add_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.add_module"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.add_reflective_bottom"]], "add_reflective_bottom() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.add_reflective_bottom"]], "getgradient() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[46, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getGradient"]], "getvalue() (nuradiomc.utilities.medium_base.scalarfieldbuilder method)": [[46, "NuRadioMC.utilities.medium_base.ScalarFieldBuilder.getValue"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_average_index_of_refraction"]], "get_average_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.get_average_index_of_refraction"]], "get_birefringence_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_birefringence_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_gradient_of_index_of_refraction"]], "get_gradient_of_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.get_gradient_of_index_of_refraction"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_ice_model_radiopropa"]], "get_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.get_ice_model_radiopropa"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.get_index_of_refraction"]], "get_index_of_refraction() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.get_index_of_refraction"]], "get_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_module"]], "get_modules() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_modules"]], "get_scalar_field() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.get_scalar_field"]], "remove_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.remove_module"]], "replace_module() (nuradiomc.utilities.medium_base.radiopropaicewrapper method)": [[46, "NuRadioMC.utilities.medium_base.RadioPropaIceWrapper.replace_module"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodel method)": [[46, "NuRadioMC.utilities.medium_base.IceModel.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelbirefringence method)": [[46, "NuRadioMC.utilities.medium_base.IceModelBirefringence.set_ice_model_radiopropa"]], "set_ice_model_radiopropa() (nuradiomc.utilities.medium_base.icemodelsimple method)": [[46, "NuRadioMC.utilities.medium_base.IceModelSimple.set_ice_model_radiopropa"]], "nuradiomc.utilities.merge_hdf5": [[47, "module-NuRadioMC.utilities.merge_hdf5"]], "merge2() (in module nuradiomc.utilities.merge_hdf5)": [[47, "NuRadioMC.utilities.merge_hdf5.merge2"]], "muonflux (class in nuradiomc.utilities.muon_flux)": [[48, "NuRadioMC.utilities.muon_flux.MuonFlux"]], "nuradiomc.utilities.muon_flux": [[48, "module-NuRadioMC.utilities.muon_flux"]], "get_e_grid() (nuradiomc.utilities.muon_flux.muonflux method)": [[48, "NuRadioMC.utilities.muon_flux.MuonFlux.get_e_grid"]], "get_int_angle_mu_flux_buffered() (nuradiomc.utilities.muon_flux.muonflux method)": [[48, "NuRadioMC.utilities.muon_flux.MuonFlux.get_int_angle_mu_flux_buffered"]], "get_interp_angle_mu_flux() (nuradiomc.utilities.muon_flux.muonflux method)": [[48, "NuRadioMC.utilities.muon_flux.MuonFlux.get_interp_angle_mu_flux"]], "get_mu_flux() (nuradiomc.utilities.muon_flux.muonflux method)": [[48, "NuRadioMC.utilities.muon_flux.MuonFlux.get_mu_flux"]], "nuradiomc.utilities.plotting": [[49, "module-NuRadioMC.utilities.plotting"]], "plot_vertex_distribution() (in module nuradiomc.utilities.plotting)": [[49, "NuRadioMC.utilities.plotting.plot_vertex_distribution"]], "nuradiomc.utilities.runner": [[50, "module-NuRadioMC.utilities.runner"]], "nuradiomcrunner (class in nuradiomc.utilities.runner)": [[50, "NuRadioMC.utilities.runner.NuRadioMCRunner"]], "get_outputfilename() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[50, "NuRadioMC.utilities.runner.NuRadioMCRunner.get_outputfilename"]], "run() (nuradiomc.utilities.runner.nuradiomcrunner method)": [[50, "NuRadioMC.utilities.runner.NuRadioMCRunner.run"]], "nuradiomc.utilities.runner_example": [[51, "module-NuRadioMC.utilities.runner_example"]], "task() (in module nuradiomc.utilities.runner_example)": [[51, "NuRadioMC.utilities.runner_example.task"]], "nuradiomc.utilities.split_hdf5": [[52, "module-NuRadioMC.utilities.split_hdf5"]], "split_hdf5_input_file() (in module nuradiomc.utilities.split_hdf5)": [[52, "NuRadioMC.utilities.split_hdf5.split_hdf5_input_file"]], "nuradioreco.detector": [[68, "module-NuRadioReco.detector"]], "nuradioreco.detector.ara": [[69, "module-NuRadioReco.detector.ARA"]], "nuradioreco.detector.ara.analog_components": [[70, "module-NuRadioReco.detector.ARA.analog_components"]], "get_system_response() (in module nuradioreco.detector.ara.analog_components)": [[70, "NuRadioReco.detector.ARA.analog_components.get_system_response"]], "load_system_response() (in module nuradioreco.detector.ara.analog_components)": [[70, "NuRadioReco.detector.ARA.analog_components.load_system_response"]], "nuradioreco.detector.arianna": [[71, "module-NuRadioReco.detector.ARIANNA"]], "nuradioreco.detector.arianna.analog_components": [[72, "module-NuRadioReco.detector.ARIANNA.analog_components"]], "get_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.get_amplifier_response"]], "get_available_amplifiers() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.get_available_amplifiers"]], "get_cable_response() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response"]], "get_cable_response_parametrized() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.get_cable_response_parametrized"]], "load_amp_measurement() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.load_amp_measurement"]], "load_amplifier_response() (in module nuradioreco.detector.arianna.analog_components)": [[72, "NuRadioReco.detector.ARIANNA.analog_components.load_amplifier_response"]], "nuradioreco.detector.arianna.preprocessampresponses": [[73, "module-NuRadioReco.detector.ARIANNA.preprocessAmpResponses"]], "preprocess_300amp() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[73, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.preprocess_300Amp"]], "save_preprocessed_amps() (in module nuradioreco.detector.arianna.preprocessampresponses)": [[73, "NuRadioReco.detector.ARIANNA.preprocessAmpResponses.save_preprocessed_Amps"]], "nuradioreco.detector.lofar": [[74, "module-NuRadioReco.detector.LOFAR"]], "nuradioreco.detector.rno_g": [[75, "module-NuRadioReco.detector.RNO_G"]], "nuradioreco.detector.rno_g.analog_components": [[76, "module-NuRadioReco.detector.RNO_G.analog_components"]], "get_available_amplifiers() (in module nuradioreco.detector.rno_g.analog_components)": [[76, "NuRadioReco.detector.RNO_G.analog_components.get_available_amplifiers"]], "load_amp_response() (in module nuradioreco.detector.rno_g.analog_components)": [[76, "NuRadioReco.detector.RNO_G.analog_components.load_amp_response"]], "database (class in nuradioreco.detector.rno_g.db_mongo_read)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database"]], "nuradioreco.detector.rno_g.db_mongo_read": [[77, "module-NuRadioReco.detector.RNO_G.db_mongo_read"]], "dictionarize_nested_lists() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists"]], "dictionarize_nested_lists_as_tuples() (in module nuradioreco.detector.rno_g.db_mongo_read)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.dictionarize_nested_lists_as_tuples"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.query_modification_timestamps_per_station"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_read.database method)": [[77, "NuRadioReco.detector.RNO_G.db_mongo_read.Database.set_detector_time"]], "database (class in nuradioreco.detector.rno_g.db_mongo_write)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database"]], "nuradioreco.detector.rno_g.db_mongo_write": [[78, "module-NuRadioReco.detector.RNO_G.db_mongo_write"]], "add_entry_to_database() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_entry_to_database"]], "add_general_channel_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_channel_info_to_station"]], "add_general_device_info_to_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_device_info_to_station"]], "add_general_station_info() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_general_station_info"]], "add_measurement_protocol() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.add_measurement_protocol"]], "change_primary_antenna_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_antenna_measurement"]], "change_primary_cable_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_cable_measurement"]], "change_primary_downhole_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_downhole_measurement"]], "change_primary_drab_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_drab_measurement"]], "change_primary_iglu_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_iglu_measurement"]], "change_primary_surface_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.change_primary_surface_measurement"]], "clone_collection_to_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.clone_collection_to_collection"]], "create_empty_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.create_empty_collection"]], "decommission_a_channel() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_channel"]], "decommission_a_device() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_device"]], "decommission_a_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.decommission_a_station"]], "find_primary_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.find_primary_measurement"]], "get_all_available_signal_chain_configs() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_all_available_signal_chain_configs"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain"]], "get_channel_signal_chain_measurement() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_channel_signal_chain_measurement"]], "get_collection_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_information"]], "get_collection_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_collection_names"]], "get_complete_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_channel_information"]], "get_complete_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_device_information"]], "get_complete_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_complete_station_information"]], "get_component_data() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_component_data"]], "get_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_database_time"]], "get_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_detector_time"]], "get_general_channel_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_channel_information"]], "get_general_device_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_device_information"]], "get_general_station_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_general_station_information"]], "get_identifier() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_identifier"]], "get_object_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_object_names"]], "get_position() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_position"]], "get_quantity_names() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_quantity_names"]], "get_station_ids() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.get_station_ids"]], "load_board_information() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.load_board_information"]], "query_modification_timestamps_per_station() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.query_modification_timestamps_per_station"]], "rename_database_collection() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.rename_database_collection"]], "set_database_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_database_time"]], "set_detector_time() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_detector_time"]], "set_not_working() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.set_not_working"]], "update_current_primary() (nuradioreco.detector.rno_g.db_mongo_write.database method)": [[78, "NuRadioReco.detector.RNO_G.db_mongo_write.Database.update_current_primary"]], "detector (class in nuradioreco.detector.rno_g.rnog_detector)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector"]], "nuradioreco.detector.rno_g.rnog_detector": [[79, "module-NuRadioReco.detector.RNO_G.rnog_detector"]], "export() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export"]], "export_as_string() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.export_as_string"]], "get_absolute_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_absolute_position"]], "get_amplifier_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_amplifier_response"]], "get_antenna_model() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_cable_delay"]], "get_channel() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel"]], "get_channel_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_ids"]], "get_channel_orientation() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_orientation"]], "get_channel_signal_chain() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_channel_signal_chain"]], "get_detector_time() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_detector_time"]], "get_devices() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_devices"]], "get_noise_temperature() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position"]], "get_relative_position_device() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_relative_position_device"]], "get_sampling_frequency() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_sampling_frequency"]], "get_signal_chain_components() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_components"]], "get_signal_chain_response() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_signal_chain_response"]], "get_site() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site"]], "get_site_coordinates() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_site_coordinates"]], "get_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station"]], "get_station_ids() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_station_ids"]], "get_time_delay() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.get_time_delay"]], "has_station() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.is_channel_noiseless"]], "update() (nuradioreco.detector.rno_g.rnog_detector.detector method)": [[79, "NuRadioReco.detector.RNO_G.rnog_detector.Detector.update"]], "nuradioreco.detector.amp": [[80, "module-NuRadioReco.detector.amp"]], "get_amp_response() (in module nuradioreco.detector.amp)": [[80, "NuRadioReco.detector.amp.get_amp_response"]], "antennapattern (class in nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.AntennaPattern"]], "antennapatternanalytic (class in nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic"]], "antennapatternbase (class in nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternBase"]], "antennapatternprovider (class in nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternProvider"]], "nuradioreco.detector.antennapattern": [[81, "module-NuRadioReco.detector.antennapattern"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapattern method)": [[81, "NuRadioReco.detector.antennapattern.AntennaPattern.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.get_antenna_response_vectorized"]], "get_antenna_response_vectorized() (nuradioreco.detector.antennapattern.antennapatternbase method)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternBase.get_antenna_response_vectorized"]], "get_group_delay() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.get_group_delay"]], "get_pickle_antenna_response() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.get_pickle_antenna_response"]], "interpolate_linear() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.interpolate_linear"]], "interpolate_linear_vectorized() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.interpolate_linear_vectorized"]], "load_antenna_pattern() (nuradioreco.detector.antennapattern.antennapatternprovider method)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternProvider.load_antenna_pattern"]], "parametric_phase() (nuradioreco.detector.antennapattern.antennapatternanalytic method)": [[81, "NuRadioReco.detector.antennapattern.AntennaPatternAnalytic.parametric_phase"]], "parse_aera_xml_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_AERA_XML_file"]], "parse_ara_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_ARA_file"]], "parse_hfss_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_HFSS_file"]], "parse_lofar_txt_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_LOFAR_txt_file"]], "parse_rnog_xfdtd_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_RNOG_XFDTD_file"]], "parse_wipld_file() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.parse_WIPLD_file"]], "preprocess_aera() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_AERA"]], "preprocess_ara() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_ARA"]], "preprocess_hfss() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_HFSS"]], "preprocess_lofar_txt() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_LOFAR_txt"]], "preprocess_rnog_xfdtd() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_RNOG_XFDTD"]], "preprocess_wipld() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_WIPLD"]], "preprocess_wipld_old() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_WIPLD_old"]], "preprocess_xfdtd() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.preprocess_XFDTD"]], "save_preprocessed_wipld() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD"]], "save_preprocessed_wipld_forara() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_forARA"]], "save_preprocessed_wipld_old() (in module nuradioreco.detector.antennapattern)": [[81, "NuRadioReco.detector.antennapattern.save_preprocessed_WIPLD_old"]], "detector() (in module nuradioreco.detector.detector)": [[82, "NuRadioReco.detector.detector.Detector"]], "nuradioreco.detector.detector": [[82, "module-NuRadioReco.detector.detector"]], "datetimeserializer (class in nuradioreco.detector.detector_base)": [[83, "NuRadioReco.detector.detector_base.DateTimeSerializer"]], "detectorbase (class in nuradioreco.detector.detector_base)": [[83, "NuRadioReco.detector.detector_base.DetectorBase"]], "nuradioreco.detector.detector_base": [[83, "module-NuRadioReco.detector.detector_base"]], "obj_class (nuradioreco.detector.detector_base.datetimeserializer attribute)": [[83, "NuRadioReco.detector.detector_base.DateTimeSerializer.OBJ_CLASS"]], "antenna_by_depth (nuradioreco.detector.detector_base.detectorbase property)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.antenna_by_depth"]], "assume_inf (nuradioreco.detector.detector_base.detectorbase property)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.assume_inf"]], "buffer_db() (in module nuradioreco.detector.detector_base)": [[83, "NuRadioReco.detector.detector_base.buffer_db"]], "decode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[83, "NuRadioReco.detector.detector_base.DateTimeSerializer.decode"]], "encode() (nuradioreco.detector.detector_base.datetimeserializer method)": [[83, "NuRadioReco.detector.detector_base.DateTimeSerializer.encode"]], "get_absolute_position() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_detector_time"]], "get_device() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_device"]], "get_device_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_station"]], "get_station_ids() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.is_channel_noiseless"]], "update() (nuradioreco.detector.detector_base.detectorbase method)": [[83, "NuRadioReco.detector.detector_base.DetectorBase.update"]], "detector (class in nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.Detector"]], "nuradioreco.detector.detector_sql": [[84, "module-NuRadioReco.detector.detector_sql"]], "get_absolute_position_site() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_absolute_position_site"]], "get_amplifier_type() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_amplifier_type"]], "get_amplifier_type() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_antenna_model"]], "get_antenna_model_file() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_antenna_model_file"]], "get_antenna_orientation() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_antenna_type"]], "get_antenna_type() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_cable_delay"]], "get_cable_delays() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_cable_delays"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_cable_type_and_length"]], "get_everything() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_everything"]], "get_everything_channels() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_everything_channels"]], "get_everything_positions() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_everything_positions"]], "get_everything_stations() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_everything_stations"]], "get_number_of_channels() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_number_of_channels"]], "get_number_of_channels() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_number_of_channels"]], "get_number_of_samples() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_number_of_samples"]], "get_relative_position() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_relative_position"]], "get_relative_position() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_relative_position"]], "get_relative_positions() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_relative_positions"]], "get_relative_positions() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_relative_positions"]], "get_sampling_frequency() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.get_site"]], "get_station_type() (in module nuradioreco.detector.detector_sql)": [[84, "NuRadioReco.detector.detector_sql.get_station_type"]], "update() (nuradioreco.detector.detector_sql.detector method)": [[84, "NuRadioReco.detector.detector_sql.Detector.update"]], "detectorsysuncertainties (class in nuradioreco.detector.detector_sys_uncertainties)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties"]], "nuradioreco.detector.detector_sys_uncertainties": [[85, "module-NuRadioReco.detector.detector_sys_uncertainties"]], "antenna_by_depth (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties property)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.antenna_by_depth"]], "assume_inf (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties property)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.assume_inf"]], "get_absolute_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel"]], "get_channel_group_id() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_channel_ids"]], "get_detector_time() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_detector_time"]], "get_device() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device"]], "get_device_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_parallel_channels"]], "get_relative_position() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_sampling_frequency"]], "get_site() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site"]], "get_site_coordinates() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_site_coordinates"]], "get_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station"]], "get_station_ids() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_station_ids"]], "get_unique_time_periods() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.get_unique_time_periods"]], "has_station() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.has_station"]], "is_channel_noiseless() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.is_channel_noiseless"]], "reset_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_orientation_offsets"]], "reset_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.reset_antenna_position_offsets"]], "set_antenna_orientation_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_orientation_offsets"]], "set_antenna_position_offsets() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.set_antenna_position_offsets"]], "update() (nuradioreco.detector.detector_sys_uncertainties.detectorsysuncertainties method)": [[85, "NuRadioReco.detector.detector_sys_uncertainties.DetectorSysUncertainties.update"]], "nuradioreco.detector.filterresponse": [[86, "module-NuRadioReco.detector.filterresponse"]], "get_filter_response() (in module nuradioreco.detector.filterresponse)": [[86, "NuRadioReco.detector.filterresponse.get_filter_response"]], "get_filter_response_mini_circuits() (in module nuradioreco.detector.filterresponse)": [[86, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits"]], "get_filter_response_mini_circuits2() (in module nuradioreco.detector.filterresponse)": [[86, "NuRadioReco.detector.filterresponse.get_filter_response_mini_circuits2"]], "genericdetector (class in nuradioreco.detector.generic_detector)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector"]], "nuradioreco.detector.generic_detector": [[87, "module-NuRadioReco.detector.generic_detector"]], "add_generic_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.add_generic_station"]], "add_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.add_station_properties_for_event"]], "antenna_by_depth (nuradioreco.detector.generic_detector.genericdetector property)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.antenna_by_depth"]], "assume_inf (nuradioreco.detector.generic_detector.genericdetector property)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.assume_inf"]], "get_absolute_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position"]], "get_absolute_position_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_absolute_position_site"]], "get_amplifier_measurement() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_measurement"]], "get_amplifier_response() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_response"]], "get_amplifier_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_amplifier_type"]], "get_antenna_deployment_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_deployment_time"]], "get_antenna_model() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_model"]], "get_antenna_orientation() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_orientation"]], "get_antenna_type() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_antenna_type"]], "get_cable_delay() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_delay"]], "get_cable_type_and_length() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_cable_type_and_length"]], "get_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel"]], "get_channel_group_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_group_id"]], "get_channel_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_channel_ids"]], "get_default_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel"]], "get_default_channel_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_channel_id"]], "get_default_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station"]], "get_default_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_default_station_id"]], "get_detector_time() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_detector_time"]], "get_device() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_device"]], "get_device_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_device_ids"]], "get_noise_rms() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_RMS"]], "get_noise_temperature() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_noise_temperature"]], "get_number_of_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_channels"]], "get_number_of_devices() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_devices"]], "get_number_of_samples() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_number_of_samples"]], "get_parallel_channels() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_parallel_channels"]], "get_raw_channel() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_channel"]], "get_raw_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_raw_station"]], "get_reference_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station"]], "get_reference_station_id() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_id"]], "get_reference_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_station_ids"]], "get_reference_stations() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_reference_stations"]], "get_relative_position() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_relative_position"]], "get_sampling_frequency() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_sampling_frequency"]], "get_site() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_site"]], "get_site_coordinates() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_site_coordinates"]], "get_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_station"]], "get_station_ids() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_ids"]], "get_station_properties_for_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_station_properties_for_event"]], "get_unique_time_periods() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.get_unique_time_periods"]], "has_station() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.has_station"]], "is_channel_noiseless() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.is_channel_noiseless"]], "set_event() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.set_event"]], "update() (nuradioreco.detector.generic_detector.genericdetector method)": [[87, "NuRadioReco.detector.generic_detector.GenericDetector.update"]], "nuradioreco.detector.response": [[88, "module-NuRadioReco.detector.response"]], "response (class in nuradioreco.detector.response)": [[88, "NuRadioReco.detector.response.Response"]], "get_names() (nuradioreco.detector.response.response method)": [[88, "NuRadioReco.detector.response.Response.get_names"]], "get_time_delay() (nuradioreco.detector.response.response method)": [[88, "NuRadioReco.detector.response.Response.get_time_delay"]], "get_time_delays() (nuradioreco.detector.response.response method)": [[88, "NuRadioReco.detector.response.Response.get_time_delays"]], "plot() (nuradioreco.detector.response.response method)": [[88, "NuRadioReco.detector.response.Response.plot"]], "remove() (nuradioreco.detector.response.response method)": [[88, "NuRadioReco.detector.response.Response.remove"]], "subtract_time_delay_from_response() (in module nuradioreco.detector.response)": [[88, "NuRadioReco.detector.response.subtract_time_delay_from_response"]], "nuradioreco.detector.sql_to_json": [[89, "module-NuRadioReco.detector.sql_to_json"]], "nuradioreco.detector.test_detector_db": [[90, "module-NuRadioReco.detector.test_detector_db"]], "nuradioreco.detector.visualize_detector": [[91, "module-NuRadioReco.detector.visualize_detector"]], "nuradioreco.framework": [[92, "module-NuRadioReco.framework"]], "baseshower (class in nuradioreco.framework.base_shower)": [[93, "NuRadioReco.framework.base_shower.BaseShower"]], "nuradioreco.framework.base_shower": [[93, "module-NuRadioReco.framework.base_shower"]], "deserialize() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.deserialize"]], "get_axis() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.get_id"]], "get_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.get_parameter"]], "get_parameters() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.get_parameters"]], "has_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.has_parameter"]], "serialize() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.serialize"]], "set_parameter() (nuradioreco.framework.base_shower.baseshower method)": [[93, "NuRadioReco.framework.base_shower.BaseShower.set_parameter"]], "basestation (class in nuradioreco.framework.base_station)": [[94, "NuRadioReco.framework.base_station.BaseStation"]], "nuradioreco.framework.base_station": [[94, "module-NuRadioReco.framework.base_station"]], "add_electric_field() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.add_electric_field"]], "deserialize() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_ARIANNA_parameters"]], "get_electric_field_ids() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_first_trigger"]], "get_id() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_id"]], "get_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_primary_trigger"]], "get_station_time() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_trigger"]], "get_triggers() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.has_parameter"]], "has_trigger() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.has_trigger"]], "has_triggered() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.is_neutrino"]], "remove_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.remove_triggers"]], "serialize() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_parameter_error"]], "set_station_time() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_station_time"]], "set_trigger() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_trigger"]], "set_triggered() (nuradioreco.framework.base_station.basestation method)": [[94, "NuRadioReco.framework.base_station.BaseStation.set_triggered"]], "basetrace (class in nuradioreco.framework.base_trace)": [[95, "NuRadioReco.framework.base_trace.BaseTrace"]], "nuradioreco.framework.base_trace": [[95, "module-NuRadioReco.framework.base_trace"]], "add_to_trace() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.apply_time_shift"]], "deserialize() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.deserialize"]], "get_filtered_trace() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_frequencies"]], "get_frequencies() (in module nuradioreco.framework.base_trace)": [[95, "NuRadioReco.framework.base_trace.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_number_of_samples"]], "get_sampling_rate() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_sampling_rate"]], "get_times() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_times"]], "get_trace() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_trace"]], "get_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.get_trace_start_time"]], "resample() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.resample"]], "serialize() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.set_frequency_spectrum"]], "set_trace() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.set_trace"]], "set_trace_start_time() (nuradioreco.framework.base_trace.basetrace method)": [[95, "NuRadioReco.framework.base_trace.BaseTrace.set_trace_start_time"]], "channel (class in nuradioreco.framework.channel)": [[96, "NuRadioReco.framework.channel.Channel"]], "nuradioreco.framework.channel": [[96, "module-NuRadioReco.framework.channel"]], "add_to_trace() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.apply_time_shift"]], "deserialize() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_id"]], "get_number_of_samples() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_parameter"]], "get_parameters() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_parameters"]], "get_sampling_rate() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_sampling_rate"]], "get_times() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_times"]], "get_trace() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.get_trace_start_time"]], "has_parameter() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.has_parameter"]], "resample() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.resample"]], "serialize() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.set_parameter"]], "set_trace() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.channel.channel method)": [[96, "NuRadioReco.framework.channel.Channel.set_trace_start_time"]], "electricfield (class in nuradioreco.framework.electric_field)": [[97, "NuRadioReco.framework.electric_field.ElectricField"]], "nuradioreco.framework.electric_field": [[97, "module-NuRadioReco.framework.electric_field"]], "add_to_trace() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.apply_time_shift"]], "deserialize() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.deserialize"]], "get_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_channel_ids"]], "get_filtered_trace() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_frequency_spectrum"]], "get_hilbert_envelope() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_hilbert_envelope_mag"]], "get_number_of_samples() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_parameter"]], "get_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_parameter_error"]], "get_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_parameters"]], "get_position() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_position"]], "get_ray_tracing_solution_id() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_shower_id"]], "get_stokes_parameters() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_stokes_parameters"]], "get_times() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_times"]], "get_trace() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_trace"]], "get_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.get_unique_identifier"]], "has_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.has_channel_ids"]], "has_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.has_parameter"]], "has_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.has_parameter_error"]], "resample() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.resample"]], "serialize() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.serialize"]], "set_channel_ids() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_channel_ids"]], "set_frequency_spectrum() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_parameter"]], "set_parameter_error() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_parameter_error"]], "set_position() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_position"]], "set_trace() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_trace"]], "set_trace_start_time() (nuradioreco.framework.electric_field.electricfield method)": [[97, "NuRadioReco.framework.electric_field.ElectricField.set_trace_start_time"]], "emitter (class in nuradioreco.framework.emitter)": [[98, "NuRadioReco.framework.emitter.Emitter"]], "nuradioreco.framework.emitter": [[98, "module-NuRadioReco.framework.emitter"]], "deserialize() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.deserialize"]], "get_id() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.get_id"]], "get_parameter() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.get_parameter"]], "get_parameters() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.get_parameters"]], "get_station_ids() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.get_station_ids"]], "has_parameter() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.has_parameter"]], "has_station_ids() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.has_station_ids"]], "serialize() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.serialize"]], "set_parameter() (nuradioreco.framework.emitter.emitter method)": [[98, "NuRadioReco.framework.emitter.Emitter.set_parameter"]], "event (class in nuradioreco.framework.event)": [[99, "NuRadioReco.framework.event.Event"]], "nuradioreco.framework.event": [[99, "module-NuRadioReco.framework.event"]], "add_particle() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.add_particle"]], "add_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.add_shower"]], "add_sim_emitter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.add_sim_emitter"]], "add_sim_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.add_sim_shower"]], "deserialize() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.deserialize"]], "get_event_time() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_event_time"]], "get_first_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_first_shower"]], "get_first_sim_emitter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_first_sim_emitter"]], "get_first_sim_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_first_sim_shower"]], "get_generator_info() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_generator_info"]], "get_hybrid_information() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_hybrid_information"]], "get_id() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_id"]], "get_interaction_products() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_interaction_products"]], "get_parameter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_parameter"]], "get_parent() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_parent"]], "get_particle() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_particle"]], "get_particles() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_particles"]], "get_primary() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_primary"]], "get_run_number() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_run_number"]], "get_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_shower"]], "get_showers() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_showers"]], "get_sim_emitter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_sim_emitter"]], "get_sim_emitters() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_sim_emitters"]], "get_sim_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_sim_shower"]], "get_sim_showers() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_sim_showers"]], "get_station() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_station"]], "get_station_ids() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_station_ids"]], "get_stations() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.get_stations"]], "has_generator_info() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_generator_info"]], "has_parameter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_parameter"]], "has_particle() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_particle"]], "has_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_shower"]], "has_sim_emitter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_sim_emitter"]], "has_sim_shower() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_sim_shower"]], "has_triggered() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.has_triggered"]], "iter_modules() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.iter_modules"]], "register_module_event() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.register_module_event"]], "register_module_station() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.register_module_station"]], "serialize() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.serialize"]], "set_event_time() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.set_event_time"]], "set_generator_info() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.set_generator_info"]], "set_id() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.set_id"]], "set_parameter() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.set_parameter"]], "set_station() (nuradioreco.framework.event.event method)": [[99, "NuRadioReco.framework.event.Event.set_station"]], "hybridinformation (class in nuradioreco.framework.hybrid_information)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation"]], "nuradioreco.framework.hybrid_information": [[100, "module-NuRadioReco.framework.hybrid_information"]], "add_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation.add_hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation.deserialize"]], "get_hybrid_shower() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_shower"]], "get_hybrid_showers() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation.get_hybrid_showers"]], "serialize() (nuradioreco.framework.hybrid_information.hybridinformation method)": [[100, "NuRadioReco.framework.hybrid_information.HybridInformation.serialize"]], "hybridshower (class in nuradioreco.framework.hybrid_shower)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower"]], "nuradioreco.framework.hybrid_shower": [[101, "module-NuRadioReco.framework.hybrid_shower"]], "deserialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.deserialize"]], "get_axis() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_coordinatesystem"]], "get_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_hybrid_detector"]], "get_id() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_id"]], "get_name() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_name"]], "get_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameter"]], "get_parameters() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.get_parameters"]], "has_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.has_parameter"]], "serialize() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.serialize"]], "set_hybrid_detector() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.set_hybrid_detector"]], "set_parameter() (nuradioreco.framework.hybrid_shower.hybridshower method)": [[101, "NuRadioReco.framework.hybrid_shower.HybridShower.set_parameter"]], "nuradioreco.framework.parameter_serialization": [[102, "module-NuRadioReco.framework.parameter_serialization"]], "deserialize() (in module nuradioreco.framework.parameter_serialization)": [[102, "NuRadioReco.framework.parameter_serialization.deserialize"]], "deserialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[102, "NuRadioReco.framework.parameter_serialization.deserialize_covariances"]], "serialize() (in module nuradioreco.framework.parameter_serialization)": [[102, "NuRadioReco.framework.parameter_serialization.serialize"]], "serialize_covariances() (in module nuradioreco.framework.parameter_serialization)": [[102, "NuRadioReco.framework.parameter_serialization.serialize_covariances"]], "ariannaparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters"]], "emax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.Emax"]], "emin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.Emin"]], "nuradiomc_evtgen_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version"]], "nuradiomc_evtgen_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_EvtGen_version_hash"]], "nuradiomc_version (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version"]], "nuradiomc_version_hash (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.NuRadioMC_version_hash"]], "nuradioreco.framework.parameters": [[103, "module-NuRadioReco.framework.parameters"]], "p2p_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.P2P_amplitude"]], "snr (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.SNR"]], "tnoise (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.Tnoise"]], "vrms (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.Vrms"]], "vrms_nuradiomc_simulation (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.Vrms_NuRadioMC_simulation"]], "amplitude (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.amplitude"]], "antenna_type (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.antenna_type"]], "area (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.area"]], "atmospheric_model (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.atmospheric_model"]], "azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.azimuth"]], "azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.azimuth"]], "bandwidth (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.bandwidth"]], "bandwidth_nuradiomc_simulation (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.bandwidth_NuRadioMC_simulation"]], "block_offsets (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.block_offsets"]], "ccnc (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.ccnc"]], "channelparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.channelParameters"]], "channels_max_amplitude (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.channels_max_amplitude"]], "charge_excess_profile_id (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.charge_excess_profile_id"]], "chi2_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.chi2_efield_time_direction_fit"]], "comm_duration (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_duration"]], "comm_period (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.comm_period"]], "core (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.core"]], "cr_azimuth (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.cr_azimuth"]], "cr_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_azimuth"]], "cr_dominant_polarisation (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_dominant_polarisation"]], "cr_energy (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.cr_energy"]], "cr_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_energy"]], "cr_energy_em (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.cr_energy_em"]], "cr_energy_em (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_energy_em"]], "cr_spectrum_quadratic_term (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_quadratic_term"]], "cr_spectrum_slope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.cr_spectrum_slope"]], "cr_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.cr_xcorrelations"]], "cr_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_xcorrelations"]], "cr_xmax (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_xmax"]], "cr_zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.cr_zenith"]], "cr_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.cr_zenith"]], "deposited (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.deposited"]], "dirty_fft_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.dirty_fft_channels"]], "distance_correlations (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.distance_correlations"]], "distance_shower_maximum_geometric (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_geometric"]], "distance_shower_maximum_grammage (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.distance_shower_maximum_grammage"]], "dt (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.dt"]], "electricfieldparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters"]], "electromagnetic_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_energy"]], "electromagnetic_radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.electromagnetic_radiation_energy"]], "emitterparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.emitterParameters"]], "energy (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.energy"]], "energy (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.energy"]], "energy_fluence_ratios (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.energy_fluence_ratios"]], "eventparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.eventParameters"]], "fiducial_rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmax"]], "fiducial_rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_rmin"]], "fiducial_xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmax"]], "fiducial_xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_xmin"]], "fiducial_ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymax"]], "fiducial_ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_ymin"]], "fiducial_zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmax"]], "fiducial_zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.fiducial_zmin"]], "flagged_channels (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.flagged_channels"]], "flavor (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.flavor"]], "flavor (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.flavor"]], "flavors (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.flavors"]], "frequency (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.frequency"]], "generatorattributes (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.generatorAttributes"]], "half_width (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.half_width"]], "hash_nuradiomc (nuradioreco.framework.parameters.eventparameters attribute)": [[103, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioMC"]], "hash_nuradioreco (nuradioreco.framework.parameters.eventparameters attribute)": [[103, "NuRadioReco.framework.parameters.eventParameters.hash_NuRadioReco"]], "inelasticity (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.inelasticity"]], "inelasticity (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.inelasticity"]], "interaction_type (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.interaction_type"]], "interaction_type (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.interaction_type"]], "interferometric_core (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.interferometric_core"]], "interferometric_shower_axis (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_axis"]], "interferometric_shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.interferometric_shower_maximum"]], "internal_clock_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.internal_clock_time"]], "k_l (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.k_L"]], "l1_supression_value (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.l1_supression_value"]], "launch_vector (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.launch_vector"]], "magnetic_field_rotation (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_rotation"]], "magnetic_field_vector (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.magnetic_field_vector"]], "max_amp_antenna (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna"]], "max_amp_antenna_envelope (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.max_amp_antenna_envelope"]], "maximum_amplitude (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude"]], "maximum_amplitude_envelope (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.maximum_amplitude_envelope"]], "model (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.model"]], "n_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.n_events"]], "n_interaction (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.n_interaction"]], "n_interaction (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.n_interaction"]], "n_samples (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.n_samples"]], "ndf_efield_time_direction_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.ndf_efield_time_direction_fit"]], "noise_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.noise_regions"]], "noise_rms (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.noise_rms"]], "nu_azimuth (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_azimuth"]], "nu_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_energy"]], "nu_flavor (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_flavor"]], "nu_inttype (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_inttype"]], "nu_vertex (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_vertex"]], "nu_vertex_distance (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_distance"]], "nu_vertex_propagation_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.nu_vertex_propagation_time"]], "nu_viewing_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.nu_viewing_angle"]], "nu_xcorrelations (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.nu_xcorrelations"]], "nu_xcorrelations (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_xcorrelations"]], "nu_zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.nu_zenith"]], "observation_level (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.observation_level"]], "orientation_phi (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.orientation_phi"]], "orientation_theta (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.orientation_theta"]], "parent_id (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.parent_id"]], "parent_id (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.parent_id"]], "particleparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.particleParameters"]], "phimax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.phimax"]], "phimin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.phimin"]], "polarization (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.polarization"]], "polarization_angle (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle"]], "polarization_angle_expectation (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.polarization_angle_expectation"]], "position (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.position"]], "primary_particle (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.primary_particle"]], "radiation_energy (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.radiation_energy"]], "ray_path_type (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.ray_path_type"]], "raytracing_solution (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.raytracing_solution"]], "realization_id (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.realization_id"]], "reflection_coefficient_phi (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_phi"]], "reflection_coefficient_theta (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.reflection_coefficient_theta"]], "refractive_index_at_ground (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.refractive_index_at_ground"]], "rmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.rmax"]], "rmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.rmin"]], "rotation_phi (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.rotation_phi"]], "rotation_theta (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.rotation_theta"]], "seq_num (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_num"]], "seq_start_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_start_time"]], "seq_stop_time (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.seq_stop_time"]], "showerparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.showerParameters"]], "shower_energy (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.shower_energy"]], "shower_id (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.shower_id"]], "shower_maximum (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.shower_maximum"]], "signal_energy_fluence (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.signal_energy_fluence"]], "signal_ray_type (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_ray_type"]], "signal_receiving_azimuth (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_azimuth"]], "signal_receiving_zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_receiving_zenith"]], "signal_regions (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_regions"]], "signal_time (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_time"]], "signal_time (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.signal_time"]], "signal_time_offset (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.signal_time_offset"]], "sim_config (nuradioreco.framework.parameters.eventparameters attribute)": [[103, "NuRadioReco.framework.parameters.eventParameters.sim_config"]], "start_event_id (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.start_event_id"]], "stationparameters (class in nuradioreco.framework.parameters)": [[103, "NuRadioReco.framework.parameters.stationParameters"]], "station_time (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.station_time"]], "thetamax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.thetamax"]], "thetamin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.thetamin"]], "time (nuradioreco.framework.parameters.emitterparameters attribute)": [[103, "NuRadioReco.framework.parameters.emitterParameters.time"]], "total_number_of_events (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.total_number_of_events"]], "trigger_thresholds (nuradioreco.framework.parameters.ariannaparameters attribute)": [[103, "NuRadioReco.framework.parameters.ARIANNAParameters.trigger_thresholds"]], "triggered (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.triggered"]], "type (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.type"]], "vertex (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.vertex"]], "vertex (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.vertex"]], "vertex_2d_fit (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.vertex_2D_fit"]], "vertex_time (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.vertex_time"]], "vertex_time (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.vertex_time"]], "viewing_angles (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.viewing_angles"]], "volume (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.volume"]], "weight (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.weight"]], "xmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.xmax"]], "xmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.xmin"]], "ymax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.ymax"]], "ymin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.ymin"]], "zenith (nuradioreco.framework.parameters.channelparameters attribute)": [[103, "NuRadioReco.framework.parameters.channelParameters.zenith"]], "zenith (nuradioreco.framework.parameters.electricfieldparameters attribute)": [[103, "NuRadioReco.framework.parameters.electricFieldParameters.zenith"]], "zenith (nuradioreco.framework.parameters.particleparameters attribute)": [[103, "NuRadioReco.framework.parameters.particleParameters.zenith"]], "zenith (nuradioreco.framework.parameters.showerparameters attribute)": [[103, "NuRadioReco.framework.parameters.showerParameters.zenith"]], "zenith (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.zenith"]], "zenith_cr_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.zenith_cr_templatefit"]], "zenith_nu_templatefit (nuradioreco.framework.parameters.stationparameters attribute)": [[103, "NuRadioReco.framework.parameters.stationParameters.zenith_nu_templatefit"]], "zmax (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.zmax"]], "zmin (nuradioreco.framework.parameters.generatorattributes attribute)": [[103, "NuRadioReco.framework.parameters.generatorAttributes.zmin"]], "nuradioreco.framework.particle": [[104, "module-NuRadioReco.framework.particle"]], "particle (class in nuradioreco.framework.particle)": [[104, "NuRadioReco.framework.particle.Particle"]], "as_hdf5_dict() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.as_hdf5_dict"]], "deserialize() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.deserialize"]], "get_id() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.get_id"]], "get_parameter() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.get_parameter"]], "get_parameters() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.get_parameters"]], "has_parameter() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.has_parameter"]], "serialize() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.serialize"]], "set_parameter() (nuradioreco.framework.particle.particle method)": [[104, "NuRadioReco.framework.particle.Particle.set_parameter"]], "nuradioreco.framework.radio_shower": [[105, "module-NuRadioReco.framework.radio_shower"]], "radioshower (class in nuradioreco.framework.radio_shower)": [[105, "NuRadioReco.framework.radio_shower.RadioShower"]], "deserialize() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.deserialize"]], "get_axis() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_axis"]], "get_coordinatesystem() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_coordinatesystem"]], "get_id() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_id"]], "get_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_parameter"]], "get_parameters() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_parameters"]], "get_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.get_station_ids"]], "has_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.has_parameter"]], "has_station_ids() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.has_station_ids"]], "serialize() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.serialize"]], "set_parameter() (nuradioreco.framework.radio_shower.radioshower method)": [[105, "NuRadioReco.framework.radio_shower.RadioShower.set_parameter"]], "nuradioreco.framework.sim_channel": [[106, "module-NuRadioReco.framework.sim_channel"]], "simchannel (class in nuradioreco.framework.sim_channel)": [[106, "NuRadioReco.framework.sim_channel.SimChannel"]], "add_to_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.add_to_trace"]], "add_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.add_trace_start_time"]], "apply_time_shift() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.apply_time_shift"]], "deserialize() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.deserialize"]], "get_filtered_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_filtered_trace"]], "get_frequencies() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_frequencies"]], "get_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_frequency_spectrum"]], "get_group_id() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_group_id"]], "get_hilbert_envelope() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope"]], "get_hilbert_envelope_mag() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_hilbert_envelope_mag"]], "get_id() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_id"]], "get_number_of_samples() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_number_of_samples"]], "get_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_parameters"]], "get_ray_tracing_solution_id() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_ray_tracing_solution_id"]], "get_sampling_rate() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_sampling_rate"]], "get_shower_id() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_shower_id"]], "get_times() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_times"]], "get_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_trace"]], "get_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_trace_start_time"]], "get_unique_identifier() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.get_unique_identifier"]], "has_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.has_parameter"]], "resample() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.resample"]], "serialize() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.serialize"]], "set_frequency_spectrum() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.set_frequency_spectrum"]], "set_parameter() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.set_parameter"]], "set_trace() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.set_trace"]], "set_trace_start_time() (nuradioreco.framework.sim_channel.simchannel method)": [[106, "NuRadioReco.framework.sim_channel.SimChannel.set_trace_start_time"]], "nuradioreco.framework.sim_emitter": [[107, "module-NuRadioReco.framework.sim_emitter"]], "simemitter (class in nuradioreco.framework.sim_emitter)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter"]], "deserialize() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.deserialize"]], "get_id() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.get_id"]], "get_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.get_parameter"]], "get_parameters() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.get_parameters"]], "get_station_ids() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.get_station_ids"]], "has_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.has_parameter"]], "has_station_ids() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.has_station_ids"]], "serialize() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.serialize"]], "set_parameter() (nuradioreco.framework.sim_emitter.simemitter method)": [[107, "NuRadioReco.framework.sim_emitter.SimEmitter.set_parameter"]], "nuradioreco.framework.sim_station": [[108, "module-NuRadioReco.framework.sim_station"]], "simstation (class in nuradioreco.framework.sim_station)": [[108, "NuRadioReco.framework.sim_station.SimStation"]], "add_channel() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.add_channel"]], "add_electric_field() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.add_electric_field"]], "deserialize() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_channel"]], "get_channel_ids() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_channel_ids"]], "get_channels_by_channel_id() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_channel_id"]], "get_channels_by_ray_tracing_id() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_ray_tracing_id"]], "get_channels_by_shower_id() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_channels_by_shower_id"]], "get_electric_field_ids() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_first_trigger"]], "get_id() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_magnetic_field_vector"]], "get_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_parameter"]], "get_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_parameter_error"]], "get_parameters() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_primary_trigger"]], "get_ray_tracing_ids() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_ray_tracing_ids"]], "get_shower_ids() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_shower_ids"]], "get_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_simulation_weight"]], "get_station_time() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_trigger"]], "get_triggers() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.has_ARIANNA_parameter"]], "has_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.has_parameter"]], "has_trigger() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.has_trigger"]], "has_triggered() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.has_triggered"]], "is_candidate() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.is_candidate"]], "is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.is_neutrino"]], "iter_channels() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.iter_channels"]], "remove_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.remove_parameter"]], "remove_triggers() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.remove_triggers"]], "serialize() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.serialize"]], "set_arianna_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_ARIANNA_parameter"]], "set_candidate() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_candidate"]], "set_electric_fields() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_is_neutrino"]], "set_magnetic_field_vector() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_magnetic_field_vector"]], "set_parameter() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_parameter"]], "set_parameter_error() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_parameter_error"]], "set_simulation_weight() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_simulation_weight"]], "set_station_time() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_station_time"]], "set_trigger() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_trigger"]], "set_triggered() (nuradioreco.framework.sim_station.simstation method)": [[108, "NuRadioReco.framework.sim_station.SimStation.set_triggered"]], "nuradioreco.framework.station": [[109, "module-NuRadioReco.framework.station"]], "station (class in nuradioreco.framework.station)": [[109, "NuRadioReco.framework.station.Station"]], "add_channel() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.add_channel"]], "add_electric_field() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.add_electric_field"]], "add_sim_station() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.add_sim_station"]], "deserialize() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.deserialize"]], "get_arianna_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_ARIANNA_parameter"]], "get_arianna_parameters() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_ARIANNA_parameters"]], "get_channel() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_channel"]], "get_channel_ids() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_channel_ids"]], "get_electric_field_ids() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_electric_field_ids"]], "get_electric_fields() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_electric_fields"]], "get_electric_fields_for_channels() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_electric_fields_for_channels"]], "get_first_trigger() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_first_trigger"]], "get_id() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_id"]], "get_magnetic_field_vector() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_magnetic_field_vector"]], "get_number_of_channels() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_number_of_channels"]], "get_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_parameter"]], "get_parameter_error() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_parameter_error"]], "get_parameters() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_parameters"]], "get_primary_trigger() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_primary_trigger"]], "get_reference_direction() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_reference_direction"]], "get_reference_reconstruction() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_reference_reconstruction"]], "get_sim_station() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_sim_station"]], "get_station_time() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_station_time"]], "get_station_time_dict() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_station_time_dict"]], "get_trigger() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_trigger"]], "get_triggers() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.get_triggers"]], "has_arianna_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_ARIANNA_parameter"]], "has_channel() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_channel"]], "has_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_parameter"]], "has_sim_station() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_sim_station"]], "has_trigger() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_trigger"]], "has_triggered() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.has_triggered"]], "is_cosmic_ray() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.is_cosmic_ray"]], "is_neutrino() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.is_neutrino"]], "iter_channel_group() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.iter_channel_group"]], "iter_channels() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.iter_channels"]], "remove_channel() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.remove_channel"]], "remove_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.remove_parameter"]], "remove_triggers() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.remove_triggers"]], "serialize() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.serialize"]], "set_arianna_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_ARIANNA_parameter"]], "set_electric_fields() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_electric_fields"]], "set_is_cosmic_ray() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_is_cosmic_ray"]], "set_is_neutrino() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_is_neutrino"]], "set_parameter() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_parameter"]], "set_parameter_error() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_parameter_error"]], "set_reference_reconstruction() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_reference_reconstruction"]], "set_sim_station() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_sim_station"]], "set_station_time() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_station_time"]], "set_trigger() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_trigger"]], "set_triggered() (nuradioreco.framework.station.station method)": [[109, "NuRadioReco.framework.station.Station.set_triggered"]], "envelopephasedtrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger"]], "envelopetrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger"]], "highlowtrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger"]], "integratedpowertrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger"]], "nuradioreco.framework.trigger": [[110, "module-NuRadioReco.framework.trigger"]], "rnogsurfacetrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger"]], "simplephasedtrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger"]], "simplethresholdtrigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger"]], "trigger (class in nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.Trigger"]], "deserialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.deserialize"]], "deserialize() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.deserialize"]], "deserialize() (in module nuradioreco.framework.trigger)": [[110, "NuRadioReco.framework.trigger.deserialize"]], "get_name() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_name"]], "get_name() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_name"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_time_channel"]], "get_pre_trigger_time_channel() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_time_channel"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_pre_trigger_times"]], "get_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_pre_trigger_times"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_settings"]], "get_trigger_settings() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_trigger_settings"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_time"]], "get_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_trigger_time"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_trigger_times"]], "get_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_trigger_times"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_triggered_channels"]], "get_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_triggered_channels"]], "get_type() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.get_type"]], "get_type() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.get_type"]], "has_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.has_triggered"]], "has_triggered() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.has_triggered"]], "is_primary() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.is_primary"]], "is_primary() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.is_primary"]], "serialize() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.serialize"]], "serialize() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.serialize"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_pre_trigger_times"]], "set_pre_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_pre_trigger_times"]], "set_primary() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_primary"]], "set_primary() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_primary"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_time"]], "set_trigger_time() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_trigger_time"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_trigger_times"]], "set_trigger_times() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_trigger_times"]], "set_triggered() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered"]], "set_triggered() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_triggered"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.envelopetrigger method)": [[110, "NuRadioReco.framework.trigger.EnvelopeTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.highlowtrigger method)": [[110, "NuRadioReco.framework.trigger.HighLowTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.integratedpowertrigger method)": [[110, "NuRadioReco.framework.trigger.IntegratedPowerTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.rnogsurfacetrigger method)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplephasedtrigger method)": [[110, "NuRadioReco.framework.trigger.SimplePhasedTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.simplethresholdtrigger method)": [[110, "NuRadioReco.framework.trigger.SimpleThresholdTrigger.set_triggered_channels"]], "set_triggered_channels() (nuradioreco.framework.trigger.trigger method)": [[110, "NuRadioReco.framework.trigger.Trigger.set_triggered_channels"]], "units (nuradioreco.framework.trigger.rnogsurfacetrigger attribute)": [[110, "NuRadioReco.framework.trigger.RNOGSurfaceTrigger.units"]], "nuradioreco.modules": [[111, "module-NuRadioReco.modules"]], "nuradioreco.modules.ara": [[112, "module-NuRadioReco.modules.ARA"]], "nuradioreco.modules.ara.hardwareresponseincorporator": [[113, "module-NuRadioReco.modules.ARA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[113, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[113, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "hardwareresponseincorporator (class in nuradioreco.modules.ara.hardwareresponseincorporator)": [[113, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.ara.hardwareresponseincorporator.hardwareresponseincorporator method)": [[113, "NuRadioReco.modules.ARA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.ara.triggersimulator": [[114, "module-NuRadioReco.modules.ARA.triggerSimulator"]], "end() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[114, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.end"]], "has_triggered() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[114, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.has_triggered"]], "run() (nuradioreco.modules.ara.triggersimulator.triggersimulator method)": [[114, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.ara.triggersimulator)": [[114, "NuRadioReco.modules.ARA.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.arianna": [[115, "module-NuRadioReco.modules.ARIANNA"]], "nuradioreco.modules.arianna.hardwareresponseincorporator": [[116, "module-NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.arianna.hardwareresponseincorporator)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.arianna.hardwareresponseincorporator.hardwareresponseincorporator method)": [[116, "NuRadioReco.modules.ARIANNA.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.lofar": [[117, "module-NuRadioReco.modules.LOFAR"]], "nuradioreco.modules.lofar.beamformingdirectionfitter_lofar": [[118, "module-NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR"]], "beamformingdirectionfitter (class in nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[118, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter"]], "begin() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[118, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.begin"]], "end() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[118, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.end"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamformingdirectionfitter_lofar)": [[118, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.geometric_delays"]], "run() (nuradioreco.modules.lofar.beamformingdirectionfitter_lofar.beamformingdirectionfitter method)": [[118, "NuRadioReco.modules.LOFAR.beamformingDirectionFitter_LOFAR.beamformingDirectionFitter.run"]], "geometricdelayfarfield() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[119, "NuRadioReco.modules.LOFAR.beamforming_utilities.GeometricDelayFarField"]], "nuradioreco.modules.lofar.beamforming_utilities": [[119, "module-NuRadioReco.modules.LOFAR.beamforming_utilities"]], "beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[119, "NuRadioReco.modules.LOFAR.beamforming_utilities.beamformer"]], "geometric_delays() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[119, "NuRadioReco.modules.LOFAR.beamforming_utilities.geometric_delays"]], "mini_beamformer() (in module nuradioreco.modules.lofar.beamforming_utilities)": [[119, "NuRadioReco.modules.LOFAR.beamforming_utilities.mini_beamformer"]], "nuradioreco.modules.lofar.stationgalacticcalibrator": [[120, "module-NuRadioReco.modules.LOFAR.stationGalacticCalibrator"]], "begin() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[120, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.begin"]], "end() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[120, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.end"]], "fourier_series() (in module nuradioreco.modules.lofar.stationgalacticcalibrator)": [[120, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.fourier_series"]], "run() (nuradioreco.modules.lofar.stationgalacticcalibrator.stationgalacticcalibrator method)": [[120, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator.run"]], "stationgalacticcalibrator (class in nuradioreco.modules.lofar.stationgalacticcalibrator)": [[120, "NuRadioReco.modules.LOFAR.stationGalacticCalibrator.stationGalacticCalibrator"]], "nuradioreco.modules.lofar.stationpulsefinder": [[121, "module-NuRadioReco.modules.LOFAR.stationPulseFinder"]], "begin() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[121, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.begin"]], "end() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[121, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.end"]], "find_snr_of_timeseries() (in module nuradioreco.modules.lofar.stationpulsefinder)": [[121, "NuRadioReco.modules.LOFAR.stationPulseFinder.find_snr_of_timeseries"]], "run() (nuradioreco.modules.lofar.stationpulsefinder.stationpulsefinder method)": [[121, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder.run"]], "stationpulsefinder (class in nuradioreco.modules.lofar.stationpulsefinder)": [[121, "NuRadioReco.modules.LOFAR.stationPulseFinder.stationPulseFinder"]], "findrfi_lofar() (in module nuradioreco.modules.lofar.stationrfifilter)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.FindRFI_LOFAR"]], "nuradioreco.modules.lofar.stationrfifilter": [[122, "module-NuRadioReco.modules.LOFAR.stationRFIFilter"]], "begin() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.begin"]], "end() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.end"]], "median_sorted_by_power() (in module nuradioreco.modules.lofar.stationrfifilter)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.median_sorted_by_power"]], "metadata_dir (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.metadata_dir"]], "num_double_zeros() (in module nuradioreco.modules.lofar.stationrfifilter)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.num_double_zeros"]], "run() (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter method)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.run"]], "stationrfifilter (class in nuradioreco.modules.lofar.stationrfifilter)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter"]], "station_list (nuradioreco.modules.lofar.stationrfifilter.stationrfifilter property)": [[122, "NuRadioReco.modules.LOFAR.stationRFIFilter.stationRFIFilter.station_list"]], "nuradioreco.modules.rno_g": [[123, "module-NuRadioReco.modules.RNO_G"]], "nuradioreco.modules.rno_g.channelblockoffsetfitter": [[124, "module-NuRadioReco.modules.RNO_G.channelBlockOffsetFitter"]], "add_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[124, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.add_offsets"]], "channelblockoffsets (class in nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[124, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets"]], "fit_block_offsets() (in module nuradioreco.modules.rno_g.channelblockoffsetfitter)": [[124, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.fit_block_offsets"]], "remove_offsets() (nuradioreco.modules.rno_g.channelblockoffsetfitter.channelblockoffsets method)": [[124, "NuRadioReco.modules.RNO_G.channelBlockOffsetFitter.channelBlockOffsets.remove_offsets"]], "nuradioreco.modules.rno_g.crrnogtemplatecreator": [[125, "module-NuRadioReco.modules.RNO_G.crRNOGTemplateCreator"]], "begin() (nuradioreco.modules.rno_g.crrnogtemplatecreator.crrnogtemplatecreator method)": [[125, "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.crRNOGTemplateCreator.begin"]], "crrnogtemplatecreator (class in nuradioreco.modules.rno_g.crrnogtemplatecreator)": [[125, "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.crRNOGTemplateCreator"]], "run() (nuradioreco.modules.rno_g.crrnogtemplatecreator.crrnogtemplatecreator method)": [[125, "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.crRNOGTemplateCreator.run"]], "set_template_parameter() (nuradioreco.modules.rno_g.crrnogtemplatecreator.crrnogtemplatecreator method)": [[125, "NuRadioReco.modules.RNO_G.crRNOGTemplateCreator.crRNOGTemplateCreator.set_template_parameter"]], "nuradioreco.modules.rno_g.hardwareresponseincorporator": [[126, "module-NuRadioReco.modules.RNO_G.hardwareResponseIncorporator"]], "begin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.begin"]], "end() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.end"]], "get_filter() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_filter"]], "get_mingainlin() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_mingainlin"]], "get_time_delay() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.get_time_delay"]], "hardwareresponseincorporator (class in nuradioreco.modules.rno_g.hardwareresponseincorporator)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator"]], "run() (nuradioreco.modules.rno_g.hardwareresponseincorporator.hardwareresponseincorporator method)": [[126, "NuRadioReco.modules.RNO_G.hardwareResponseIncorporator.hardwareResponseIncorporator.run"]], "nuradioreco.modules.rno_g.triggerboardresponse": [[127, "module-NuRadioReco.modules.RNO_G.triggerBoardResponse"]], "apply_adc_gain() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.apply_adc_gain"]], "apply_trigger_filter() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.apply_trigger_filter"]], "begin() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.begin"]], "digitize_trace() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.digitize_trace"]], "end() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.end"]], "get_avg_vrms() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.get_avg_vrms"]], "get_trigger_values() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.get_trigger_values"]], "run() (nuradioreco.modules.rno_g.triggerboardresponse.triggerboardresponse method)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse.run"]], "triggerboardresponse (class in nuradioreco.modules.rno_g.triggerboardresponse)": [[127, "NuRadioReco.modules.RNO_G.triggerBoardResponse.triggerBoardResponse"]], "nuradioreco.modules.analogtodigitalconverter": [[128, "module-NuRadioReco.modules.analogToDigitalConverter"]], "analogtodigitalconverter (class in nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter"]], "apply_saturation() (in module nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.apply_saturation"]], "end() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[128, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.end"]], "get_digital_trace() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[128, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.get_digital_trace"]], "perfect_ceiling_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.perfect_ceiling_comparator"]], "perfect_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.perfect_comparator"]], "perfect_floor_comparator() (in module nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.perfect_floor_comparator"]], "round_to_int() (in module nuradioreco.modules.analogtodigitalconverter)": [[128, "NuRadioReco.modules.analogToDigitalConverter.round_to_int"]], "run() (nuradioreco.modules.analogtodigitalconverter.analogtodigitalconverter method)": [[128, "NuRadioReco.modules.analogToDigitalConverter.analogToDigitalConverter.run"]], "nuradioreco.modules.base": [[129, "module-NuRadioReco.modules.base"]], "nuradioreco.modules.base.module": [[130, "module-NuRadioReco.modules.base.module"]], "register_run() (in module nuradioreco.modules.base.module)": [[130, "NuRadioReco.modules.base.module.register_run"]], "setup_logger() (in module nuradioreco.modules.base.module)": [[130, "NuRadioReco.modules.base.module.setup_logger"]], "nuradioreco.modules.beamformingdirectionfitter": [[131, "module-NuRadioReco.modules.beamFormingDirectionFitter"]], "beamformingdirectionfitter (class in nuradioreco.modules.beamformingdirectionfitter)": [[131, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter"]], "begin() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[131, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.begin"]], "end() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[131, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.end"]], "get_array_of_channels() (in module nuradioreco.modules.beamformingdirectionfitter)": [[131, "NuRadioReco.modules.beamFormingDirectionFitter.get_array_of_channels"]], "run() (nuradioreco.modules.beamformingdirectionfitter.beamformingdirectionfitter method)": [[131, "NuRadioReco.modules.beamFormingDirectionFitter.beamFormingDirectionFitter.run"]], "nuradioreco.modules.channeladdcabledelay": [[132, "module-NuRadioReco.modules.channelAddCableDelay"]], "channeladdcabledelay (class in nuradioreco.modules.channeladdcabledelay)": [[132, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay"]], "run() (nuradioreco.modules.channeladdcabledelay.channeladdcabledelay method)": [[132, "NuRadioReco.modules.channelAddCableDelay.channelAddCableDelay.run"]], "nuradioreco.modules.channelantennadedispersion": [[133, "module-NuRadioReco.modules.channelAntennaDedispersion"]], "channelantennadedispersion (class in nuradioreco.modules.channelantennadedispersion)": [[133, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion"]], "end() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[133, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.end"]], "run() (nuradioreco.modules.channelantennadedispersion.channelantennadedispersion method)": [[133, "NuRadioReco.modules.channelAntennaDedispersion.channelAntennaDedispersion.run"]], "nuradioreco.modules.channelbandpassfilter": [[134, "module-NuRadioReco.modules.channelBandPassFilter"]], "begin() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.begin"]], "channelbandpassfilter (class in nuradioreco.modules.channelbandpassfilter)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter"]], "end() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.end"]], "get_filter() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter"]], "get_filter_arguments() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter static method)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.get_filter_arguments"]], "run() (nuradioreco.modules.channelbandpassfilter.channelbandpassfilter method)": [[134, "NuRadioReco.modules.channelBandPassFilter.channelBandPassFilter.run"]], "test_equality() (in module nuradioreco.modules.channelbandpassfilter)": [[134, "NuRadioReco.modules.channelBandPassFilter.test_equality"]], "nuradioreco.modules.channelcwnotchfilter": [[135, "module-NuRadioReco.modules.channelCWNotchFilter"]], "begin() (nuradioreco.modules.channelcwnotchfilter.channelcwnotchfilter method)": [[135, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter.begin"]], "channelcwnotchfilter (class in nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter"]], "filter_cws() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.filter_cws"]], "find_frequency_peaks() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.find_frequency_peaks"]], "find_frequency_peaks_from_trace() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.find_frequency_peaks_from_trace"]], "get_filter() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.get_filter"]], "plot_ft() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.plot_ft"]], "plot_trace() (in module nuradioreco.modules.channelcwnotchfilter)": [[135, "NuRadioReco.modules.channelCWNotchFilter.plot_trace"]], "run() (nuradioreco.modules.channelcwnotchfilter.channelcwnotchfilter method)": [[135, "NuRadioReco.modules.channelCWNotchFilter.channelCWNotchFilter.run"]], "nuradioreco.modules.channelgalacticnoiseadder": [[136, "module-NuRadioReco.modules.channelGalacticNoiseAdder"]], "begin() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[136, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.begin"]], "channelgalacticnoiseadder (class in nuradioreco.modules.channelgalacticnoiseadder)": [[136, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder"]], "run() (nuradioreco.modules.channelgalacticnoiseadder.channelgalacticnoiseadder method)": [[136, "NuRadioReco.modules.channelGalacticNoiseAdder.channelGalacticNoiseAdder.run"]], "nuradioreco.modules.channelgenericnoiseadder": [[137, "module-NuRadioReco.modules.channelGenericNoiseAdder"]], "add_random_phases() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.add_random_phases"]], "bandlimited_noise() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise"]], "bandlimited_noise_from_precalculated_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_precalculated_parameters"]], "bandlimited_noise_from_spectrum() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.bandlimited_noise_from_spectrum"]], "begin() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.begin"]], "channelgenericnoiseadder (class in nuradioreco.modules.channelgenericnoiseadder)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder"]], "end() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.end"]], "fftnoise_fullfft() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.fftnoise_fullfft"]], "precalculate_bandlimited_noise_parameters() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.precalculate_bandlimited_noise_parameters"]], "run() (nuradioreco.modules.channelgenericnoiseadder.channelgenericnoiseadder method)": [[137, "NuRadioReco.modules.channelGenericNoiseAdder.channelGenericNoiseAdder.run"]], "nuradioreco.modules.channellengthadjuster": [[138, "module-NuRadioReco.modules.channelLengthAdjuster"]], "begin() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[138, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.begin"]], "channellengthadjuster (class in nuradioreco.modules.channellengthadjuster)": [[138, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster"]], "end() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[138, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.end"]], "run() (nuradioreco.modules.channellengthadjuster.channellengthadjuster method)": [[138, "NuRadioReco.modules.channelLengthAdjuster.channelLengthAdjuster.run"]], "nuradioreco.modules.channelresampler": [[139, "module-NuRadioReco.modules.channelResampler"]], "begin() (nuradioreco.modules.channelresampler.channelresampler method)": [[139, "NuRadioReco.modules.channelResampler.channelResampler.begin"]], "channelresampler (class in nuradioreco.modules.channelresampler)": [[139, "NuRadioReco.modules.channelResampler.channelResampler"]], "end() (nuradioreco.modules.channelresampler.channelresampler method)": [[139, "NuRadioReco.modules.channelResampler.channelResampler.end"]], "run() (nuradioreco.modules.channelresampler.channelresampler method)": [[139, "NuRadioReco.modules.channelResampler.channelResampler.run"]], "nuradioreco.modules.channelsignalreconstructor": [[140, "module-NuRadioReco.modules.channelSignalReconstructor"]], "begin() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[140, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.begin"]], "channelsignalreconstructor (class in nuradioreco.modules.channelsignalreconstructor)": [[140, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor"]], "end() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[140, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.end"]], "get_snr() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[140, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.get_SNR"]], "run() (nuradioreco.modules.channelsignalreconstructor.channelsignalreconstructor method)": [[140, "NuRadioReco.modules.channelSignalReconstructor.channelSignalReconstructor.run"]], "nuradioreco.modules.channelstopfilter": [[141, "module-NuRadioReco.modules.channelStopFilter"]], "begin() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[141, "NuRadioReco.modules.channelStopFilter.channelStopFilter.begin"]], "channelstopfilter (class in nuradioreco.modules.channelstopfilter)": [[141, "NuRadioReco.modules.channelStopFilter.channelStopFilter"]], "end() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[141, "NuRadioReco.modules.channelStopFilter.channelStopFilter.end"]], "run() (nuradioreco.modules.channelstopfilter.channelstopfilter method)": [[141, "NuRadioReco.modules.channelStopFilter.channelStopFilter.run"]], "nuradioreco.modules.channeltemplatecorrelation": [[142, "module-NuRadioReco.modules.channelTemplateCorrelation"]], "begin() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[142, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.begin"]], "channeltemplatecorrelation (class in nuradioreco.modules.channeltemplatecorrelation)": [[142, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation"]], "end() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[142, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.end"]], "match_sampling() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[142, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.match_sampling"]], "run() (nuradioreco.modules.channeltemplatecorrelation.channeltemplatecorrelation method)": [[142, "NuRadioReco.modules.channelTemplateCorrelation.channelTemplateCorrelation.run"]], "nuradioreco.modules.channeltimeoffsetcalculator": [[143, "module-NuRadioReco.modules.channelTimeOffsetCalculator"]], "begin() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[143, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.begin"]], "channeltimeoffsetcalculator (class in nuradioreco.modules.channeltimeoffsetcalculator)": [[143, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator"]], "run() (nuradioreco.modules.channeltimeoffsetcalculator.channeltimeoffsetcalculator method)": [[143, "NuRadioReco.modules.channelTimeOffsetCalculator.channelTimeOffsetCalculator.run"]], "nuradioreco.modules.channeltimewindow": [[144, "module-NuRadioReco.modules.channelTimeWindow"]], "begin() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[144, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.begin"]], "channeltimewindow (class in nuradioreco.modules.channeltimewindow)": [[144, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow"]], "end() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[144, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.end"]], "run() (nuradioreco.modules.channeltimewindow.channeltimewindow method)": [[144, "NuRadioReco.modules.channelTimeWindow.channelTimeWindow.run"]], "nuradioreco.modules.correlationdirectionfitter": [[145, "module-NuRadioReco.modules.correlationDirectionFitter"]], "begin() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[145, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.begin"]], "correlationdirectionfitter (class in nuradioreco.modules.correlationdirectionfitter)": [[145, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter"]], "end() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[145, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.end"]], "run() (nuradioreco.modules.correlationdirectionfitter.correlationdirectionfitter method)": [[145, "NuRadioReco.modules.correlationDirectionFitter.correlationDirectionFitter.run"]], "nuradioreco.modules.cosmicrayenergyreconstructor": [[146, "module-NuRadioReco.modules.cosmicRayEnergyReconstructor"]], "begin() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[146, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.begin"]], "cosmicrayenergyreconstructor (class in nuradioreco.modules.cosmicrayenergyreconstructor)": [[146, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor"]], "run() (nuradioreco.modules.cosmicrayenergyreconstructor.cosmicrayenergyreconstructor method)": [[146, "NuRadioReco.modules.cosmicRayEnergyReconstructor.cosmicRayEnergyReconstructor.run"]], "nuradioreco.modules.custom": [[147, "module-NuRadioReco.modules.custom"]], "nuradioreco.modules.custom.deltat": [[148, "module-NuRadioReco.modules.custom.deltaT"]], "nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution": [[149, "module-NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution"]], "begin() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[149, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.begin"]], "calculateamplitudeperraysolution (class in nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution)": [[149, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution"]], "end() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[149, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.end"]], "run() (nuradioreco.modules.custom.deltat.calculateamplitudeperraysolution.calculateamplitudeperraysolution method)": [[149, "NuRadioReco.modules.custom.deltaT.calculateAmplitudePerRaySolution.calculateAmplitudePerRaySolution.run"]], "nuradioreco.modules.efieldairtoicepropagator": [[150, "module-NuRadioReco.modules.efieldAirToIcePropagator"]], "begin() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[150, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.begin"]], "efieldairtoicepropagator (class in nuradioreco.modules.efieldairtoicepropagator)": [[150, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator"]], "end() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[150, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.end"]], "run() (nuradioreco.modules.efieldairtoicepropagator.efieldairtoicepropagator method)": [[150, "NuRadioReco.modules.efieldAirToIcePropagator.efieldAirToIcePropagator.run"]], "nuradioreco.modules.efieldradiointerferometricreconstruction": [[151, "module-NuRadioReco.modules.efieldRadioInterferometricReconstruction"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.begin"]], "begin() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.begin"]], "efieldinterferometricaxisreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco"]], "efieldinterferometricdepthreco (class in nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.end"]], "end() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.end"]], "find_maximum_in_plane() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.find_maximum_in_plane"]], "get_geometry_and_transformation() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_geometry_and_transformation"]], "get_station_data() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.get_station_data"]], "logger (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.logger"]], "plot_lateral_cross_section() (in module nuradioreco.modules.efieldradiointerferometricreconstruction)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.plot_lateral_cross_section"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_interferometric_depth"]], "reconstruct_interferometric_depth() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.reconstruct_interferometric_depth"]], "reconstruct_shower_axis() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.reconstruct_shower_axis"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.run"]], "run() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.run"]], "sample_lateral_cross_section() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_lateral_cross_section"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.sample_longitudinal_profile"]], "sample_longitudinal_profile() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.sample_longitudinal_profile"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricaxisreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricAxisReco.update_atmospheric_model_and_refractivity_table"]], "update_atmospheric_model_and_refractivity_table() (nuradioreco.modules.efieldradiointerferometricreconstruction.efieldinterferometricdepthreco method)": [[151, "NuRadioReco.modules.efieldRadioInterferometricReconstruction.efieldInterferometricDepthReco.update_atmospheric_model_and_refractivity_table"]], "nuradioreco.modules.efieldtimedirectionfitter": [[152, "module-NuRadioReco.modules.efieldTimeDirectionFitter"]], "begin() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[152, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.begin"]], "efieldtimedirectionfitter (class in nuradioreco.modules.efieldtimedirectionfitter)": [[152, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter"]], "end() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[152, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.end"]], "run() (nuradioreco.modules.efieldtimedirectionfitter.efieldtimedirectionfitter method)": [[152, "NuRadioReco.modules.efieldTimeDirectionFitter.efieldTimeDirectionFitter.run"]], "nuradioreco.modules.efieldtovoltageconverter": [[153, "module-NuRadioReco.modules.efieldToVoltageConverter"]], "begin() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[153, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.begin"]], "calculate_time_shift_for_cosmic_ray() (in module nuradioreco.modules.efieldtovoltageconverter)": [[153, "NuRadioReco.modules.efieldToVoltageConverter.calculate_time_shift_for_cosmic_ray"]], "efieldtovoltageconverter (class in nuradioreco.modules.efieldtovoltageconverter)": [[153, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter"]], "end() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[153, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.end"]], "run() (nuradioreco.modules.efieldtovoltageconverter.efieldtovoltageconverter method)": [[153, "NuRadioReco.modules.efieldToVoltageConverter.efieldToVoltageConverter.run"]], "nuradioreco.modules.efieldtovoltageconverterperefield": [[154, "module-NuRadioReco.modules.efieldToVoltageConverterPerEfield"]], "efieldtovoltageconverterperefield (class in nuradioreco.modules.efieldtovoltageconverterperefield)": [[154, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield"]], "end() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[154, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.end"]], "run() (nuradioreco.modules.efieldtovoltageconverterperefield.efieldtovoltageconverterperefield method)": [[154, "NuRadioReco.modules.efieldToVoltageConverterPerEfield.efieldToVoltageConverterPerEfield.run"]], "nuradioreco.modules.electricfieldbandpassfilter": [[155, "module-NuRadioReco.modules.electricFieldBandPassFilter"]], "begin() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[155, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.begin"]], "electricfieldbandpassfilter (class in nuradioreco.modules.electricfieldbandpassfilter)": [[155, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter"]], "end() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[155, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.end"]], "run() (nuradioreco.modules.electricfieldbandpassfilter.electricfieldbandpassfilter method)": [[155, "NuRadioReco.modules.electricFieldBandPassFilter.electricFieldBandPassFilter.run"]], "nuradioreco.modules.electricfieldresampler": [[156, "module-NuRadioReco.modules.electricFieldResampler"]], "begin() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[156, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.begin"]], "electricfieldresampler (class in nuradioreco.modules.electricfieldresampler)": [[156, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler"]], "end() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[156, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.end"]], "run() (nuradioreco.modules.electricfieldresampler.electricfieldresampler method)": [[156, "NuRadioReco.modules.electricFieldResampler.electricFieldResampler.run"]], "nuradioreco.modules.electricfieldsignalreconstructor": [[157, "module-NuRadioReco.modules.electricFieldSignalReconstructor"]], "begin() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[157, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.begin"]], "electricfieldsignalreconstructor (class in nuradioreco.modules.electricfieldsignalreconstructor)": [[157, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor"]], "end() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[157, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.end"]], "run() (nuradioreco.modules.electricfieldsignalreconstructor.electricfieldsignalreconstructor method)": [[157, "NuRadioReco.modules.electricFieldSignalReconstructor.electricFieldSignalReconstructor.run"]], "nuradioreco.modules.eventtypeidentifier": [[158, "module-NuRadioReco.modules.eventTypeIdentifier"]], "begin() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[158, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.begin"]], "eventtypeidentifier (class in nuradioreco.modules.eventtypeidentifier)": [[158, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier"]], "run() (nuradioreco.modules.eventtypeidentifier.eventtypeidentifier method)": [[158, "NuRadioReco.modules.eventTypeIdentifier.eventTypeIdentifier.run"]], "nuradioreco.modules.iftelectricfieldreconstructor": [[159, "module-NuRadioReco.modules.iftElectricFieldReconstructor"]], "iftelectricfieldreconstructor (class in nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor)": [[160, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor"]], "nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor": [[160, "module-NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor"]], "begin() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[160, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.begin"]], "make_priors_plot() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[160, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.make_priors_plot"]], "run() (nuradioreco.modules.iftelectricfieldreconstructor.iftelectricfieldreconstructor.iftelectricfieldreconstructor method)": [[160, "NuRadioReco.modules.iftElectricFieldReconstructor.iftElectricFieldReconstructor.IftElectricFieldReconstructor.run"]], "domainflipper (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper"]], "inserter (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter"]], "linearslopeoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator"]], "nuradioreco.modules.iftelectricfieldreconstructor.operators": [[161, "module-NuRadioReco.modules.iftElectricFieldReconstructor.operators"]], "slopespectrumoperator() (in module nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SlopeSpectrumOperator"]], "symmetrizingoperator (class in nuradioreco.modules.iftelectricfieldreconstructor.operators)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.domainflipper method)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.DomainFlipper.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.inserter method)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.Inserter.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.linearslopeoperator method)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.LinearSlopeOperator.apply"]], "apply() (nuradioreco.modules.iftelectricfieldreconstructor.operators.symmetrizingoperator method)": [[161, "NuRadioReco.modules.iftElectricFieldReconstructor.operators.SymmetrizingOperator.apply"]], "nuradioreco.modules.io": [[162, "module-NuRadioReco.modules.io"]], "nuradioreco.modules.io.lofar": [[163, "module-NuRadioReco.modules.io.LOFAR"]], "multifile_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1"]], "nuradioreco.modules.io.lofar.rawtbbio": [[164, "module-NuRadioReco.modules.io.LOFAR.rawTBBio"]], "tbbdata_dal1 (class in nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.close_file"]], "close_file() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.close_file"]], "decode_if_needed() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.decode_if_needed"]], "find_and_set_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.find_and_set_polarization_delay"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_ITRF_antenna_positions"]], "get_itrf_antenna_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_ITRF_antenna_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_LOFAR_centered_positions"]], "get_lofar_centered_positions() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_LOFAR_centered_positions"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_all_sample_numbers"]], "get_all_sample_numbers() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_all_sample_numbers"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_names"]], "get_antenna_names() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_names"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_antenna_set"]], "get_antenna_set() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_antenna_set"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_data"]], "get_data() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_data"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_filter_selection"]], "get_filter_selection() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_filter_selection"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_full_data_lengths"]], "get_full_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_full_data_lengths"]], "get_geometric_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_geometric_delays"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_data_lengths"]], "get_nominal_data_lengths() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_data_lengths"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_nominal_sample_number"]], "get_nominal_sample_number() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_nominal_sample_number"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_sample_frequency"]], "get_sample_frequency() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_sample_frequency"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_ID"]], "get_station_id() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_ID"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_station_name"]], "get_station_name() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_station_name"]], "get_time_from_second() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_time_from_second"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp"]], "get_timestamp() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timestamp"]], "get_timestamp_as_datetime() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timestamp_as_datetime"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_delays() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_delays"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_timing_callibration_phases"]], "get_timing_callibration_phases() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.get_timing_callibration_phases"]], "get_total_delays() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.get_total_delays"]], "has_antenna() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.has_antenna"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.needs_metadata"]], "needs_metadata() (nuradioreco.modules.io.lofar.rawtbbio.tbbdata_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.TBBData_Dal1.needs_metadata"]], "read_antenna_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_delays"]], "read_antenna_pol_flips() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_antenna_pol_flips"]], "read_bad_antennas() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_bad_antennas"]], "read_station_delays() (in module nuradioreco.modules.io.lofar.rawtbbio)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.read_station_delays"]], "set_odd_polarization_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_odd_polarization_delay"]], "set_polarization_flips() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_polarization_flips"]], "set_station_delay() (nuradioreco.modules.io.lofar.rawtbbio.multifile_dal1 method)": [[164, "NuRadioReco.modules.io.LOFAR.rawTBBio.MultiFile_Dal1.set_station_delay"]], "nuradioreco.modules.io.lofar.rawtbbio_metadata": [[165, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_metadata"]], "convertitrftolocal() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertITRFToLocal"]], "convertphase_to_timing() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.convertPhase_to_Timing"]], "getclockcorrectionfromparsetaddition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrectionFromParsetAddition"]], "getclockcorrections() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getClockCorrections"]], "getitrfantennaposition() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getItrfAntennaPosition"]], "getstationphasecalibration() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPhaseCalibration"]], "getstationpositions() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.getStationPositions"]], "make_antennaid_filter() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.make_antennaID_filter"]], "mapantennasetkeyword() (in module nuradioreco.modules.io.lofar.rawtbbio_metadata)": [[165, "NuRadioReco.modules.io.LOFAR.rawTBBio_metadata.mapAntennasetKeyword"]], "nuradioreco.modules.io.lofar.rawtbbio_utilities": [[166, "module-NuRadioReco.modules.io.LOFAR.rawTBBio_utilities"]], "antname_is_even() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[166, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.antName_is_even"]], "even_antname_to_odd() (in module nuradioreco.modules.io.lofar.rawtbbio_utilities)": [[166, "NuRadioReco.modules.io.LOFAR.rawTBBio_utilities.even_antName_to_odd"]], "nuradioreco.modules.io.lofar.readlofardata": [[167, "module-NuRadioReco.modules.io.LOFAR.readLOFARData"]], "begin() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.begin"]], "check_trace_quality() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.check_trace_quality"]], "close_file() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.close_file"]], "end() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.end"]], "getlofartraces (class in nuradioreco.modules.io.lofar.readlofardata)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces"]], "get_metadata() (in module nuradioreco.modules.io.lofar.readlofardata)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.get_metadata"]], "get_stations() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.get_stations"]], "get_trace() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.get_trace"]], "lora_timestamp_to_blocknumber() (in module nuradioreco.modules.io.lofar.readlofardata)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.lora_timestamp_to_blocknumber"]], "readlofardata (class in nuradioreco.modules.io.lofar.readlofardata)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData"]], "run() (nuradioreco.modules.io.lofar.readlofardata.readlofardata method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.readLOFARData.run"]], "setup_trace_loading() (nuradioreco.modules.io.lofar.readlofardata.getlofartraces method)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.getLOFARtraces.setup_trace_loading"]], "tbb_filetag_from_utc() (in module nuradioreco.modules.io.lofar.readlofardata)": [[167, "NuRadioReco.modules.io.LOFAR.readLOFARData.tbb_filetag_from_utc"]], "nuradioreco.modules.io.nuradiorecoio": [[168, "module-NuRadioReco.modules.io.NuRadioRecoio"]], "nuradiorecoio (class in nuradioreco.modules.io.nuradiorecoio)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio"]], "close_files() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.close_files"]], "get_detector() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_detector"]], "get_event() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event"]], "get_event_i() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_i"]], "get_event_ids() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_event_ids"]], "get_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_events"]], "get_filenames() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_filenames"]], "get_header() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_header"]], "get_n_events() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.get_n_events"]], "openfile() (nuradioreco.modules.io.nuradiorecoio.nuradiorecoio method)": [[168, "NuRadioReco.modules.io.NuRadioRecoio.NuRadioRecoio.openFile"]], "nuradioreco.modules.io.rno_g": [[169, "module-NuRadioReco.modules.io.RNO_G"]], "nuradioreco.modules.io.rno_g.readrnogdatamattak": [[170, "module-NuRadioReco.modules.io.RNO_G.readRNOGDataMattak"]], "add_selectors() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.add_selectors"]], "begin() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.begin"]], "end() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.end"]], "get_event() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event"]], "get_event_by_index() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_event_by_index"]], "get_events_information() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_events_information"]], "get_time_offset() (in module nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.get_time_offset"]], "get_waveforms() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.get_waveforms"]], "readrnogdata (class in nuradioreco.modules.io.rno_g.readrnogdatamattak)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData"]], "run() (nuradioreco.modules.io.rno_g.readrnogdatamattak.readrnogdata method)": [[170, "NuRadioReco.modules.io.RNO_G.readRNOGDataMattak.readRNOGData.run"]], "nuradioreco.modules.io.coreas": [[171, "module-NuRadioReco.modules.io.coreas"]], "nuradioreco.modules.io.coreas.coreas": [[172, "module-NuRadioReco.modules.io.coreas.coreas"]], "calculate_simulation_weights() (in module nuradioreco.modules.io.coreas.coreas)": [[172, "NuRadioReco.modules.io.coreas.coreas.calculate_simulation_weights"]], "get_angles() (in module nuradioreco.modules.io.coreas.coreas)": [[172, "NuRadioReco.modules.io.coreas.coreas.get_angles"]], "make_sim_shower() (in module nuradioreco.modules.io.coreas.coreas)": [[172, "NuRadioReco.modules.io.coreas.coreas.make_sim_shower"]], "make_sim_station() (in module nuradioreco.modules.io.coreas.coreas)": [[172, "NuRadioReco.modules.io.coreas.coreas.make_sim_station"]], "nuradioreco.modules.io.coreas.readcoreas": [[173, "module-NuRadioReco.modules.io.coreas.readCoREAS"]], "begin() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreas)": [[173, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreas.readcoreas method)": [[173, "NuRadioReco.modules.io.coreas.readCoREAS.readCoREAS.run"]], "nuradioreco.modules.io.coreas.readcoreasshower": [[174, "module-NuRadioReco.modules.io.coreas.readCoREASShower"]], "antenna_id() (in module nuradioreco.modules.io.coreas.readcoreasshower)": [[174, "NuRadioReco.modules.io.coreas.readCoREASShower.antenna_id"]], "begin() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[174, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[174, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.end"]], "readcoreasshower (class in nuradioreco.modules.io.coreas.readcoreasshower)": [[174, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower"]], "run() (nuradioreco.modules.io.coreas.readcoreasshower.readcoreasshower method)": [[174, "NuRadioReco.modules.io.coreas.readCoREASShower.readCoREASShower.run"]], "nuradioreco.modules.io.coreas.readcoreasstation": [[175, "module-NuRadioReco.modules.io.coreas.readCoREASStation"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[175, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[175, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.end"]], "readcoreasstation (class in nuradioreco.modules.io.coreas.readcoreasstation)": [[175, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation"]], "run() (nuradioreco.modules.io.coreas.readcoreasstation.readcoreasstation method)": [[175, "NuRadioReco.modules.io.coreas.readCoREASStation.readCoREASStation.run"]], "nuradioreco.modules.io.coreas.readcoreasstationgrid": [[176, "module-NuRadioReco.modules.io.coreas.readCoREASStationGrid"]], "begin() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[176, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.begin"]], "end() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[176, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.end"]], "readcoreas (class in nuradioreco.modules.io.coreas.readcoreasstationgrid)": [[176, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS"]], "run() (nuradioreco.modules.io.coreas.readcoreasstationgrid.readcoreas method)": [[176, "NuRadioReco.modules.io.coreas.readCoREASStationGrid.readCoREAS.run"]], "nuradioreco.modules.io.coreas.simulationselector": [[177, "module-NuRadioReco.modules.io.coreas.simulationSelector"]], "begin() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[177, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.begin"]], "end() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[177, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.end"]], "run() (nuradioreco.modules.io.coreas.simulationselector.simulationselector method)": [[177, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector.run"]], "simulationselector (class in nuradioreco.modules.io.coreas.simulationselector)": [[177, "NuRadioReco.modules.io.coreas.simulationSelector.simulationSelector"]], "nuradioreco.modules.io.eventreader": [[178, "module-NuRadioReco.modules.io.eventReader"]], "begin() (nuradioreco.modules.io.eventreader.eventreader method)": [[178, "NuRadioReco.modules.io.eventReader.eventReader.begin"]], "end() (nuradioreco.modules.io.eventreader.eventreader method)": [[178, "NuRadioReco.modules.io.eventReader.eventReader.end"]], "eventreader (class in nuradioreco.modules.io.eventreader)": [[178, "NuRadioReco.modules.io.eventReader.eventReader"]], "get_detector() (nuradioreco.modules.io.eventreader.eventreader method)": [[178, "NuRadioReco.modules.io.eventReader.eventReader.get_detector"]], "get_header() (nuradioreco.modules.io.eventreader.eventreader method)": [[178, "NuRadioReco.modules.io.eventReader.eventReader.get_header"]], "run() (nuradioreco.modules.io.eventreader.eventreader method)": [[178, "NuRadioReco.modules.io.eventReader.eventReader.run"]], "nuradioreco.modules.io.eventwriter": [[179, "module-NuRadioReco.modules.io.eventWriter"]], "begin() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[179, "NuRadioReco.modules.io.eventWriter.eventWriter.begin"]], "end() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[179, "NuRadioReco.modules.io.eventWriter.eventWriter.end"]], "eventwriter (class in nuradioreco.modules.io.eventwriter)": [[179, "NuRadioReco.modules.io.eventWriter.eventWriter"]], "get_header() (in module nuradioreco.modules.io.eventwriter)": [[179, "NuRadioReco.modules.io.eventWriter.get_header"]], "run() (nuradioreco.modules.io.eventwriter.eventwriter method)": [[179, "NuRadioReco.modules.io.eventWriter.eventWriter.run"]], "nuradioreco.modules.io.event_parser_factory": [[180, "module-NuRadioReco.modules.io.event_parser_factory"]], "iter_events_function() (in module nuradioreco.modules.io.event_parser_factory)": [[180, "NuRadioReco.modules.io.event_parser_factory.iter_events_function"]], "scan_files_function() (in module nuradioreco.modules.io.event_parser_factory)": [[180, "NuRadioReco.modules.io.event_parser_factory.scan_files_function"]], "nuradioreco.modules.io.snowshovel": [[181, "module-NuRadioReco.modules.io.snowshovel"]], "nuradioreco.modules.io.snowshovel.readariannadata": [[182, "module-NuRadioReco.modules.io.snowshovel.readARIANNAData"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[182, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[182, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadata)": [[182, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadata.readariannadata method)": [[182, "NuRadioReco.modules.io.snowshovel.readARIANNAData.readARIANNAData.run"]], "nuradioreco.modules.io.snowshovel.readariannadatacalib": [[183, "module-NuRadioReco.modules.io.snowshovel.readARIANNADataCalib"]], "begin() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[183, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.begin"]], "end() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[183, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.end"]], "readariannadata (class in nuradioreco.modules.io.snowshovel.readariannadatacalib)": [[183, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData"]], "run() (nuradioreco.modules.io.snowshovel.readariannadatacalib.readariannadata method)": [[183, "NuRadioReco.modules.io.snowshovel.readARIANNADataCalib.readARIANNAData.run"]], "nuradioreco.modules.measured_noise": [[184, "module-NuRadioReco.modules.measured_noise"]], "nuradioreco.modules.measured_noise.arianna": [[185, "module-NuRadioReco.modules.measured_noise.ARIANNA"]], "nuradioreco.modules.measured_noise.arianna.noiseimporterroot": [[186, "module-NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT"]], "begin() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[186, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[186, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.arianna.noiseimporterroot)": [[186, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.arianna.noiseimporterroot.noiseimporter method)": [[186, "NuRadioReco.modules.measured_noise.ARIANNA.noiseImporterROOT.noiseImporter.run"]], "nuradioreco.modules.measured_noise.rno_g": [[187, "module-NuRadioReco.modules.measured_noise.RNO_G"]], "nuradioreco.modules.measured_noise.rno_g.noiseimporter": [[188, "module-NuRadioReco.modules.measured_noise.RNO_G.noiseImporter"]], "begin() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[188, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.begin"]], "end() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[188, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.end"]], "noiseimporter (class in nuradioreco.modules.measured_noise.rno_g.noiseimporter)": [[188, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter"]], "run() (nuradioreco.modules.measured_noise.rno_g.noiseimporter.noiseimporter method)": [[188, "NuRadioReco.modules.measured_noise.RNO_G.noiseImporter.noiseImporter.run"]], "nuradioreco.modules.measured_noise.channelmeasurednoiseadder": [[189, "module-NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder"]], "begin() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[189, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.begin"]], "channelmeasurednoiseadder (class in nuradioreco.modules.measured_noise.channelmeasurednoiseadder)": [[189, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder"]], "end() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[189, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.end"]], "get_noise_station() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[189, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.get_noise_station"]], "run() (nuradioreco.modules.measured_noise.channelmeasurednoiseadder.channelmeasurednoiseadder method)": [[189, "NuRadioReco.modules.measured_noise.channelMeasuredNoiseAdder.channelMeasuredNoiseAdder.run"]], "nuradioreco.modules.neutrinodirectionreconstructor": [[190, "module-NuRadioReco.modules.neutrinoDirectionReconstructor"]], "nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos": [[191, "module-NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos"]], "begin() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[191, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.begin"]], "end() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[191, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.end"]], "run() (nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos.voltagetoanalyticefieldconverterneutrinos method)": [[191, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos.run"]], "voltagetoanalyticefieldconverterneutrinos (class in nuradioreco.modules.neutrinodirectionreconstructor.voltagetoefieldanalyticconverterforneutrinos)": [[191, "NuRadioReco.modules.neutrinoDirectionReconstructor.voltageToEfieldAnalyticConverterForNeutrinos.voltageToAnalyticEfieldConverterNeutrinos"]], "nuradioreco.modules.neutrinovertexreconstructor": [[192, "module-NuRadioReco.modules.neutrinoVertexReconstructor"]], "nuradioreco.modules.neutrinovertexreconstructor.create_lookup_table": [[193, "module-NuRadioReco.modules.neutrinoVertexReconstructor.create_lookup_table"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor": [[194, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.begin"]], "find_ray_type() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_ray_type"]], "find_receiving_zenith() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.find_receiving_zenith"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.get_signal_travel_time"]], "neutrino2dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino2dvertexreconstructor.neutrino2dvertexreconstructor method)": [[194, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino2DVertexReconstructor.neutrino2DVertexReconstructor.run"]], "nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor": [[195, "module-NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor"]], "begin() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.begin"]], "get_correlation_array_2d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_2d"]], "get_correlation_array_3d() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_array_3d"]], "get_correlation_for_pos() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_correlation_for_pos"]], "get_signal_travel_time() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.get_signal_travel_time"]], "neutrino3dvertexreconstructor (class in nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor"]], "run() (nuradioreco.modules.neutrinovertexreconstructor.neutrino3dvertexreconstructor.neutrino3dvertexreconstructor method)": [[195, "NuRadioReco.modules.neutrinoVertexReconstructor.neutrino3DVertexReconstructor.neutrino3DVertexReconstructor.run"]], "nuradioreco.modules.phasedarray": [[196, "module-NuRadioReco.modules.phasedarray"]], "nuradioreco.modules.phasedarray.triggersimulator": [[197, "module-NuRadioReco.modules.phasedarray.triggerSimulator"]], "begin() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.begin"]], "calculate_time_delays() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.calculate_time_delays"]], "check_vertical_string() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.check_vertical_string"]], "end() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.end"]], "get_antenna_positions() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_antenna_positions"]], "get_channel_trace_start_time() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.get_channel_trace_start_time"]], "phase_signals() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phase_signals"]], "phased_trigger() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.phased_trigger"]], "power_sum() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.power_sum"]], "run() (nuradioreco.modules.phasedarray.triggersimulator.triggersimulator method)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.phasedarray.triggersimulator)": [[197, "NuRadioReco.modules.phasedarray.triggerSimulator.triggerSimulator"]], "nuradioreco.modules.sphericalwavefitter": [[198, "module-NuRadioReco.modules.sphericalWaveFitter"]], "begin() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[198, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.begin"]], "end() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[198, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.end"]], "run() (nuradioreco.modules.sphericalwavefitter.sphericalwavefitter method)": [[198, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter.run"]], "sphericalwavefitter (class in nuradioreco.modules.sphericalwavefitter)": [[198, "NuRadioReco.modules.sphericalWaveFitter.sphericalWaveFitter"]], "nuradioreco.modules.templatedirectionfitter": [[199, "module-NuRadioReco.modules.templateDirectionFitter"]], "begin() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[199, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.begin"]], "end() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[199, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.end"]], "run() (nuradioreco.modules.templatedirectionfitter.templatedirectionfitter method)": [[199, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter.run"]], "templatedirectionfitter (class in nuradioreco.modules.templatedirectionfitter)": [[199, "NuRadioReco.modules.templateDirectionFitter.templateDirectionFitter"]], "nuradioreco.modules.trigger": [[200, "module-NuRadioReco.modules.trigger"]], "nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger": [[201, "module-NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger"]], "linear_fit() (in module nuradioreco.modules.trigger.calc_parameters_for_rnog_surface_trigger)": [[201, "NuRadioReco.modules.trigger.calc_parameters_for_rnog_surface_trigger.linear_fit"]], "nuradioreco.modules.trigger.envelopetrigger": [[202, "module-NuRadioReco.modules.trigger.envelopeTrigger"]], "begin() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.end"]], "get_envelope_triggers() (in module nuradioreco.modules.trigger.envelopetrigger)": [[202, "NuRadioReco.modules.trigger.envelopeTrigger.get_envelope_triggers"]], "run() (nuradioreco.modules.trigger.envelopetrigger.triggersimulator method)": [[202, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.envelopetrigger)": [[202, "NuRadioReco.modules.trigger.envelopeTrigger.triggerSimulator"]], "nuradioreco.modules.trigger.highlowthreshold": [[203, "module-NuRadioReco.modules.trigger.highLowThreshold"]], "begin() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.end"]], "get_high_low_triggers() (in module nuradioreco.modules.trigger.highlowthreshold)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.get_high_low_triggers"]], "get_majority_logic() (in module nuradioreco.modules.trigger.highlowthreshold)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.get_majority_logic"]], "run() (nuradioreco.modules.trigger.highlowthreshold.triggersimulator method)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.highlowthreshold)": [[203, "NuRadioReco.modules.trigger.highLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.multihighlowthreshold": [[204, "module-NuRadioReco.modules.trigger.multiHighLowThreshold"]], "begin() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.end"]], "get_high_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_high_triggers"]], "get_low_triggers() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_low_triggers"]], "get_multiple_high_low_trigger() (in module nuradioreco.modules.trigger.multihighlowthreshold)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.get_multiple_high_low_trigger"]], "run() (nuradioreco.modules.trigger.multihighlowthreshold.triggersimulator method)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.multihighlowthreshold)": [[204, "NuRadioReco.modules.trigger.multiHighLowThreshold.triggerSimulator"]], "nuradioreco.modules.trigger.powerintegration": [[205, "module-NuRadioReco.modules.trigger.powerIntegration"]], "begin() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[205, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[205, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.end"]], "get_power_int_triggers() (in module nuradioreco.modules.trigger.powerintegration)": [[205, "NuRadioReco.modules.trigger.powerIntegration.get_power_int_triggers"]], "run() (nuradioreco.modules.trigger.powerintegration.triggersimulator method)": [[205, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.powerintegration)": [[205, "NuRadioReco.modules.trigger.powerIntegration.triggerSimulator"]], "nuradioreco.modules.trigger.rnog_surface_trigger": [[206, "module-NuRadioReco.modules.trigger.rnog_surface_trigger"]], "begin() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[206, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[206, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.end"]], "run() (nuradioreco.modules.trigger.rnog_surface_trigger.triggersimulator method)": [[206, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator.run"]], "schottky_diode() (in module nuradioreco.modules.trigger.rnog_surface_trigger)": [[206, "NuRadioReco.modules.trigger.rnog_surface_trigger.schottky_diode"]], "triggersimulator (class in nuradioreco.modules.trigger.rnog_surface_trigger)": [[206, "NuRadioReco.modules.trigger.rnog_surface_trigger.triggerSimulator"]], "nuradioreco.modules.trigger.simplethreshold": [[207, "module-NuRadioReco.modules.trigger.simpleThreshold"]], "begin() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[207, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.begin"]], "end() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[207, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.end"]], "get_threshold_triggers() (in module nuradioreco.modules.trigger.simplethreshold)": [[207, "NuRadioReco.modules.trigger.simpleThreshold.get_threshold_triggers"]], "run() (nuradioreco.modules.trigger.simplethreshold.triggersimulator method)": [[207, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator.run"]], "triggersimulator (class in nuradioreco.modules.trigger.simplethreshold)": [[207, "NuRadioReco.modules.trigger.simpleThreshold.triggerSimulator"]], "nuradioreco.modules.triggertimeadjuster": [[208, "module-NuRadioReco.modules.triggerTimeAdjuster"]], "begin() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[208, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.begin"]], "get_pre_trigger_time() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[208, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.get_pre_trigger_time"]], "run() (nuradioreco.modules.triggertimeadjuster.triggertimeadjuster method)": [[208, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster.run"]], "triggertimeadjuster (class in nuradioreco.modules.triggertimeadjuster)": [[208, "NuRadioReco.modules.triggerTimeAdjuster.triggerTimeAdjuster"]], "nuradioreco.modules.voltagetoanalyticefieldconverter": [[209, "module-NuRadioReco.modules.voltageToAnalyticEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.begin"]], "covariance() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.covariance"]], "end() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.end"]], "run() (nuradioreco.modules.voltagetoanalyticefieldconverter.voltagetoanalyticefieldconverter method)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoanalyticefieldconverter)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.stacked_lstsq"]], "voltagetoanalyticefieldconverter (class in nuradioreco.modules.voltagetoanalyticefieldconverter)": [[209, "NuRadioReco.modules.voltageToAnalyticEfieldConverter.voltageToAnalyticEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverter": [[210, "module-NuRadioReco.modules.voltageToEfieldConverter"]], "begin() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.end"]], "get_array_of_channels() (in module nuradioreco.modules.voltagetoefieldconverter)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.get_array_of_channels"]], "run() (nuradioreco.modules.voltagetoefieldconverter.voltagetoefieldconverter method)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter.run"]], "stacked_lstsq() (in module nuradioreco.modules.voltagetoefieldconverter)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.stacked_lstsq"]], "voltagetoefieldconverter (class in nuradioreco.modules.voltagetoefieldconverter)": [[210, "NuRadioReco.modules.voltageToEfieldConverter.voltageToEfieldConverter"]], "nuradioreco.modules.voltagetoefieldconverterperchannel": [[211, "module-NuRadioReco.modules.voltageToEfieldConverterPerChannel"]], "begin() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[211, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.begin"]], "end() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[211, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.end"]], "run() (nuradioreco.modules.voltagetoefieldconverterperchannel.voltagetoefieldconverterperchannel method)": [[211, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel.run"]], "voltagetoefieldconverterperchannel (class in nuradioreco.modules.voltagetoefieldconverterperchannel)": [[211, "NuRadioReco.modules.voltageToEfieldConverterPerChannel.voltageToEfieldConverterPerChannel"]], "nuradioreco.utilities": [[212, "module-NuRadioReco.utilities"]], "nuradioreco.utilities.analytic_pulse": [[213, "module-NuRadioReco.utilities.analytic_pulse"]], "amp_from_energy() (in module nuradioreco.utilities.analytic_pulse)": [[213, "NuRadioReco.utilities.analytic_pulse.amp_from_energy"]], "get_analytic_pulse() (in module nuradioreco.utilities.analytic_pulse)": [[213, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse"]], "get_analytic_pulse_freq() (in module nuradioreco.utilities.analytic_pulse)": [[213, "NuRadioReco.utilities.analytic_pulse.get_analytic_pulse_freq"]], "nuradioreco.utilities.bandpass_filter": [[214, "module-NuRadioReco.utilities.bandpass_filter"]], "get_filter_response() (in module nuradioreco.utilities.bandpass_filter)": [[214, "NuRadioReco.utilities.bandpass_filter.get_filter_response"]], "nuradioreco.utilities.cr_flux": [[215, "module-NuRadioReco.utilities.cr_flux"]], "get_analytic_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.get_analytic_cr_flux"]], "get_cr_event_rate() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.get_cr_event_rate"]], "get_flux_per_energy_bin() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.get_flux_per_energy_bin"]], "get_interpolated_cr_flux() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.get_interpolated_cr_flux"]], "get_measured_data() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.get_measured_data"]], "plot_measured_spectrum() (in module nuradioreco.utilities.cr_flux)": [[215, "NuRadioReco.utilities.cr_flux.plot_measured_spectrum"]], "nuradioreco.utilities.dataservers": [[216, "module-NuRadioReco.utilities.dataservers"]], "download_from_dataserver() (in module nuradioreco.utilities.dataservers)": [[216, "NuRadioReco.utilities.dataservers.download_from_dataserver"]], "get_available_dataservers_by_responsetime() (in module nuradioreco.utilities.dataservers)": [[216, "NuRadioReco.utilities.dataservers.get_available_dataservers_by_responsetime"]], "nuradioreco.utilities.diodesimulator": [[217, "module-NuRadioReco.utilities.diodeSimulator"]], "calculate_noise_parameters() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[217, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.calculate_noise_parameters"]], "diodesimulator (class in nuradioreco.utilities.diodesimulator)": [[217, "NuRadioReco.utilities.diodeSimulator.diodeSimulator"]], "end() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[217, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.end"]], "tunnel_diode() (nuradioreco.utilities.diodesimulator.diodesimulator method)": [[217, "NuRadioReco.utilities.diodeSimulator.diodeSimulator.tunnel_diode"]], "nuradioreco.utilities.fft": [[218, "module-NuRadioReco.utilities.fft"]], "freq2time() (in module nuradioreco.utilities.fft)": [[218, "NuRadioReco.utilities.fft.freq2time"]], "freqs() (in module nuradioreco.utilities.fft)": [[218, "NuRadioReco.utilities.fft.freqs"]], "time2freq() (in module nuradioreco.utilities.fft)": [[218, "NuRadioReco.utilities.fft.time2freq"]], "nuradioreco.utilities.geometryutilities": [[219, "module-NuRadioReco.utilities.geometryUtilities"]], "get_efield_in_spherical_coords() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_efield_in_spherical_coords"]], "get_fresnel_angle() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_fresnel_angle"]], "get_fresnel_r_p() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_p"]], "get_fresnel_r_s() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_fresnel_r_s"]], "get_fresnel_t_p() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_p"]], "get_fresnel_t_s() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_fresnel_t_s"]], "get_time_delay_from_direction() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.get_time_delay_from_direction"]], "rot_x() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.rot_x"]], "rot_y() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.rot_y"]], "rot_z() (in module nuradioreco.utilities.geometryutilities)": [[219, "NuRadioReco.utilities.geometryUtilities.rot_z"]], "nuradioreco.utilities.ice": [[220, "module-NuRadioReco.utilities.ice"]], "get_refractive_index() (in module nuradioreco.utilities.ice)": [[220, "NuRadioReco.utilities.ice.get_refractive_index"]], "nuradioreco.utilities.interferometry": [[221, "module-NuRadioReco.utilities.interferometry"]], "fit_axis() (in module nuradioreco.utilities.interferometry)": [[221, "NuRadioReco.utilities.interferometry.fit_axis"]], "get_intersection_between_line_and_plane() (in module nuradioreco.utilities.interferometry)": [[221, "NuRadioReco.utilities.interferometry.get_intersection_between_line_and_plane"]], "get_signal() (in module nuradioreco.utilities.interferometry)": [[221, "NuRadioReco.utilities.interferometry.get_signal"]], "get_time_shifts() (in module nuradioreco.utilities.interferometry)": [[221, "NuRadioReco.utilities.interferometry.get_time_shifts"]], "interfere_traces_interpolation() (in module nuradioreco.utilities.interferometry)": [[221, "NuRadioReco.utilities.interferometry.interfere_traces_interpolation"]], "nuradioreco.utilities.io_utilities": [[222, "module-NuRadioReco.utilities.io_utilities"]], "read_pickle() (in module nuradioreco.utilities.io_utilities)": [[222, "NuRadioReco.utilities.io_utilities.read_pickle"]], "nuradiologger (class in nuradioreco.utilities.logging)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger"]], "nuradioreco.utilities.logging": [[223, "module-NuRadioReco.utilities.logging"]], "addfilter() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.addFilter"]], "addhandler() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.addHandler"]], "addlogginglevel() (in module nuradioreco.utilities.logging)": [[223, "NuRadioReco.utilities.logging.addLoggingLevel"]], "callhandlers() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.callHandlers"]], "critical() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.critical"]], "debug() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.debug"]], "error() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.error"]], "exception() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.exception"]], "fatal() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.fatal"]], "filter() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.filter"]], "findcaller() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.findCaller"]], "getchild() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.getChild"]], "geteffectivelevel() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.getEffectiveLevel"]], "get_fancy_formatter() (in module nuradioreco.utilities.logging)": [[223, "NuRadioReco.utilities.logging.get_fancy_formatter"]], "handle() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.handle"]], "hashandlers() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.hasHandlers"]], "info() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.info"]], "isenabledfor() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.isEnabledFor"]], "log() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.log"]], "makerecord() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.makeRecord"]], "manager (nuradioreco.utilities.logging.nuradiologger attribute)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.manager"]], "removefilter() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.removeFilter"]], "removehandler() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.removeHandler"]], "root (nuradioreco.utilities.logging.nuradiologger attribute)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.root"]], "setlevel() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.setLevel"]], "set_general_log_level() (in module nuradioreco.utilities.logging)": [[223, "NuRadioReco.utilities.logging.set_general_log_level"]], "status() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.status"]], "warn() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.warn"]], "warning() (nuradioreco.utilities.logging.nuradiologger method)": [[223, "NuRadioReco.utilities.logging.NuRadioLogger.warning"]], "nuradioreco.utilities.metaclasses": [[224, "module-NuRadioReco.utilities.metaclasses"]], "singleton (class in nuradioreco.utilities.metaclasses)": [[224, "NuRadioReco.utilities.metaclasses.Singleton"]], "mro() (nuradioreco.utilities.metaclasses.singleton method)": [[224, "NuRadioReco.utilities.metaclasses.Singleton.mro"]], "nuradioreco.utilities.noise": [[225, "module-NuRadioReco.utilities.noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegenerator method)": [[225, "NuRadioReco.utilities.noise.thermalNoiseGenerator.generate_noise"]], "generate_noise() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[225, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise"]], "generate_noise2() (nuradioreco.utilities.noise.thermalnoisegeneratorphasedarray method)": [[225, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray.generate_noise2"]], "rolled_sum_roll() (in module nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.rolled_sum_roll"]], "rolled_sum_slicing() (in module nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.rolled_sum_slicing"]], "rolled_sum_take() (in module nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.rolled_sum_take"]], "rolling_indices() (in module nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.rolling_indices"]], "thermalnoisegenerator (class in nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.thermalNoiseGenerator"]], "thermalnoisegeneratorphasedarray (class in nuradioreco.utilities.noise)": [[225, "NuRadioReco.utilities.noise.thermalNoiseGeneratorPhasedArray"]], "nuradioreco.utilities.particle_names": [[226, "module-NuRadioReco.utilities.particle_names"]], "particle_id() (in module nuradioreco.utilities.particle_names)": [[226, "NuRadioReco.utilities.particle_names.particle_id"]], "particle_name() (in module nuradioreco.utilities.particle_names)": [[226, "NuRadioReco.utilities.particle_names.particle_name"]], "nuradioreco.utilities.signal_processing": [[227, "module-NuRadioReco.utilities.signal_processing"]], "half_hann_window() (in module nuradioreco.utilities.signal_processing)": [[227, "NuRadioReco.utilities.signal_processing.half_hann_window"]], "nuradioreco.utilities.templates": [[228, "module-NuRadioReco.utilities.templates"]], "templates (class in nuradioreco.utilities.templates)": [[228, "NuRadioReco.utilities.templates.Templates"]], "get_cr_ref_template() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_cr_ref_template"]], "get_cr_ref_templates() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_cr_ref_templates"]], "get_nu_ref_template() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_nu_ref_template"]], "get_nu_ref_templates() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_nu_ref_templates"]], "get_set_of_cr_templates() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates"]], "get_set_of_cr_templates_full() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_set_of_cr_templates_full"]], "get_set_of_nu_templates() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.get_set_of_nu_templates"]], "set_template_directory() (nuradioreco.utilities.templates.templates method)": [[228, "NuRadioReco.utilities.templates.Templates.set_template_directory"]], "nuradioreco.utilities.timing": [[229, "module-NuRadioReco.utilities.timing"]], "analyze_timing() (in module nuradioreco.utilities.timing)": [[229, "NuRadioReco.utilities.timing.analyze_timing"]], "nuradioreco.utilities.tracewindows": [[230, "module-NuRadioReco.utilities.traceWindows"]], "get_window_around_maximum() (in module nuradioreco.utilities.tracewindows)": [[230, "NuRadioReco.utilities.traceWindows.get_window_around_maximum"]], "nuradioreco.utilities.trace_utilities": [[231, "module-NuRadioReco.utilities.trace_utilities"]], "apply_butterworth() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.apply_butterworth"]], "butterworth_filter_trace() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.butterworth_filter_trace"]], "delay_trace() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.delay_trace"]], "get_channel_voltage_from_efield() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.get_channel_voltage_from_efield"]], "get_efield_antenna_factor() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.get_efield_antenna_factor"]], "get_electric_field_energy_fluence() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.get_electric_field_energy_fluence"]], "get_stokes() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.get_stokes"]], "upsampling_fir() (in module nuradioreco.utilities.trace_utilities)": [[231, "NuRadioReco.utilities.trace_utilities.upsampling_fir"]], "nuradioreco.utilities.units": [[232, "module-NuRadioReco.utilities.units"]], "nuradioreco.utilities.variablewindowsizecorrelation": [[233, "module-NuRadioReco.utilities.variableWindowSizeCorrelation"]], "begin() (nuradioreco.utilities.variablewindowsizecorrelation.variablewindowsizecorrelation method)": [[233, "NuRadioReco.utilities.variableWindowSizeCorrelation.variableWindowSizeCorrelation.begin"]], "run() (nuradioreco.utilities.variablewindowsizecorrelation.variablewindowsizecorrelation method)": [[233, "NuRadioReco.utilities.variableWindowSizeCorrelation.variableWindowSizeCorrelation.run"]], "variablewindowsizecorrelation (class in nuradioreco.utilities.variablewindowsizecorrelation)": [[233, "NuRadioReco.utilities.variableWindowSizeCorrelation.variableWindowSizeCorrelation"]], "nuradioreco.utilities.version": [[234, "module-NuRadioReco.utilities.version"]], "get_nuradiomc_commit_hash() (in module nuradioreco.utilities.version)": [[234, "NuRadioReco.utilities.version.get_NuRadioMC_commit_hash"]], "get_nuradioreco_commit_hash() (in module nuradioreco.utilities.version)": [[234, "NuRadioReco.utilities.version.get_NuRadioReco_commit_hash"]], "get_git_commit_hash() (in module nuradioreco.utilities.version)": [[234, "NuRadioReco.utilities.version.get_git_commit_hash"]]}})